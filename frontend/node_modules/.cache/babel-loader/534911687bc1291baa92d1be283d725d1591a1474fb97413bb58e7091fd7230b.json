{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\Adore\\\\React_online_Store\\\\frontend\\\\src\\\\pages\\\\ClientOrders.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport { Tabs, Tab } from '../components/Tabs';\nimport classes from './clientorders.module.css';\nimport { AuthContext } from '../Context/auth-context';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClientOrders = () => {\n  _s();\n  const apiBaseUrl = \"http://localhost:5000\";\n  //process.env.REACT_APP_API_BASE_URL;\n  const [activeTab, setActiveTab] = useState('Created');\n  const [allOrders, setAllOrders] = useState([]);\n  const [activeOrders, setActiveOrders] = useState([]);\n  const [confirmedOrders, setConfirmedOrders] = useState([]);\n  const [cancelledOrders, setCancelledOrders] = useState([]);\n  const [dispatchedOrders, setDispatchedOrders] = useState([]);\n  const [deliveredOrders, setDeliveredOrders] = useState([]);\n  const [returnedOrders, setReturnedOrders] = useState([]);\n  const [refundedOrders, setRefundedOrders] = useState([]);\n  const [closedOrders, setClosedOrders] = useState([]);\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [adminSelectedOrders, setAdminSelectedOrders] = useState([]);\n  const [paymentId, setPaymentId] = useState(null);\n  const [amount, setAmount] = useState(0);\n  const {\n    userId,\n    token,\n    isAdmin,\n    isLoggedIn\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchOrders = async () => {\n      console.log(userId);\n      try {\n        let url = null;\n        console.log(\"admin\", isAdmin);\n        if (isAdmin) {\n          url = `${apiBaseUrl}/vendor/adminOrders/${userId}`;\n          const response = await fetch(url, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log(response);\n          if (!response) throw new Error('Could not fetch your orders');\n          const ordersResp = await response.json();\n          console.log(ordersResp);\n          const ordersData = ordersResp.data;\n          console.log(ordersData);\n          if (ordersData && ordersData.length) {\n            setAllOrders(ordersData);\n            const filterOrders = status => ordersData.map(order => ({\n              ...order,\n              clientOrders: order.clientOrders.filter(clientOrder => clientOrder.item_details.item_status === status)\n            })).filter(order => order.clientOrders.length > 0);\n            setActiveOrders(filterOrders('created'));\n            setDispatchedOrders(filterOrders('dispatched'));\n            setDeliveredOrders(filterOrders('delivered'));\n            setReturnedOrders(filterOrders('returned'));\n            setRefundedOrders(filterOrders('refunded'));\n            setClosedOrders(filterOrders('closed'));\n            //setClosedOrders(ordersData.filter(order => order.clientOrders.some(clientOrder=>clientOrder.status === 'closed')));\n            if (refundedOrders) console.log(refundedOrders);\n            if (closedOrders) console.log(closedOrders);\n          }\n        } else {\n          url = `${apiBaseUrl}/orders/clientOrders/${userId}`;\n          const response = await fetch(url, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log(response);\n          if (!response) throw new Error('Could not fetch your orders');\n          const ordersResp = await response.json();\n          const orders = ordersResp.data;\n          console.log(orders);\n          if (orders && orders.length) {\n            setAllOrders(orders);\n            const filterOrders = status => orders.filter(order => order.status === 'created') // Add this condition to filter orders by status\n            .map(order => ({\n              ...order,\n              items: order.items.filter(item => item.item_status === status) // Filter items by status\n            })).filter(order => order.items.length > 0); // Ensure the order has items left after filtering\n            console.log(allOrders);\n            setActiveOrders(allOrders.filter(order => order.status === 'created'));\n            setConfirmedOrders(filterOrders('created'));\n            setReturnedOrders(filterOrders('returned'));\n            setCancelledOrders(orders.filter(order => order.status === 'cancelled'));\n            setClosedOrders(orders.filter(order => order.status === 'closed'));\n            if (closedOrders) console.log(closedOrders);\n          }\n        }\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    fetchOrders();\n  }, [userId, navigate, activeTab, selectedOrders, adminSelectedOrders]);\n  const refundPayment = async () => {\n    console.log(paymentId, amount);\n    try {\n      const responseUser = await fetch(`http://localhost:5000/user/${userId}`);\n      if (responseUser) {\n        const userData = await responseUser.json();\n        console.log(userData);\n        const response = await fetch('http://localhost:5000/payment/paymentRefund', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            amount: amount,\n            paymentId: paymentId\n          })\n        });\n        console.log(response);\n        setAmount(0);\n        setPaymentId(null);\n        if (response) {\n          const resData = await response.json();\n          console.log(resData);\n          return {\n            success: resData.success,\n            data: resData.data\n          };\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const fetchOrderDetails = async (order_id, item_ids) => {\n    try {\n      let response = await fetch(`http://localhost:5000/orders/orderDetails/${order_id}`);\n      let {\n        data\n      } = await response.json();\n      console.log(data.rzr_payment_id);\n      setPaymentId(data.rzr_payment_id);\n      for (const item_id of item_ids) {\n        response = await fetch(`http://localhost:5000/orders/itemDetails/${order_id}/${item_id}`);\n        ({\n          data\n        } = await response.json());\n        console.log(data.items[0].amount);\n        setAmount(amount + data.items[0].amount);\n      }\n      if (data && amount) console.log(paymentId, amount);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const dispatchOrders = async (client_id, newStatus) => {\n    console.log(adminSelectedOrders);\n    if (!adminSelectedOrders || adminSelectedOrders.length === 0) {\n      alert(\"Select items by checking the boxes\");\n      return;\n    }\n    const currentDate = new Date().toISOString();\n    const ordersForClient = adminSelectedOrders.find(item => item.clientId === client_id).orders;\n    const itemsOfOrder = ordersForClient.reduce((acc, order) => {\n      const {\n        orderId,\n        itemId\n      } = order;\n      const existingOrder = acc.find(entry => entry.orderId === orderId);\n      if (existingOrder) {\n        existingOrder.itemIds.push(itemId);\n      } else {\n        acc.push({\n          orderId,\n          itemIds: [itemId]\n        });\n      }\n      return acc;\n    }, []);\n    console.log(ordersForClient[0]);\n    console.log(itemsOfOrder);\n    console.log(ordersForClient[0]);\n    console.log(itemsOfOrder);\n    try {\n      let response, status_update;\n      for (const order of itemsOfOrder) {\n        let statusMsg = '';\n        switch (newStatus) {\n          case 'dispatched':\n            statusMsg = `${order.itemIds.length} item(s) from your order ${order.orderId} have been dispatched on ${currentDate}.\\n They will be delivered to you in 2/3 working days `;\n            break;\n          case 'delivered':\n            statusMsg = `${order.itemIds.length} item(s) from your order ${order.orderId} have been delivered on ${currentDate}. `;\n            break;\n          case 'refunded':\n            {\n              console.log(adminSelectedOrders);\n              statusMsg = `Refund for ${order.itemIds.length} item(s) has been initiated on ${currentDate}. It will be credited to your account in 2/3 working days `;\n              fetchOrderDetails(order.orderId, [order.itemIds]);\n              if (paymentId && amount) console.log(paymentId, amount);else {\n                alert(\"Unable to refund. Please try again later!\");\n                return;\n              }\n              if (paymentId && amount) {\n                console.log(\"refunding\");\n                const result = await refundPayment();\n                if (!result.success) {\n                  alert(\"Unable to refund. Please try again!\");\n                  return;\n                }\n              }\n              break;\n            }\n        }\n        status_update = {\n          date: currentDate,\n          message: statusMsg\n        };\n        console.log(status_update);\n        response = await fetch(`${apiBaseUrl}/vendor/changeOrderStatus/${userId}`, {\n          method: 'PUT',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            orderId: order.orderId,\n            items: order.itemIds,\n            status: newStatus,\n            update_date: currentDate,\n            status_update: status_update\n          })\n        });\n        if (!response.ok) throw new Error('Failed to dispatch orders');\n        console.log(response);\n        response = await fetch(`${apiBaseUrl}/orders/updateStatus`, {\n          method: 'PUT',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            orderId: order.orderId,\n            client_id: client_id,\n            status_update: status_update,\n            items: order.itemIds,\n            status: newStatus,\n            update_date: currentDate\n          })\n        });\n        if (!response.ok) throw new Error('Failed to return orders');\n        console.log(response);\n      }\n      setAdminSelectedOrders([]);\n      alert('Orders dispatched successfully!');\n    } catch (err) {\n      console.error(err.message);\n      alert('Failed to dispatch orders');\n    }\n  };\n  const updateOrderStatus = async (orderId, itemIds, status, newStatus) => {\n    const confirmMsg = window.confirm(\"Are you sure you want to return?\");\n    if (confirmMsg) {\n      try {\n        const statusMsg = `Return initiated for $(itemIds.length) item(s) from order $(orderId).\\n Your payment refund will be initiated after the items reach our warehouse `;\n        const currentDate = new Date().toISOString();\n        const status_update = {\n          date: currentDate,\n          message: statusMsg\n        };\n        const response = await fetch(`http://localhost:5000/orders/updateStatus`, {\n          method: 'PUT',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            orderId,\n            client_id: userId,\n            items: itemIds,\n            status: newStatus,\n            update_date: currentDate,\n            status_update: status_update\n          })\n        });\n        if (!response.ok) throw new Error('Failed to return orders');\n        response = await fetch(`http://localhost:5000/vendor/returnOrder`, {\n          //userId is the client_id in Vendor\n          method: 'PUT',\n          headers: {\n            //  'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            orderId,\n            items: itemIds,\n            status: newStatus,\n            update_date: currentDate,\n            status_update: status_update,\n            client_id: userId\n          })\n        });\n        if (!response.ok) throw new Error('Failed to dispatch orders');\n        setSelectedOrders([]);\n        alert(statusMsg);\n      } catch (err) {\n        console.error(err.message);\n        alert('Failed to return orders');\n      }\n      console.log(selectedOrders);\n    }\n  };\n  const toggleOrderSelection = (orderId, itemId) => {\n    setSelectedOrders(prevSelected => {\n      const newSelected = {\n        ...prevSelected\n      };\n      if (!newSelected[orderId]) {\n        newSelected[orderId] = [];\n      }\n      if (newSelected[orderId].includes(itemId)) {\n        newSelected[orderId] = newSelected[orderId].filter(id => id !== itemId);\n        if (newSelected[orderId].length === 0) delete newSelected[orderId];\n      } else {\n        newSelected[orderId].push(itemId);\n      }\n      return newSelected;\n    });\n  };\n  const admin_toggleOrderSelection = (clientId, orderId, itemId) => {\n    console.log(clientId, orderId, itemId);\n    console.log(adminSelectedOrders);\n    setAdminSelectedOrders(prevSelected => {\n      const newSelected = [...prevSelected];\n      const clientIndex = newSelected.findIndex(item => item.clientId === clientId);\n      console.log('========', JSON.stringify(newSelected), orderId, itemId, \"===========\");\n      console.log(clientIndex);\n      if (clientIndex === -1) {\n        // If clientId is not present, add a new entry\n        newSelected.push({\n          clientId,\n          orders: [{\n            orderId,\n            itemId\n          }]\n        });\n      } else {\n        // If clientId is present, toggle the order selection\n        const clientOrders = [...newSelected[clientIndex].orders]; // Clone the clientOrders array\n\n        console.log(JSON.stringify(clientOrders));\n        const orderIndex = clientOrders.findIndex(order => order.orderId === orderId && order.itemId === itemId);\n        console.log(orderIndex);\n        if (orderIndex !== -1) {\n          // If the order is present, remove it\n          clientOrders.splice(orderIndex, 1);\n          if (clientOrders.length === 0) {\n            // Remove the client entry if no orders left\n            newSelected.splice(clientIndex, 1);\n          } else {\n            // Update the orders for the client\n            newSelected[clientIndex] = {\n              ...newSelected[clientIndex],\n              orders: clientOrders\n            };\n          }\n        } else {\n          // If the order is not present, add it\n          clientOrders.push({\n            orderId,\n            itemId\n          });\n          // Update the orders for the client\n          newSelected[clientIndex] = {\n            ...newSelected[clientIndex],\n            orders: clientOrders\n          };\n        }\n      }\n      console.log(JSON.stringify(newSelected));\n      return newSelected;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Recent Orders\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Recent Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 11\n          }, this), confirmedOrders && confirmedOrders.length > 0 ? confirmedOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: 'solid 1px',\n              maxWidth: '1200px',\n              margin: '0 auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(NavLink, {\n                    style: {\n                      color: 'blue',\n                      textDecoration: 'none',\n                      border: 'none',\n                      display: 'flex',\n                      alignItems: 'center',\n                      marginBottom: '10px'\n                    },\n                    to: `/order_item_track/${order._id}/${item.id}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        width: '100px',\n                        minWidth: '100px'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        style: {\n                          height: '100px',\n                          width: '100px'\n                        },\n                        src: item.image[0]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 76\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 30\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          width: '400px',\n                          minWidth: '400px',\n                          textAlign: 'left'\n                        },\n                        children: [item.type, \" \", item.sub_category, \" \", item.category]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 34\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          width: '400px',\n                          minWidth: '400px',\n                          textAlign: 'left'\n                        },\n                        children: [item.item_status, \" \", moment(item.update_date).format('MMMM D, YYYY h:mm:ss A')]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 34\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 30\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 25\n                  }, this)\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this)\n          }, order._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'left'\n            },\n            children: \"No recent Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 12\n          }, this), closedOrders && closedOrders.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Buy again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 9\n            }, this), closedOrders.map(order => /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: classes.grid_list,\n              children: order.items && order.items.length > 0 && order.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: classes.grid_item,\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  style: {\n                    color: 'blue',\n                    textDecoration: 'none',\n                    border: 'none'\n                  },\n                  to: `/fabrics/${item.id}/${item.category}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: '100px',\n                      minWidth: '100px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      style: {\n                        height: '100px',\n                        width: '100px'\n                      },\n                      src: item.image[0]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: '400px',\n                      minWidth: '400px',\n                      textAlign: 'left'\n                    },\n                    children: item.desc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 14\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 14\n              }, this))\n            }, order._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 9\n            }, this))]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Returned\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Returned Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 11\n          }, this), returnedOrders && returnedOrders.length > 0 ? returnedOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: 'solid 1px',\n              maxWidth: '1200px',\n              margin: '0 auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                    style: {\n                      color: 'blue',\n                      textDecoration: 'none',\n                      border: 'none',\n                      marginBottom: '10px'\n                    },\n                    to: `/fabrics/${item.id}/${item.category}`,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          width: '100px',\n                          minWidth: '100px'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          style: {\n                            height: '100px',\n                            width: '100px'\n                          },\n                          src: item.image[0]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 439,\n                          columnNumber: 72\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 26\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          width: '400px',\n                          minWidth: '400px',\n                          textAlign: 'left'\n                        },\n                        children: item.desc\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 26\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 21\n                  }, this), item.status_updates && item.status_updates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: '400px',\n                      minWidth: '400px',\n                      textAlign: 'left'\n                    },\n                    children: [item.status_updates[item.status_updates.length - 1].message, \" \", moment(item.update_date).format('MMMM D, YYYY h:mm:ss A')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 30\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 13\n            }, this)\n          }, order._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No returned orders found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Canceled\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Canceled Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 11\n          }, this), cancelledOrders && cancelledOrders.length > 0 ? cancelledOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  style: {\n                    color: 'blue',\n                    textDecoration: 'none',\n                    border: 'none',\n                    marginBottom: '10px'\n                  },\n                  to: `/fabrics/${item.id}/${item.category}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        width: '100px',\n                        minWidth: '100px'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        style: {\n                          height: '100px',\n                          width: '100px'\n                        },\n                        src: item.image[0]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 469,\n                        columnNumber: 68\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 22\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        width: '200px',\n                        minWidth: '200px',\n                        textAlign: 'left'\n                      },\n                      children: item.desc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 22\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 17\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No canceled orders found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 7\n      }, this)\n    }, void 0, false) :\n    /*#__PURE__*/\n    //Admin\n    _jsxDEV(Tabs, {\n      activeTab: activeTab,\n      handleTabClick: setActiveTab,\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Confirmed\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.heading,\n          children: \"Created Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), activeOrders && activeOrders.length ? activeOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.orderContainer,\n          style: {\n            border: '1px solid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Client Id: \", order.client_id]\n          }, order.client_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.order_summary,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Item code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100px',\n                minWidth: '100px'\n              },\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '300px',\n                minWidth: '300px'\n              },\n              children: \"Item Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  color: 'black'\n                },\n                onClick: () => dispatchOrders(order.client_id, 'dispatched'),\n                children: \"Dispatch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), order.clientOrders && order.clientOrders.map(clientOrder => {\n            var _adminSelectedOrders$;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.order_summary,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '250px',\n                    minWidth: '250px'\n                  },\n                  children: clientOrder.order_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '250px',\n                    minWidth: '250px'\n                  },\n                  children: clientOrder.item_details.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '100px',\n                    minWidth: '100px'\n                  },\n                  children: clientOrder.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '300px',\n                    minWidth: '300px'\n                  },\n                  children: clientOrder.item_details.desc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_adminSelectedOrders$ = adminSelectedOrders.find(item => item.clientId === order.client_id)) === null || _adminSelectedOrders$ === void 0 ? void 0 : _adminSelectedOrders$.orders.some(order => order.orderId === clientOrder.order_id && order.itemId === clientOrder.item_details.id)) || false,\n                  onChange: () => admin_toggleOrderSelection(order.client_id, clientOrder.order_id, clientOrder.item_details.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 16\n                }, this)]\n              }, clientOrder.order_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 13\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No active orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Dispatched\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.heading,\n          children: \"Dispatched Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), dispatchedOrders && dispatchedOrders.length ? dispatchedOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.orderContainer,\n          style: {\n            border: '1px solid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Client ID: \", order.client_id]\n          }, order.client_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.order_summary,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Item code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100px',\n                minWidth: '100px'\n              },\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '300px',\n                minWidth: '300px'\n              },\n              children: \"Item Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  color: 'black'\n                },\n                onClick: () => dispatchOrders(order.client_id, 'delivered'),\n                children: \"Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), order.clientOrders && order.clientOrders.map(clientOrder => {\n            var _adminSelectedOrders$2;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.order_summary,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '250px',\n                    minWidth: '250px'\n                  },\n                  children: clientOrder.order_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '250px',\n                    minWidth: '250px'\n                  },\n                  children: clientOrder.item_details.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '100px',\n                    minWidth: '100px'\n                  },\n                  children: clientOrder.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '300px',\n                    minWidth: '300px'\n                  },\n                  children: clientOrder.item_details.desc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_adminSelectedOrders$2 = adminSelectedOrders.find(item => item.clientId === order.client_id)) === null || _adminSelectedOrders$2 === void 0 ? void 0 : _adminSelectedOrders$2.orders.some(order => order.orderId === clientOrder.order_id && order.itemId === clientOrder.item_details.id)) || false,\n                  onChange: () => admin_toggleOrderSelection(order.client_id, clientOrder.order_id, clientOrder.item_details.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 17\n                }, this)]\n              }, clientOrder.order_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No dispatched orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Delivered\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.heading,\n          children: \"Delivered Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), deliveredOrders && deliveredOrders.length ? deliveredOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.orderContainer,\n          style: {\n            border: '1px solid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Client Id:\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", order.client_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 54\n            }, this)]\n          }, order.client_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.order_summary,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Item code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100px',\n                minWidth: '100px'\n              },\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '300px',\n                minWidth: '300px'\n              },\n              children: \"Item Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 17\n          }, this), order.clientOrders && order.clientOrders.map(clientOrder => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.order_summary,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '250px',\n                  minWidth: '250px'\n                },\n                children: clientOrder.order_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '250px',\n                  minWidth: '250px'\n                },\n                children: clientOrder.item_details.item_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '100px',\n                  minWidth: '100px'\n                },\n                children: clientOrder.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '300px',\n                  minWidth: '300px'\n                },\n                children: [clientOrder.item_details.desc, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 25\n              }, this)]\n            }, clientOrder.order_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 21\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No delivered orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Returned\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.heading,\n          children: \"Returned Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), returnedOrders && returnedOrders.length ? returnedOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.orderContainer,\n          style: {\n            border: '1px solid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Client Id:\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", order.client_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 52\n            }, this)]\n          }, order.client_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.order_summary,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Item code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100px',\n                minWidth: '100px'\n              },\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '300px',\n                minWidth: '300px'\n              },\n              children: \"Item Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  color: 'black'\n                },\n                onClick: () => dispatchOrders(order.client_id, 'refunded'),\n                children: \"Order Refunded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this), order.clientOrders && order.clientOrders.map(clientOrder => {\n            var _adminSelectedOrders$3;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.order_summary,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '250px',\n                    minWidth: '250px'\n                  },\n                  children: clientOrder.order_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '250px',\n                    minWidth: '250px'\n                  },\n                  children: clientOrder.item_details.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '100px',\n                    minWidth: '100px'\n                  },\n                  children: clientOrder.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '300px',\n                    minWidth: '300px'\n                  },\n                  children: clientOrder.item_details.desc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_adminSelectedOrders$3 = adminSelectedOrders.find(item => item.clientId === order.client_id)) === null || _adminSelectedOrders$3 === void 0 ? void 0 : _adminSelectedOrders$3.orders.some(order => order.orderId === clientOrder.order_id && order.itemId === clientOrder.item_details.id)) || false,\n                  onChange: () => admin_toggleOrderSelection(order.client_id, clientOrder.order_id, clientOrder.item_details.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 15\n                }, this)]\n              }, clientOrder.order_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No returned orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Refunded\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.heading,\n          children: \"Refunded Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 19\n        }, this), refundedOrders && refundedOrders.length ? refundedOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.orderContainer,\n          style: {\n            border: '1px solid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Client Id:\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", order.client_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 62\n            }, this)]\n          }, order.client_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.order_summary,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Item code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100px',\n                minWidth: '100px'\n              },\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '300px',\n                minWidth: '300px'\n              },\n              children: \"Item Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 25\n          }, this), order.clientOrders && order.clientOrders.map(clientOrder => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.order_summary,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '250px',\n                  minWidth: '250px'\n                },\n                children: clientOrder.order_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '250px',\n                  minWidth: '250px'\n                },\n                children: clientOrder.item_details.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '100px',\n                  minWidth: '100px'\n                },\n                children: clientOrder.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '300px',\n                  minWidth: '300px'\n                },\n                children: [clientOrder.item_details.desc, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 33\n              }, this)]\n            }, clientOrder.order_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 29\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 23\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No orders refunded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Closed\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.heading,\n          children: \"Closed Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 27\n        }, this), closedOrders && closedOrders.length ? closedOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.orderContainer,\n          style: {\n            border: '1px solid'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Client Id:\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", order.client_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 70\n            }, this)]\n          }, order.client_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.order_summary,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                minWidth: '250px'\n              },\n              children: \"Item code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100px',\n                minWidth: '100px'\n              },\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '300px',\n                minWidth: '300px'\n              },\n              children: \"Item Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 33\n          }, this), order.clientOrders && order.clientOrders.map(clientOrder => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.order_summary,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '250px',\n                  minWidth: '250px'\n                },\n                children: clientOrder.order_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '250px',\n                  minWidth: '250px'\n                },\n                children: clientOrder.item_details.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '100px',\n                  minWidth: '100px'\n                },\n                children: clientOrder.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '300px',\n                  minWidth: '300px'\n                },\n                children: clientOrder.item_details.desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 41\n              }, this)]\n            }, clientOrder.order_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 37\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 31\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No closed orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n_s(ClientOrders, \"tKpSpt+s+Vh1aLkVXQtAcF8WbI4=\", false, function () {\n  return [useNavigate];\n});\n_c = ClientOrders;\nexport default ClientOrders;\nvar _c;\n$RefreshReg$(_c, \"ClientOrders\");","map":{"version":3,"names":["useState","useEffect","useContext","Tabs","Tab","classes","AuthContext","NavLink","useNavigate","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","ClientOrders","_s","apiBaseUrl","activeTab","setActiveTab","allOrders","setAllOrders","activeOrders","setActiveOrders","confirmedOrders","setConfirmedOrders","cancelledOrders","setCancelledOrders","dispatchedOrders","setDispatchedOrders","deliveredOrders","setDeliveredOrders","returnedOrders","setReturnedOrders","refundedOrders","setRefundedOrders","closedOrders","setClosedOrders","selectedOrders","setSelectedOrders","adminSelectedOrders","setAdminSelectedOrders","paymentId","setPaymentId","amount","setAmount","userId","token","isAdmin","isLoggedIn","navigate","fetchOrders","console","log","url","response","fetch","headers","Error","ordersResp","json","ordersData","data","length","filterOrders","status","map","order","clientOrders","filter","clientOrder","item_details","item_status","orders","items","item","err","message","refundPayment","responseUser","userData","method","body","JSON","stringify","resData","success","error","fetchOrderDetails","order_id","item_ids","rzr_payment_id","item_id","dispatchOrders","client_id","newStatus","alert","currentDate","Date","toISOString","ordersForClient","find","clientId","itemsOfOrder","reduce","acc","orderId","itemId","existingOrder","entry","itemIds","push","status_update","statusMsg","result","date","update_date","ok","updateOrderStatus","confirmMsg","window","confirm","toggleOrderSelection","prevSelected","newSelected","includes","id","admin_toggleOrderSelection","clientIndex","findIndex","orderIndex","splice","children","style","width","label","fileName","_jsxFileName","lineNumber","columnNumber","border","maxWidth","margin","color","textDecoration","display","alignItems","marginBottom","to","_id","minWidth","height","src","image","textAlign","type","sub_category","category","format","className","grid_list","grid_item","desc","status_updates","handleTabClick","heading","orderContainer","order_summary","onClick","_adminSelectedOrders$","quantity","checked","some","onChange","_adminSelectedOrders$2","_adminSelectedOrders$3","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/Adore/React_online_Store/frontend/src/pages/ClientOrders.js"],"sourcesContent":["import {useState, useEffect, useContext} from 'react';\r\nimport { Tabs, Tab } from '../components/Tabs';\r\nimport classes from './clientorders.module.css';\r\nimport {AuthContext} from '../Context/auth-context';\r\nimport {NavLink, useNavigate} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ClientOrders = () => {\r\nconst apiBaseUrl = \"http://localhost:5000\"\r\n//process.env.REACT_APP_API_BASE_URL;\r\nconst [activeTab,setActiveTab]=useState('Created');\r\nconst [allOrders,setAllOrders]=useState([]);\r\nconst [activeOrders,setActiveOrders]=useState([]);\r\nconst [confirmedOrders,setConfirmedOrders]=useState([]);\r\nconst [cancelledOrders,setCancelledOrders]=useState([]);\r\nconst [dispatchedOrders,setDispatchedOrders]=useState([]);\r\nconst [deliveredOrders,setDeliveredOrders]=useState([]);\r\nconst [returnedOrders,setReturnedOrders]=useState([]);\r\nconst [refundedOrders,setRefundedOrders]=useState([]);\r\n\r\nconst [closedOrders,setClosedOrders]=useState([]);\r\n\r\nconst [selectedOrders, setSelectedOrders] = useState([]);\r\nconst [adminSelectedOrders, setAdminSelectedOrders] = useState([]);\r\nconst [paymentId, setPaymentId] = useState(null);\r\nconst [amount, setAmount] = useState(0);\r\nconst {userId, token, isAdmin, isLoggedIn}=useContext(AuthContext);\r\n    const navigate=useNavigate();\r\n\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n      const fetchOrders=async()=>{\r\n      console.log(userId);\r\n\r\n          try{\r\n          let url=null;\r\n          console.log(\"admin\",isAdmin);\r\n          if(isAdmin){\r\n                url=`${apiBaseUrl}/vendor/adminOrders/${userId}`;\r\n                const response=await fetch(url,{\r\n                headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                },});\r\n                console.log(response);\r\n                if(!response)\r\n                    throw new Error('Could not fetch your orders');\r\n                const ordersResp=await response.json();\r\n                console.log(ordersResp);\r\n                const ordersData=ordersResp.data;\r\n                console.log(ordersData);\r\n                if(ordersData && ordersData.length){\r\n                    setAllOrders(ordersData);\r\n\r\n                     const filterOrders = (status) =>\r\n                        ordersData\r\n                                .map(order => ({\r\n                                      ...order,\r\n                                      clientOrders: order.clientOrders.filter(clientOrder =>\r\n                                        clientOrder.item_details.item_status === status)\r\n                                    })).filter(order => order.clientOrders.length > 0);\r\n\r\n                      setActiveOrders(filterOrders('created'));\r\n                      setDispatchedOrders(filterOrders('dispatched'));\r\n                      setDeliveredOrders(filterOrders('delivered'));\r\n                      setReturnedOrders(filterOrders('returned'));\r\n                      setRefundedOrders(filterOrders('refunded'));\r\n                      setClosedOrders(filterOrders('closed'));\r\n                      //setClosedOrders(ordersData.filter(order => order.clientOrders.some(clientOrder=>clientOrder.status === 'closed')));\r\n                    if(refundedOrders) console.log(refundedOrders);\r\n                    if(closedOrders) console.log(closedOrders);\r\n                }\r\n            }\r\n            else{\r\n                url=`${apiBaseUrl}/orders/clientOrders/${userId}`;\r\n                const response=await fetch(url,{\r\n                headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                },});\r\n                console.log(response);\r\n                if(!response)\r\n                    throw new Error('Could not fetch your orders');\r\n                const ordersResp=await response.json();\r\n                const orders=ordersResp.data;\r\n                console.log(orders);\r\n                if(orders && orders.length){\r\n                    setAllOrders(orders);\r\n\r\n                     const filterOrders = (status) =>\r\n                       orders\r\n                         .filter(order => order.status === 'created') // Add this condition to filter orders by status\r\n                         .map(order => ({\r\n                           ...order,\r\n                           items: order.items.filter(item => item.item_status === status) // Filter items by status\r\n                         }))\r\n                         .filter(order => order.items.length > 0); // Ensure the order has items left after filtering\r\nconsole.log(allOrders);\r\n\r\n                      setActiveOrders(allOrders.filter(order => order.status === 'created'));\r\n                      setConfirmedOrders(filterOrders('created'));\r\n                      setReturnedOrders(filterOrders('returned'));\r\n                      setCancelledOrders(orders.filter(order => order.status === 'cancelled'));\r\n                      setClosedOrders(orders.filter(order => order.status === 'closed'));\r\n                  if (closedOrders) console.log(closedOrders);\r\n                }\r\n            }\r\n          }catch(err){\r\n            console.log(err.message);\r\n          }\r\n\r\n      }\r\n      fetchOrders();\r\n    },[userId, navigate, activeTab, selectedOrders, adminSelectedOrders]);\r\n\r\n    const refundPayment = async()=>{\r\n        console.log(paymentId, amount);\r\n        try{\r\n             const responseUser=await fetch(`http://localhost:5000/user/${userId}`);\r\n             if(responseUser){\r\n                const userData=await responseUser.json();\r\n                console.log(userData);\r\n                const response=await fetch('http://localhost:5000/payment/paymentRefund',{\r\n                                                  method:'POST',\r\n                                                  headers:{\r\n                                                        'Authorization': `Bearer ${token}`,\r\n                                                        'content-type':'application/json'},\r\n                                                  body:JSON.stringify({amount:amount, paymentId:paymentId})\r\n                                              });\r\n                 console.log(response);\r\n                setAmount(0);\r\n                setPaymentId(null);\r\n\r\n                if(response){\r\n                    const resData=await response.json();\r\n                    console.log(resData);\r\n                    return { success: resData.success, data: resData.data };\r\n                }\r\n            }\r\n        }catch(error){\r\n            console.log(error);\r\n            return { success: false, error: error.message };\r\n        }\r\n\r\n        };\r\n\r\n    const fetchOrderDetails = async(order_id,item_ids) =>{\r\n           try{\r\n                let response=await fetch(`http://localhost:5000/orders/orderDetails/${order_id}`);\r\n                let {data}= await response.json();\r\n                console.log(data.rzr_payment_id);\r\n                setPaymentId(data.rzr_payment_id);\r\n\r\n                for (const item_id of item_ids) {\r\n                    response=await fetch(`http://localhost:5000/orders/itemDetails/${order_id}/${item_id}`);\r\n                    ({data}= await response.json());\r\n                    console.log(data.items[0].amount);\r\n                    setAmount(amount+data.items[0].amount);\r\n                }\r\n            if (data && amount) console.log(paymentId,amount);\r\n\r\n            }\r\n            catch(error){\r\n                console.log(error);\r\n            }\r\n    }\r\n\r\n    const dispatchOrders = async (client_id, newStatus) => {\r\n        console.log(adminSelectedOrders);\r\n        if(!adminSelectedOrders || adminSelectedOrders.length===0) {\r\n            alert(\"Select items by checking the boxes\");\r\n            return;\r\n        }\r\n         const currentDate = new Date().toISOString();\r\n\r\n            const ordersForClient = adminSelectedOrders.find(item => item.clientId === client_id).orders;\r\n\r\n             const itemsOfOrder = ordersForClient.reduce((acc, order) => {\r\n             const { orderId, itemId } = order;\r\n             const existingOrder = acc.find(entry => entry.orderId === orderId);\r\n             if (existingOrder) {\r\n               existingOrder.itemIds.push(itemId);\r\n             } else {\r\n               acc.push({ orderId, itemIds: [itemId] });\r\n             }\r\n             return acc;\r\n           }, []);\r\n\r\n           console.log(ordersForClient[0]);\r\n           console.log(itemsOfOrder);\r\n\r\n\r\nconsole.log(ordersForClient[0]);\r\nconsole.log(itemsOfOrder);\r\n\r\n   try {\r\n   let response, status_update;\r\n    for (const order of itemsOfOrder) {\r\n\r\n         let statusMsg='';\r\n         switch(newStatus){\r\n            case 'dispatched': statusMsg=`${order.itemIds.length} item(s) from your order ${order.orderId} have been dispatched on ${currentDate}.\\n They will be delivered to you in 2/3 working days `;\r\n            break;\r\n            case 'delivered': statusMsg=`${order.itemIds.length} item(s) from your order ${order.orderId} have been delivered on ${currentDate}. `;\r\n            break;\r\n            case 'refunded':\r\n            {\r\n                console.log(adminSelectedOrders);\r\n                statusMsg=`Refund for ${order.itemIds.length} item(s) has been initiated on ${currentDate}. It will be credited to your account in 2/3 working days `;\r\n                fetchOrderDetails(order.orderId, [order.itemIds]);\r\n                if(paymentId && amount)\r\n                    console.log(paymentId, amount);\r\n                else{\r\n                    alert(\"Unable to refund. Please try again later!\")\r\n                    return;\r\n                }\r\n                if(paymentId && amount){\r\n                    console.log(\"refunding\");\r\n                    const result = await refundPayment();\r\n                     if(!result.success){\r\n                        alert(\"Unable to refund. Please try again!\");\r\n                        return;\r\n                     }\r\n                 }\r\n                break;\r\n            }\r\n        }\r\n             status_update={date:currentDate, message:statusMsg};\r\n             console.log(status_update);\r\n             response = await fetch(`${apiBaseUrl}/vendor/changeOrderStatus/${userId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({orderId:order.orderId, items:order.itemIds, status:newStatus, update_date:currentDate, status_update:status_update}),\r\n          });\r\n\r\n          if (!response.ok) throw new Error('Failed to dispatch orders');\r\nconsole.log(response);\r\n\r\n         response = await fetch(`${apiBaseUrl}/orders/updateStatus`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({orderId:order.orderId, client_id:client_id, status_update:status_update, items:order.itemIds, status:newStatus, update_date:currentDate }),\r\n          });\r\n\r\n      if (!response.ok) throw new Error('Failed to return orders');\r\nconsole.log(response);\r\n    }\r\n\r\n      setAdminSelectedOrders([]);\r\n      alert('Orders dispatched successfully!');\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      alert('Failed to dispatch orders');\r\n    }\r\n\r\n}\r\n\r\nconst updateOrderStatus = async (orderId, itemIds, status, newStatus) => {\r\n    const confirmMsg= window.confirm(\"Are you sure you want to return?\");\r\n    if(confirmMsg){\r\n    try {\r\n          const statusMsg=`Return initiated for $(itemIds.length) item(s) from order $(orderId).\\n Your payment refund will be initiated after the items reach our warehouse `;\r\n          const currentDate = new Date().toISOString();\r\n          const status_update={date:currentDate, message:statusMsg};\r\n\r\n          const response = await fetch(`http://localhost:5000/orders/updateStatus`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({orderId, client_id:userId, items:itemIds, status:newStatus, update_date:currentDate,  status_update:status_update}),\r\n          });\r\n\r\n      if (!response.ok) throw new Error('Failed to return orders');\r\n\r\n            response = await fetch(`http://localhost:5000/vendor/returnOrder`, {      //userId is the client_id in Vendor\r\n            method: 'PUT',\r\n            headers: {\r\n            //  'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({orderId, items:itemIds, status:newStatus, update_date:currentDate, status_update:status_update, client_id:userId}),\r\n          });\r\n\r\n      if (!response.ok) throw new Error('Failed to dispatch orders');\r\n\r\n        setSelectedOrders([]);\r\n        alert(statusMsg);\r\n        } catch (err) {\r\n          console.error(err.message);\r\n          alert('Failed to return orders');\r\n        }\r\n        console.log(selectedOrders);\r\n      }\r\n  }\r\n\r\nconst toggleOrderSelection = (orderId, itemId) => {\r\n    setSelectedOrders((prevSelected) => {\r\n      const newSelected = { ...prevSelected };\r\n      if (!newSelected[orderId]) {\r\n        newSelected[orderId] = [];\r\n      }\r\n      if (newSelected[orderId].includes(itemId)) {\r\n        newSelected[orderId] = newSelected[orderId].filter((id) => id !== itemId);\r\n        if (newSelected[orderId].length === 0) delete newSelected[orderId];\r\n      } else {\r\n        newSelected[orderId].push(itemId);\r\n      }\r\n      return newSelected;\r\n    });\r\n  };\r\n\r\nconst admin_toggleOrderSelection = (clientId, orderId, itemId) => {\r\nconsole.log(clientId, orderId, itemId);\r\nconsole.log(adminSelectedOrders);\r\n  setAdminSelectedOrders((prevSelected) => {\r\n    const newSelected = [...prevSelected];\r\n    const clientIndex = newSelected.findIndex(item => item.clientId === clientId);\r\n\r\n    console.log('========', JSON.stringify(newSelected), orderId, itemId, \"===========\");\r\n    console.log(clientIndex);\r\n\r\n    if (clientIndex === -1) {\r\n      // If clientId is not present, add a new entry\r\n      newSelected.push({ clientId, orders: [{ orderId, itemId }] });\r\n    } else {\r\n      // If clientId is present, toggle the order selection\r\n      const clientOrders = [...newSelected[clientIndex].orders]; // Clone the clientOrders array\r\n\r\n      console.log(JSON.stringify(clientOrders));\r\n\r\n      const orderIndex = clientOrders.findIndex(\r\n        order => order.orderId === orderId && order.itemId === itemId\r\n      );\r\n\r\n      console.log(orderIndex);\r\n\r\n      if (orderIndex !== -1) {\r\n        // If the order is present, remove it\r\n        clientOrders.splice(orderIndex, 1);\r\n        if (clientOrders.length === 0) {\r\n          // Remove the client entry if no orders left\r\n          newSelected.splice(clientIndex, 1);\r\n        } else {\r\n          // Update the orders for the client\r\n          newSelected[clientIndex] = { ...newSelected[clientIndex], orders: clientOrders };\r\n        }\r\n      } else {\r\n        // If the order is not present, add it\r\n        clientOrders.push({ orderId, itemId });\r\n        // Update the orders for the client\r\n        newSelected[clientIndex] = { ...newSelected[clientIndex], orders: clientOrders };\r\n      }\r\n    }\r\n\r\n    console.log(JSON.stringify(newSelected));\r\n\r\n    return newSelected;\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n<>\r\n      {!isAdmin?(\r\n      <>\r\n      <Tabs  style={{width:'100%'}}>\r\n        <Tab label=\"Recent Orders\">\r\n          <div><b>Recent Orders</b></div>\r\n          {confirmedOrders && confirmedOrders.length > 0 ? (\r\n            confirmedOrders.map(order => ((\r\n            <div key={order._id} style={{ border: 'solid 1px', maxWidth: '1200px', margin: '0 auto' }}>\r\n                <div>\r\n                    <ul>\r\n                    {order.items.map(item => (\r\n                        <li key={item.id} >\r\n                        <NavLink style={{color:'blue',textDecoration:'none',border:'none', display: 'flex', alignItems: 'center', marginBottom: '10px' }}\r\n                        to={`/order_item_track/${order._id}/${item.id}`}>\r\n                             <div style={{width:'100px',minWidth:'100px'}}><img style={{height:'100px',width:'100px'}} src={item.image[0]}/></div>\r\n                             <div>\r\n                                 <div style={{width:'400px',minWidth:'400px', textAlign:'left'}}>{item.type} {item.sub_category} {item.category}</div>\r\n                                 <div style={{width:'400px',minWidth:'400px', textAlign:'left'}}>{item.item_status} {moment(item.update_date).format('MMMM D, YYYY h:mm:ss A')}</div>\r\n                             </div>\r\n                        </NavLink>\r\n                        </li>)\r\n                     )}\r\n                     </ul>\r\n               </div>\r\n            </div>\r\n                )))\r\n          ):\r\n           <div style={{textAlign:'left'}}>No recent Orders</div>\r\n        }\r\n        { closedOrders && closedOrders.length > 0 && (<>\r\n        <div><b>Buy again</b></div>\r\n        { closedOrders.map(order => (\r\n        <ul key={order._id} className={classes.grid_list}>\r\n        {order.items && order.items.length>0 && (\r\n         order.items.map(item =>\r\n             <li key={item.id} className={classes.grid_item}>\r\n             <NavLink style={{color:'blue',textDecoration:'none',border:'none'}}\r\n                to={`/fabrics/${item.id}/${item.category}`}>\r\n                  <div style={{width:'100px',minWidth:'100px'}}><img style={{height:'100px',width:'100px'}} src={item.image[0]}/></div>\r\n                  <div style={{width:'400px',minWidth:'400px', textAlign:'left'}}>{item.desc}</div>\r\n             </NavLink>\r\n             </li>)\r\n          )}\r\n          </ul>\r\n          ))}\r\n          </>)}\r\n\r\n        </Tab>\r\n\r\n        <Tab label=\"Returned\">\r\n          <div><b>Returned Orders</b></div>\r\n          {returnedOrders && returnedOrders.length > 0 ? (\r\n            returnedOrders.map(order => (\r\n            <div key={order._id} style={{ border: 'solid 1px', maxWidth: '1200px', margin: '0 auto' }}>\r\n            <div>\r\n                <ul>\r\n                {order.items.map(item => (\r\n                    <li key={item.id} style={{display: 'flex', alignItems: 'center'}}>\r\n                    <NavLink style={{color:'blue',textDecoration:'none',border:'none',  marginBottom: '10px' }}\r\n                to={`/fabrics/${item.id}/${item.category}`}>\r\n                        <div>\r\n                         <div style={{width:'100px',minWidth:'100px'}}><img style={{height:'100px',width:'100px'}} src={item.image[0]}/></div>\r\n                         <div style={{width:'400px',minWidth:'400px', textAlign:'left'}}>{item.desc}</div>\r\n                         </div>\r\n                    </NavLink>\r\n\r\n                         {item.status_updates && item.status_updates.length > 0 && (\r\n                             <div style={{width:'400px',minWidth:'400px', textAlign:'left'}}>{ item.status_updates[item.status_updates.length-1].message} {moment(item.update_date).format('MMMM D, YYYY h:mm:ss A')}</div>\r\n                         )}\r\n                    </li>)\r\n                 )}\r\n                 </ul>\r\n           </div>\r\n        </div>\r\n                ))\r\n          ) : (\r\n            <p>No returned orders found.</p>\r\n          )}\r\n        </Tab>\r\n\r\n        <Tab label=\"Canceled\">\r\n          <div><b>Canceled Orders</b></div>\r\n          {cancelledOrders && cancelledOrders.length > 0 ? (\r\n            cancelledOrders.map(order => (\r\n            <div>\r\n            <ul  style={{display: 'flex', alignItems: 'center'}}>\r\n            {order.items.map(item => (\r\n                <li key={item.id}>\r\n                <NavLink style={{color:'blue',textDecoration:'none',border:'none',  marginBottom: '10px' }}\r\n                to={`/fabrics/${item.id}/${item.category}`}>\r\n                    <div>\r\n                     <div style={{width:'100px',minWidth:'100px'}}><img style={{height:'100px',width:'100px'}} src={item.image[0]}/></div>\r\n                     <div style={{width:'200px',minWidth:'200px', textAlign:'left'}}>{item.desc}</div>\r\n                     </div>\r\n                </NavLink>\r\n                </li>)\r\n             )}\r\n             </ul>\r\n            </div>\r\n                ))\r\n          ) : (\r\n            <p>No canceled orders found.</p>\r\n          )}\r\n        </Tab>\r\n        </Tabs></>\r\n        ):              //Admin\r\n        (<Tabs  activeTab={activeTab} handleTabClick={setActiveTab} style={{width:'100%'}}>\r\n        <Tab label=\"Confirmed\">\r\n          <div className={classes.heading}>Created Orders</div>\r\n          {activeOrders && activeOrders.length? (\r\n            activeOrders.map(order => (\r\n              <div className={classes.orderContainer} style={{border:'1px solid'}} >\r\n\r\n            <div key={order.client_id}>Client Id: {order.client_id}</div>\r\n            <div className={classes.order_summary}>\r\n                <div style={{width:'250px',minWidth:'250px'}}>Order ID</div>\r\n                <div style={{width:'250px',minWidth:'250px'}}>Item code</div>\r\n                <div style={{width:'100px',minWidth:'100px'}}>Quantity</div>\r\n                <div style={{width:'300px',minWidth:'300px'}}>Item Description</div>\r\n                <div style={{textAlign:'center'}}><button style={{color:'black'}} onClick={()=>dispatchOrders(order.client_id,'dispatched')}>Dispatch</button></div>\r\n            </div>\r\n           { order.clientOrders && order.clientOrders.map(clientOrder => (<>\r\n            <div key={clientOrder.order_id} className={classes.order_summary}>\r\n                <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.order_id}</div>\r\n                <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.item_details.id}</div>\r\n                <div style={{width:'100px',minWidth:'100px'}}>{clientOrder.quantity}</div>\r\n                <div style={{width:'300px',minWidth:'300px'}}>\r\n                    {clientOrder.item_details.desc}\r\n                </div>\r\n               <input\r\n                 type=\"checkbox\"\r\n                 checked={\r\n                   adminSelectedOrders\r\n                     .find(item => item.clientId === order.client_id)\r\n                     ?.orders.some(\r\n                       (order) =>\r\n                         order.orderId === clientOrder.order_id &&\r\n                         order.itemId ===clientOrder.item_details.id\r\n                     ) || false\r\n                 } onChange={() => admin_toggleOrderSelection(order.client_id, clientOrder.order_id, clientOrder.item_details.id)}\r\n               />\r\n\r\n            </div>\r\n            </>))}\r\n            </div>\r\n            ))\r\n          ) : (\r\n            <p>No active orders</p>\r\n          )}\r\n        </Tab>\r\n        <Tab label=\"Dispatched\">\r\n          <div className={classes.heading}>Dispatched Orders</div>\r\n          {dispatchedOrders && dispatchedOrders.length? (\r\n              dispatchedOrders.map(order => (\r\n              <div className={classes.orderContainer} style={{border:'1px solid'}} >\r\n              <div key={order.client_id}>Client ID: {order.client_id}</div>\r\n              <div className={classes.order_summary}>\r\n                  <div style={{width:'250px',minWidth:'250px'}}>Order ID</div>\r\n                  <div style={{width:'250px',minWidth:'250px'}}>Item code</div>\r\n                  <div style={{width:'100px',minWidth:'100px'}}>Quantity</div>\r\n                  <div style={{width:'300px',minWidth:'300px'}}>Item Description</div>\r\n                  <div style={{textAlign:'center'}}><button style={{color:'black'}} onClick={()=>dispatchOrders(order.client_id,'delivered')}>Delivered</button></div>\r\n              </div>\r\n                 { order.clientOrders && order.clientOrders.map(clientOrder => (<>\r\n                  <div key={clientOrder.order_id} className={classes.order_summary}>\r\n                      <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.order_id}</div>\r\n                      <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.item_details.id}</div>\r\n                      <div style={{width:'100px',minWidth:'100px'}}>{clientOrder.quantity}</div>\r\n                      <div style={{width:'300px',minWidth:'300px'}}>{clientOrder.item_details.desc}</div>\r\n                <input\r\n                 type=\"checkbox\"\r\n                 checked={\r\n                   adminSelectedOrders\r\n                     .find(item => item.clientId === order.client_id)\r\n                     ?.orders.some(\r\n                       (order) =>\r\n                         order.orderId === clientOrder.order_id &&\r\n                         order.itemId === clientOrder.item_details.id\r\n                     ) || false\r\n                 } onChange={() => admin_toggleOrderSelection(order.client_id, clientOrder.order_id, clientOrder.item_details.id)}\r\n               />\r\n               </div>\r\n              </>))}\r\n              </div>\r\n              ))\r\n            ) : (\r\n              <p>No dispatched orders</p>\r\n            )}\r\n        </Tab>\r\n        <Tab label=\"Delivered\" >\r\n          <div className={classes.heading}>Delivered Orders</div>\r\n          {deliveredOrders &&  deliveredOrders.length? (\r\n                deliveredOrders.map(order => (\r\n              <div className={classes.orderContainer} style={{border:'1px solid'}} >\r\n                <div key={order.client_id}>Client Id:<b> {order.client_id}</b></div>\r\n                <div className={classes.order_summary}>\r\n                    <div style={{width:'250px',minWidth:'250px'}}>Order ID</div>\r\n                    <div style={{width:'250px',minWidth:'250px'}}>Item code</div>\r\n                    <div style={{width:'100px',minWidth:'100px'}}>Quantity</div>\r\n                    <div style={{width:'300px',minWidth:'300px'}}>Item Description</div>\r\n                </div>\r\n                   { order.clientOrders && order.clientOrders.map(clientOrder => (<>\r\n                    <div key={clientOrder.order_id} className={classes.order_summary}>\r\n                        <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.order_id}</div>\r\n                        <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.item_details.item_id}</div>\r\n                        <div style={{width:'100px',minWidth:'100px'}}>{clientOrder.quantity}</div>\r\n                        <div style={{width:'300px',minWidth:'300px'}}>{clientOrder.item_details.desc} </div>\r\n                    </div>\r\n                    </>))}\r\n                    </div>\r\n                    ))\r\n                  ) : (\r\n                <p>No delivered orders</p>\r\n              )}\r\n        </Tab>\r\n        <Tab label=\"Returned\">\r\n          <div className={classes.heading}>Returned Orders</div>\r\n           { returnedOrders && returnedOrders.length? (\r\n              returnedOrders.map(order => (\r\n              <div className={classes.orderContainer} style={{border:'1px solid'}} >\r\n              <div key={order.client_id}>Client Id:<b> {order.client_id}</b></div>\r\n              <div className={classes.order_summary}>\r\n                  <div style={{width:'250px',minWidth:'250px'}}>Order ID</div>\r\n                  <div style={{width:'250px',minWidth:'250px'}}>Item code</div>\r\n                  <div style={{width:'100px',minWidth:'100px'}}>Quantity</div>\r\n                  <div style={{width:'300px',minWidth:'300px'}}>Item Description</div>\r\n                  <div style={{textAlign:'center'}}><button style={{color:'black'}} onClick={()=>dispatchOrders(order.client_id,'refunded')}>Order Refunded</button></div>\r\n              </div>\r\n                 { order.clientOrders && order.clientOrders.map(clientOrder => (<>\r\n                  <div key={clientOrder.order_id} className={classes.order_summary}>\r\n                      <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.order_id}</div>\r\n                      <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.item_details.id}</div>\r\n                      <div style={{width:'100px',minWidth:'100px'}}>{clientOrder.quantity}</div>\r\n                      <div style={{width:'300px',minWidth:'300px'}}>{clientOrder.item_details.desc}</div>\r\n              <input\r\n                 type=\"checkbox\"\r\n                 checked={\r\n                   adminSelectedOrders\r\n                     .find(item => item.clientId === order.client_id)\r\n                     ?.orders.some(\r\n                       (order) =>\r\n                         order.orderId === clientOrder.order_id &&\r\n                         order.itemId === clientOrder.item_details.id\r\n                     ) || false\r\n                 } onChange={() => admin_toggleOrderSelection(order.client_id, clientOrder.order_id, clientOrder.item_details.id)}\r\n              />\r\n            </div>\r\n             </>))}\r\n             </div>\r\n             ))\r\n               ) : (\r\n              <p>No returned orders</p>\r\n            )}\r\n        </Tab>\r\n\r\n        <Tab label=\"Refunded\" >\r\n                  <div className={classes.heading}>Refunded Orders</div>\r\n                  {refundedOrders &&  refundedOrders.length? (\r\n                        refundedOrders.map(order => (\r\n                      <div className={classes.orderContainer} style={{border:'1px solid'}} >\r\n                        <div key={order.client_id}>Client Id:<b> {order.client_id}</b></div>\r\n                        <div className={classes.order_summary}>\r\n                            <div style={{width:'250px',minWidth:'250px'}}>Order ID</div>\r\n                            <div style={{width:'250px',minWidth:'250px'}}>Item code</div>\r\n                            <div style={{width:'100px',minWidth:'100px'}}>Quantity</div>\r\n                            <div style={{width:'300px',minWidth:'300px'}}>Item Description</div>\r\n                        </div>\r\n                           { order.clientOrders && order.clientOrders.map(clientOrder => (<>\r\n                            <div key={clientOrder.order_id} className={classes.order_summary}>\r\n                                <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.order_id}</div>\r\n                                <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.item_details.id}</div>\r\n                                <div style={{width:'100px',minWidth:'100px'}}>{clientOrder.quantity}</div>\r\n                                <div style={{width:'300px',minWidth:'300px'}}>{clientOrder.item_details.desc} </div>\r\n                            </div>\r\n                            </>))}\r\n                            </div>\r\n                            ))\r\n                          ) : (\r\n                        <p>No orders refunded</p>\r\n                      )}\r\n                </Tab>\r\n\r\n                <Tab label=\"Closed\" >\r\n                          <div className={classes.heading}>Closed Orders</div>\r\n                          {closedOrders &&  closedOrders.length? (\r\n                                closedOrders.map(order => (\r\n                              <div className={classes.orderContainer} style={{border:'1px solid'}} >\r\n                                <div key={order.client_id}>Client Id:<b> {order.client_id}</b></div>\r\n                                <div className={classes.order_summary}>\r\n                                    <div style={{width:'250px',minWidth:'250px'}}>Order ID</div>\r\n                                    <div style={{width:'250px',minWidth:'250px'}}>Item code</div>\r\n                                    <div style={{width:'100px',minWidth:'100px'}}>Quantity</div>\r\n                                    <div style={{width:'300px',minWidth:'300px'}}>Item Description</div>\r\n                                </div>\r\n                                   { order.clientOrders && order.clientOrders.map(clientOrder => (<>\r\n                                    <div key={clientOrder.order_id} className={classes.order_summary}>\r\n                                        <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.order_id}</div>\r\n                                        <div style={{width:'250px',minWidth:'250px'}}>{clientOrder.item_details.id}</div>\r\n                                        <div style={{width:'100px',minWidth:'100px'}}>{clientOrder.quantity}</div>\r\n                                        <div style={{width:'300px',minWidth:'300px'}}>{clientOrder.item_details.desc}</div>\r\n                                    </div>\r\n                                    </>))}\r\n                                    </div>\r\n                                    ))\r\n                                  ) : (\r\n                                <p>No closed orders</p>\r\n                              )}\r\n                        </Tab>\r\n\r\n        </Tabs>\r\n        )\r\n}\r\n\r\n        </>\r\n      );\r\n    }\r\n\r\nexport default ClientOrders;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}