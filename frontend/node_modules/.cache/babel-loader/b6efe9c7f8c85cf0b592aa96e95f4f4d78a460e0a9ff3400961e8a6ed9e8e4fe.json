{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [{\n      id: '0',\n      type: '',\n      rate: 0,\n      quantity: 0,\n      totalPrice: 0\n    }],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    addToCartFromList(state, action) {\n      const newItem = action.payload.item;\n      const quantity = action.payload.quantity;\n      state.items.push({\n        id: newItem.Fabid,\n        quantity: quantity,\n        rate: newItem.price,\n        totalPrice: newItem.price * quantity,\n        type: newItem.type\n      });\n      state.totalQuantity = state.totalQuantity + 1;\n      state.changed = true;\n    },\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload.item;\n      console.log(newItem.type, newItem.rate, newItem.quantity);\n      const quantity = newItem.quantity || action.payload.quantity;\n      console.log(\"quantity\", quantity);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          quantity: quantity,\n          rate: newItem.rate,\n          totalPrice: newItem.rate * quantity,\n          type: newItem.type\n        });\n        state.totalQuantity++;\n      } else {\n        existingItem.quantity += quantity;\n        existingItem.totalPrice += quantity * newItem.rate;\n      }\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n        state.totalQuantity--;\n      } else {\n        existingItem.quantity -= 0.5;\n        existingItem.totalPrice -= existingItem.rate / 2;\n      }\n      state.changed = true;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","id","type","rate","quantity","totalPrice","totalQuantity","changed","reducers","addToCartFromList","state","action","newItem","payload","item","push","Fabid","price","replaceCart","addToCart","console","log","existingItem","find","removeFromCart","filter","cartActions","actions"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/Store/cart_slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice=createSlice({\r\n    name:'cart',\r\n    initialState:{ items:[{id:'0',type:'',rate:0,quantity:0,totalPrice:0}],totalQuantity:0,changed:false },\r\n    reducers:{\r\n\r\n        addToCartFromList(state,action){\r\n            const newItem=action.payload.item;\r\n            const quantity=action.payload.quantity;\r\n\r\n            state.items.push({\r\n                id:newItem.Fabid,\r\n                quantity:quantity,\r\n                rate:newItem.price,\r\n                totalPrice:newItem.price*quantity,\r\n                type:newItem.type,\r\n            });\r\n            state.totalQuantity=state.totalQuantity+1;\r\n            state.changed=true;\r\n\r\n\r\n        },\r\n\r\n        replaceCart(state,action){\r\n            state.totalQuantity=action.payload.totalQuantity;\r\n            state.items=action.payload.items;\r\n        },\r\n\r\n        addToCart(state,action){\r\n            const newItem=action.payload.item;\r\n            console.log(newItem.type,newItem.rate,newItem.quantity);\r\n            const quantity=newItem.quantity||action.payload.quantity;\r\n    console.log(\"quantity\",quantity);\r\n            const existingItem=state.items.find((item)=>item.id===newItem.id);\r\n            state.changed=true;\r\n\r\n            if(!existingItem){\r\n               state.items.push({\r\n                id:newItem.id,\r\n                quantity:quantity,\r\n                rate:newItem.rate,\r\n                totalPrice:newItem.rate*quantity,\r\n                type:newItem.type,\r\n            })\r\n                state.totalQuantity++;\r\n            }else{\r\n                existingItem.quantity+=quantity;\r\n                existingItem.totalPrice+=quantity*newItem.rate;\r\n            }\r\n        },\r\n\r\n\r\n        removeFromCart(state,action){\r\n            const id=action.payload;\r\n            const existingItem=state.items.find((item)=>item.id === id);\r\n            if(existingItem.quantity===1){\r\n                state.items=state.items.filter((item)=>item.id !== id);\r\n                state.totalQuantity--;\r\n            }else{\r\n               existingItem.quantity-=0.5;\r\n               existingItem.totalPrice-=existingItem.rate/2;\r\n            }\r\n            state.changed=true;\r\n        },\r\n    }\r\n});\r\n\r\n\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}