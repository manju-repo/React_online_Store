{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Order.js\",\n  _s = $RefreshSig$();\n//import { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport { useState, useEffect, useRef, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\n//import classes from './FabricItemOrder.module.css';\nimport { cartActions } from '../Store/cart_slice';\nimport { uiActions } from '../Store/ui_slice';\nimport PaymentForm from '../components/PaymentForm';\nimport { OrderContext } from '../Context/order-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OrderPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const orderCtx = useContext(OrderContext);\n  const navigate = useNavigate();\n  const cart = useSelector(state => state.cart);\n  const [razorpayKey, setKey] = useState(null);\n  const [order, setOrder] = useState(null);\n  useEffect(() => {\n    const checkOut = async () => {\n      try {\n        const responseKey = await fetch('http://localhost:5000/getkey');\n        if (!responseKey.ok) throw new Error(\"Payment failed\");\n        const {\n          key\n        } = await responseKey.json();\n        console.log(key);\n        setKey(key);\n        const response = await fetch('http://localhost:5000/payment/checkout', {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            amount: orderCtx.totalAmount\n          })\n        });\n        if (!response.ok) throw new Error(\"Payment failed\");\n        const {\n          order\n        } = await response.json();\n        //let {order}=data;\n        console.log(order);\n        setOrder(order);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    checkOut();\n  }, []);\n  const paymentHandler = async formData => {\n    var options = {\n      key: razorpayKey,\n      amount: order.amount,\n      currency: \"INR\",\n      name: \"J'Adore\",\n      description: \"Test Transaction\",\n      image: \"https://example.com/your_logo\",\n      order_id: order.id,\n      //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n      handler: async response => {\n        try {\n          const responseData = await fetch('http://localhost:5000/payment/paymentverification', {\n            method: 'POST',\n            headers: {\n              'content-type': 'application/json'\n            },\n            body: JSON.stringify(response)\n          });\n          const {\n            data\n          } = await responseData.json();\n          console.log(data);\n          navigate('/paymentsuccess/' + data);\n        } catch (err) {\n          console.log(err);\n        }\n      },\n      prefill: {\n        \"name\": formData.first_name + \" \" + formData.last_name,\n        \"email\": formData.email,\n        \"contact\": formData.phone\n      },\n      notes: {\n        \"address\": \"J'Adore Corporate Office\"\n      },\n      theme: {\n        \"color\": \"#8F0555\"\n      }\n    };\n    var rzp1 = new window.Razorpay(options);\n    // document.getElementById('rzp-button1').onclick = function(e){\n    rzp1.open();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: order !== null && razorpayKey !== null && /*#__PURE__*/_jsxDEV(PaymentForm, {\n      onSubmit: paymentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(OrderPage, \"BsS9WAzdpHTMTSwKwAgEqc3QE70=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = OrderPage;\nexport default OrderPage;\nvar _c;\n$RefreshReg$(_c, \"OrderPage\");","map":{"version":3,"names":["axios","useState","useEffect","useRef","useContext","useDispatch","useSelector","useNavigate","useParams","cartActions","uiActions","PaymentForm","OrderContext","jsxDEV","_jsxDEV","Fragment","_Fragment","OrderPage","_s","dispatch","orderCtx","navigate","cart","state","razorpayKey","setKey","order","setOrder","checkOut","responseKey","fetch","ok","Error","key","json","console","log","response","method","headers","body","JSON","stringify","amount","totalAmount","err","message","paymentHandler","formData","options","currency","name","description","image","order_id","id","handler","responseData","data","prefill","first_name","last_name","email","phone","notes","theme","rzp1","window","Razorpay","open","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/pages/Order.js"],"sourcesContent":["//import { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"axios\";\r\nimport {useState,useEffect,useRef,useContext} from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {useNavigate, useParams} from 'react-router-dom';\r\n//import classes from './FabricItemOrder.module.css';\r\nimport {cartActions} from '../Store/cart_slice';\r\nimport {uiActions} from '../Store/ui_slice';\r\nimport PaymentForm from '../components/PaymentForm';\r\nimport {OrderContext} from '../Context/order-context';\r\n\r\n\r\nconst OrderPage=()=>{\r\n\r\n\r\n    const dispatch=useDispatch();\r\n    const orderCtx=useContext(OrderContext);\r\n    const navigate=useNavigate();\r\n    const cart=useSelector((state)=>state.cart);\r\n    const [razorpayKey,setKey]=useState(null);\r\n    const [order,setOrder]=useState(null);\r\n\r\nuseEffect(()=>{\r\n\r\n    const checkOut=async()=>{\r\n        try{\r\n            const responseKey=await fetch('http://localhost:5000/getkey');\r\n            if(!responseKey.ok)\r\n                throw new Error(\"Payment failed\");\r\n            const {key}=await responseKey.json();\r\n            console.log(key);\r\n            setKey(key);\r\n            const response=await fetch('http://localhost:5000/payment/checkout',{\r\n                            method:'POST',\r\n                            headers:{'content-type':'application/json'},\r\n                            body:JSON.stringify({amount:orderCtx.totalAmount})\r\n                            });\r\n            if(!response.ok)\r\n                throw new Error(\"Payment failed\");\r\n            const {order}=await response.json();\r\n            //let {order}=data;\r\n            console.log(order);\r\n            setOrder(order);\r\n            }catch(err){\r\n               console.log(err.message);\r\n            }\r\n\r\n    }\r\n    checkOut();\r\n},[]);\r\n    const paymentHandler=async(formData)=>{\r\n    var options = {\r\n          key: razorpayKey,\r\n          amount: order.amount,\r\n          currency: \"INR\",\r\n          name: \"J'Adore\",\r\n          description: \"Test Transaction\",\r\n          image: \"https://example.com/your_logo\",\r\n          order_id: order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n          handler: async(response)=>{\r\n            try{\r\n                const responseData=await fetch('http://localhost:5000/payment/paymentverification',{\r\n                            method:'POST',\r\n                            headers:{'content-type':'application/json'},\r\n                            body:JSON.stringify(response)\r\n                });\r\n                const {data}=await responseData.json();\r\n                console.log(data);\r\n               navigate('/paymentsuccess/'+data);\r\n\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n          },\r\n          prefill: {\r\n              \"name\": formData.first_name+\" \"+formData.last_name,\r\n              \"email\": formData.email,\r\n              \"contact\": formData.phone\r\n          },\r\n          notes: {\r\n              \"address\": \"J'Adore Corporate Office\"\r\n          },\r\n          theme: {\r\n              \"color\": \"#8F0555\"\r\n          }\r\n    };\r\n     var rzp1 = new window.Razorpay(options);\r\n     // document.getElementById('rzp-button1').onclick = function(e){\r\n     rzp1.open();\r\n };\r\nreturn(\r\n    <>\r\n    {order !== null && razorpayKey !== null  && (\r\n    <PaymentForm onSubmit={paymentHandler}/>\r\n    )}\r\n    </>\r\n    );\r\n};\r\nexport default OrderPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}