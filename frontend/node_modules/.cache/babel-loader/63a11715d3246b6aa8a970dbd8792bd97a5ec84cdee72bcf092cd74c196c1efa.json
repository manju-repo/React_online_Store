{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\",\n  _s = $RefreshSig$();\nimport AuthForm from '../components/AuthForm';\nimport { json, redirect } from 'react-router-dom';\nimport { AuthContext } from '../Context/auth-context';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  _s();\n  useEffect(() => {\n    if (mode === 'logout') {\n      authCtx.logout();\n      redirect('/');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 8\n  }, this);\n};\n_s(AuthenticationPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupported mode.'\n    }, {\n      status: 422\n    });\n  }\n  const order = searchParams.get('order');\n  const data = await request.formData();\n  if (mode === 'signup' && data.get('password') !== data.get(\"confirm_password\")) throw json({\n    message: 'Password and Confirm Password not matching'\n  }, {\n    status: 422\n  });\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  if (mode === 'signup') {\n    authData.firstname = data.get('first_name');\n    authData.lastname = data.get('last_name');\n  }\n  console.log(\"local cart id\" + localStorage.getItem('cartId'));\n  const cart_id = localStorage.getItem('cartId');\n  if (cart_id) authData.cart_id = cart_id;else authData.cart_id = null;\n  console.log(authData);\n  const response = await fetch('http://localhost:5000/user/' + mode, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not authenticate user.'\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  const token = resData.token;\n  const userid = resData.userId;\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem('userData', JSON.stringify({\n    userId: userid,\n    token: token,\n    expiration: expiration.toISOString()\n    //cartId: cart_id\n  }));\n  if (order === 'open') return redirect('/payment');\n  return redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","redirect","AuthContext","useContext","jsxDEV","_jsxDEV","AuthenticationPage","_s","useEffect","mode","authCtx","logout","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","get","message","status","order","data","formData","authData","email","password","firstname","lastname","console","log","localStorage","getItem","cart_id","response","fetch","method","headers","body","JSON","stringify","ok","resData","token","userid","userId","expiration","Date","setHours","getHours","setItem","toISOString","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\r\nimport {json, redirect} from'react-router-dom';\r\nimport {AuthContext} from '../Context/auth-context';\r\nimport {useContext} from'react';\r\n\r\nconst AuthenticationPage=()=>{\r\n\r\nuseEffect(()=>{\r\n    if(mode==='logout'){\r\n            authCtx.logout();\r\n            redirect('/');\r\n        }\r\n    })\r\nreturn <AuthForm/>;\r\n}\r\nexport default AuthenticationPage;\r\n\r\nexport async function action({request}){\r\n\r\n    const searchParams=new URL(request.url).searchParams;\r\n    const mode=searchParams.get('mode')|| 'login';\r\n\r\n\r\n\r\n    if (mode !== 'login' && mode !== 'signup') {\r\n        throw json({ message: 'Unsupported mode.' }, { status: 422 });\r\n     }\r\n     const order=searchParams.get('order');\r\n\r\n     const data = await request.formData();\r\n\r\n     if (mode==='signup' && (data.get('password') !== data.get(\"confirm_password\")))\r\n        throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\r\n\r\n     const authData={\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n     };\r\n\r\n     if(mode==='signup'){\r\n        authData.firstname= data.get('first_name')\r\n        authData.lastname= data.get('last_name');\r\n     }\r\n     console.log(\"local cart id\"+localStorage.getItem('cartId'));\r\n     const cart_id=localStorage.getItem('cartId');\r\n     if(cart_id)\r\n        authData.cart_id= cart_id;\r\n    else\r\n        authData.cart_id=null;\r\nconsole.log(authData);\r\n     const response= await fetch('http://localhost:5000/user/'+ mode, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(authData)\r\n     });\r\n      if (response.status === 422 || response.status === 401) {\r\n         return response;\r\n       }\r\n\r\n       if (!response.ok) {\r\n         throw json({ message: 'Could not authenticate user.' }, { status: 500 });\r\n       }\r\n       const resData= await response.json();\r\n\r\n       const token=resData.token;\r\n       const userid=resData.userId;\r\n       const expiration=new Date();\r\n       expiration.setHours(expiration.getHours()+1);\r\n\r\n       localStorage.setItem(\r\n             'userData',\r\n             JSON.stringify({\r\n             userId: userid,\r\n             token: token,\r\n             expiration: expiration.toISOString(),\r\n             //cartId: cart_id\r\n             })\r\n             );\r\n        if(order==='open')\r\n           return redirect('/payment');\r\n        return redirect('/');\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}