{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arnav\\\\IdeaProjects\\\\Adore\\\\React_online_Store\\\\frontend\\\\src\\\\pages\\\\Authentication.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport AuthForm from '../components/AuthForm';\nimport { json, redirect, useParams, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../Context/auth-context';\nimport { useContext, useEffect } from 'react';\nimport Notification from '../components/notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  _s();\n  const authCtx = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState();\n  if (authCtx.isLoggedIn) window.history.back();\n  let mode = 'login';\n  let order = '';\n  const searchParams = new URL(window.location.href).searchParams;\n  mode = searchParams.get('mode');\n  order = searchParams.get('order');\n  console.log(order);\n  if (!(mode === 'login' || mode === 'signup' || mode === 'logout')) {\n    setErrors('Invalid login mode');\n    return;\n  }\n\n  //redirect('/');\n\n  const getData = async formData => {\n    if (mode === 'signup' && formData.password !== formData['confirm_password']) setErrors(['Password and Confirm Password not matching']);\n\n    //throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\n\n    const authData = {\n      email: formData.email,\n      password: formData.password\n    };\n    authData.user_type = formData.user_type;\n    console.log(authData);\n    if (mode === 'signup') {\n      authData.name = formData.first_name + \" \" + formData.last_name;\n      authData.phone = formData.phone;\n      if (authData.user_type === 'admin' && formData.account_number === formData.confirm_account_number) authData.bus_name = formData.bus_name;\n      authData.bus_type = formData.bus_type;\n      authData.bus_category = formData.bus_category;\n      authData.bus_subcategory = formData.bus_subcategory;\n      authData.pan = formData.pan;\n      authData.gstin = formData.gstin;\n      authData.address = formData.address;\n      authData.account_number = formData.account_number;\n      authData.account_holder_name = formData.account_holder_name;\n      authData.ifsc_code = formData.ifsc_code;\n    }\n    //first created cart/wishlist/order and then signed up\n    const cart_id = JSON.parse(localStorage.getItem('cartId'));\n    if (cart_id) authData.cart_id = cart_id;else authData.cart_id = null;\n    const wishlist = JSON.parse(localStorage.getItem('wishlist'));\n    if (wishlist) authData.wishlist = wishlist;else authData.wishlist = null;\n    const orders = JSON.parse(localStorage.getItem('orders'));\n    if (orders) authData.orders = orders;else authData.orders = null;\n    console.log(authData);\n    const response = await fetch('http://localhost:5000/user/' + mode, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(authData)\n    });\n    console.log(response);\n    if (!response.ok) {\n      //console.log(response);\n      let errorData = null;\n      try {\n        errorData = await response.json();\n        console.error('Error:', errorData.message);\n      } catch (e) {\n        setErrors(e.message);\n      }\n      setErrors(errorData.message);\n      return;\n      // Handle the error message (e.g., display it to the user)\n      // throw json({message:errorData.message},{status:500});\n    }\n\n    //for admin user sign up create razorpay account\n    if (mode === 'signup' && formData.user_type === 'admin') {\n      try {\n        const acc_response = await fetch('http://localhost:5000/user/createRazorpayAccount', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(authData)\n        });\n        console.log(response);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    try {\n      const resData = await response.json();\n      console.log(\"json response \", resData);\n      const token = resData.token;\n      const userid = resData.userId;\n      const usertype = resData.user_type;\n      const expiration = new Date();\n      expiration.setHours(expiration.getHours() + 1);\n      console.log(usertype);\n      //=========================\n      try {\n        const response = await fetch(`http://localhost:5000/user/${userid}`);\n        if (!response) {\n          throw new Error('Updating User failed');\n        }\n        const respData = await response.json();\n        if (respData) {\n          const loggedUser = respData.user;\n          console.log(loggedUser);\n          const user_cart = loggedUser.cart_id;\n          const user_wl = loggedUser.wishlist;\n          const ordersResp = await fetch(`http://localhost:5000/orders/getActiveOrders/${userid}`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log(ordersResp);\n          if (!ordersResp) throw new Error('Could not fetch your orders');\n          const orders = await ordersResp.json();\n          const user_orders = orders.data;\n          console.log(user_orders);\n          if (authCtx.isAdmin && user_cart && JSON.parse(localStorage.getItem('cartId'))) {\n            if (user_cart != JSON.parse(localStorage.getItem('cartId'))) {\n              let concan = window.confirm(\"Do you want to replace your previous cart with the new one?\");\n              if (concan) {\n                //user_cart=JSON.parse(localStorage.getItem('cartId'));\n                await fetch(`http://localhost:5000/user/cart`, {\n                  method: 'PUT',\n                  headers: {\n                    'content-type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    id: userid,\n                    cart_id: JSON.parse(localStorage.getItem('cartId'))\n                  })\n                });\n              } else localStorage.setItem('cartId', JSON.stringify(user_cart));\n            }\n          }\n          if (user_wl && JSON.parse(localStorage.getItem('Wishlist'))) {\n            let concan = window.confirm(\"Do you want to replace your previous wishlist with the new one?\");\n            if (concan) {\n              //user_wl=JSON.parse(localStorage.getItem('wishlist'));\n              await fetch(`http://localhost:5000/user/wishlist`, {\n                method: 'PUT',\n                headers: {\n                  'content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                  id: userid,\n                  wishlist: JSON.parse(localStorage.getItem('wishlist'))\n                })\n              });\n            } else localStorage.setItem('wishlist', JSON.stringify(user_wl));\n          }\n          if (user_orders) localStorage.setItem('orders', JSON.stringify(user_orders));\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n      //===================\n      authCtx.login(userid, token, expiration, usertype);\n\n      //authCtx.isAdmin=(usertype==='admin');\n      //console.log(\"admin \",usertype);\n      //console.log(authCtx.isAdmin);\n      if (order && order === 'open') window.history.back();\n      if (usertype === 'admin') {\n        navigate(\"/clientOrders\");\n      } else navigate(\"/homepage\");\n      console.log(token, userid, expiration);\n    } catch (e) {\n      setErrors(e.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [errors && /*#__PURE__*/_jsxDEV(Notification, {\n      status: \"error\",\n      message: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(AuthForm, {\n      onSubmit: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_s(AuthenticationPage, \"vBPzHFJNUpnWwnncQT4XzGd6mCo=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["useState","AuthForm","json","redirect","useParams","useNavigate","AuthContext","useContext","useEffect","Notification","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthenticationPage","_s","authCtx","navigate","errors","setErrors","isLoggedIn","window","history","back","mode","order","searchParams","URL","location","href","get","console","log","getData","formData","password","authData","email","user_type","name","first_name","last_name","phone","account_number","confirm_account_number","bus_name","bus_type","bus_category","bus_subcategory","pan","gstin","address","account_holder_name","ifsc_code","cart_id","JSON","parse","localStorage","getItem","wishlist","orders","response","fetch","method","headers","body","stringify","ok","errorData","error","message","e","acc_response","err","resData","token","userid","userId","usertype","expiration","Date","setHours","getHours","Error","respData","loggedUser","user","user_cart","user_wl","ordersResp","user_orders","data","isAdmin","concan","confirm","id","setItem","login","children","status","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Arnav/IdeaProjects/Adore/React_online_Store/frontend/src/pages/Authentication.js"],"sourcesContent":["import {useState} from 'react';\r\nimport AuthForm from '../components/AuthForm';\r\nimport {json, redirect, useParams, useNavigate} from'react-router-dom';\r\nimport {AuthContext} from '../Context/auth-context';\r\nimport {useContext, useEffect} from'react';\r\nimport Notification from '../components/notification';\r\n\r\n\r\nconst AuthenticationPage=()=>{\r\nconst authCtx=useContext(AuthContext);\r\nconst navigate= useNavigate();\r\nconst [errors, setErrors]=useState();\r\nif(authCtx.isLoggedIn) window.history.back();\r\nlet mode='login';\r\nlet order='';\r\n        const searchParams = new URL(window.location.href).searchParams;\r\n         mode = searchParams.get('mode') ;\r\n         order = searchParams.get('order') ;\r\n         console.log(order);\r\n         if (!(mode === 'login' || mode === 'signup' || mode==='logout')) {\r\n             setErrors('Invalid login mode');\r\n             return;\r\n          }\r\n\r\n        //redirect('/');\r\n\r\n\r\n\r\n\r\n    const getData=async(formData)=>{\r\n\r\n     if (mode==='signup' && (formData.password !== formData['confirm_password']))\r\n                 setErrors(['Password and Confirm Password not matching']);\r\n\r\n        //throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\r\n\r\n     const authData={\r\n        email: formData.email,\r\n        password: formData.password,\r\n     };\r\n\r\n     authData.user_type=formData.user_type;\r\n     console.log(authData);\r\n\r\n     if(mode==='signup'){\r\n        authData.name= formData.first_name + \" \" + formData.last_name;\r\n        authData.phone=formData.phone;\r\n\r\n        if(authData.user_type==='admin' && (formData.account_number===formData.confirm_account_number))\r\n            authData.bus_name=formData.bus_name;\r\n            authData.bus_type=formData.bus_type;\r\n            authData.bus_category=formData.bus_category;\r\n            authData.bus_subcategory=formData.bus_subcategory;\r\n            authData.pan=formData.pan;\r\n            authData.gstin=formData.gstin;\r\n            authData.address=formData.address;\r\n            authData.account_number=formData.account_number;\r\n            authData.account_holder_name=formData.account_holder_name;\r\n            authData.ifsc_code=formData.ifsc_code;\r\n\r\n     }\r\n     //first created cart/wishlist/order and then signed up\r\n    const cart_id=JSON.parse(localStorage.getItem('cartId'));\r\n     if(cart_id)\r\n        authData.cart_id= cart_id;\r\n    else\r\n        authData.cart_id=null;\r\n\r\n    const wishlist=JSON.parse(localStorage.getItem('wishlist'));\r\n     if(wishlist)\r\n        authData.wishlist= wishlist;\r\n    else\r\n        authData.wishlist=null;\r\n\r\n    const orders=JSON.parse(localStorage.getItem('orders'));\r\n     if(orders)\r\n        authData.orders= orders;\r\n    else\r\n        authData.orders=null;\r\n\r\n\r\n\r\n    console.log(authData);\r\n     const response= await fetch('http://localhost:5000/user/'+ mode, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(authData)\r\n     });\r\n\r\n\r\n\r\n  console.log(response);\r\n\r\n\r\n       if (!response.ok) {\r\n       //console.log(response);\r\n       let errorData=null;\r\n       try{\r\n          errorData = await response.json();\r\n         console.error('Error:', errorData.message);\r\n         }catch(e){\r\n           setErrors(e.message);\r\n         }\r\n          setErrors(errorData.message);\r\n          return;\r\n         // Handle the error message (e.g., display it to the user)\r\n        // throw json({message:errorData.message},{status:500});\r\n     }\r\n\r\n\r\n//for admin user sign up create razorpay account\r\n if(mode==='signup' && formData.user_type==='admin'){\r\n\r\n    try{\r\n        const acc_response= await fetch('http://localhost:5000/user/createRazorpayAccount', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(authData)\r\n         });\r\n        console.log(response);\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n     try{\r\n       const resData= await response.json();\r\n       console.log(\"json response \",resData);\r\n       const token=resData.token;\r\n       const userid=resData.userId;\r\n       const usertype=resData.user_type;\r\n       const expiration=new Date();\r\n       expiration.setHours(expiration.getHours()+1);\r\n       console.log(usertype);\r\n  //=========================\r\n      try{\r\n         const response=await fetch(`http://localhost:5000/user/${userid}`);\r\n          if (!response){\r\n             throw new Error('Updating User failed');\r\n          }\r\n         const respData=await response.json();\r\n         if(respData){\r\n           const loggedUser= respData.user;\r\n           console.log(loggedUser);\r\n           const user_cart= loggedUser.cart_id;\r\n           const user_wl= loggedUser.wishlist;\r\n\r\n                const ordersResp=await fetch(`http://localhost:5000/orders/getActiveOrders/${userid}`,{\r\n                headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                },});\r\n                console.log(ordersResp);\r\n                if(!ordersResp)\r\n                    throw new Error('Could not fetch your orders');\r\n                const orders=await ordersResp.json();\r\n                const user_orders=orders.data;\r\n                console.log(user_orders);\r\n\r\n           if(authCtx.isAdmin && user_cart && JSON.parse(localStorage.getItem('cartId'))){\r\n            if(user_cart != JSON.parse(localStorage.getItem('cartId'))){\r\n              let concan=window.confirm(\"Do you want to replace your previous cart with the new one?\");\r\n              if(concan){\r\n                   //user_cart=JSON.parse(localStorage.getItem('cartId'));\r\n                    await fetch(\r\n                          `http://localhost:5000/user/cart`,\r\n                      {\r\n                          method: 'PUT',\r\n                          headers:{'content-type':'application/json'},\r\n                          body:JSON.stringify({\r\n                            id:userid,\r\n                            cart_id:JSON.parse(localStorage.getItem('cartId'))})\r\n                      })\r\n              }\r\n              else\r\n                   localStorage.setItem('cartId',JSON.stringify(user_cart));\r\n              }\r\n           }\r\n           if(user_wl && JSON.parse(localStorage.getItem('Wishlist'))){\r\n              let concan=window.confirm(\"Do you want to replace your previous wishlist with the new one?\");\r\n              if(concan){\r\n                   //user_wl=JSON.parse(localStorage.getItem('wishlist'));\r\n                   await fetch(\r\n                          `http://localhost:5000/user/wishlist`,\r\n                      {\r\n                          method: 'PUT',\r\n                          headers:{'content-type':'application/json'},\r\n                          body:JSON.stringify({\r\n                            id:userid,\r\n                            wishlist:JSON.parse(localStorage.getItem('wishlist'))})\r\n                      })\r\n              }\r\n              else\r\n                   localStorage.setItem('wishlist',JSON.stringify(user_wl));\r\n\r\n           }\r\n\r\n           if(user_orders)\r\n                  localStorage.setItem('orders',JSON.stringify(user_orders));\r\n\r\n         }\r\n\r\n       }catch(error)\r\n       {\r\n         console.log(error.message);\r\n       }\r\n //===================\r\n       authCtx.login(userid, token, expiration,usertype);\r\n\r\n\r\n\r\n       //authCtx.isAdmin=(usertype==='admin');\r\n       //console.log(\"admin \",usertype);\r\n       //console.log(authCtx.isAdmin);\r\n        if(order && order==='open')\r\n            window.history.back();\r\n\r\n        if(usertype==='admin'){\r\n            navigate(\"/clientOrders\");\r\n        }\r\n        else\r\n            navigate(\"/homepage\");\r\n               console.log(token, userid, expiration);\r\n\r\n        }catch(e){\r\n           setErrors(e.message);\r\n\r\n         }\r\n}\r\nreturn (\r\n<>\r\n\r\n   {errors && <Notification status='error' message={errors}/>}\r\n  <AuthForm onSubmit={getData}/>\r\n</>\r\n)\r\n}\r\nexport default AuthenticationPage;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}