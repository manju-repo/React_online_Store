{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { json, redirect } from 'react-router-dom';\nimport { AuthContext } from '../Context/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 8\n  }, this);\n};\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport const action = auth => async ({\n  request\n}) => {\n  //const auth=useContext(AuthContext);\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupported mode.'\n    }, {\n      status: 422\n    });\n  }\n  const order = searchParams.get('order');\n  const data = await request.formData();\n  if (data.get('password') !== data.get(\"confirm_password\")) throw json({\n    message: 'Password and Confirm Password not matching'\n  }, {\n    status: 422\n  });\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  if (mode === 'signup') {\n    console.log(\"names\");\n    authData.firstname = data.get('first_name');\n    authData.lastname = data.get('last_name');\n  }\n  console.log(\"local cart id\" + localStorage.getItem('cartId'));\n  if (localStorage.getItem('cartId')) authData.cart_id = data.get('cartId');\n  console.log(authData);\n  const response = await fetch('http://localhost:5000/user/' + mode, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  console.log(\"res1\", JSON.stringify(authData));\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  console.log(\"res2\", response);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not authenticate user.'\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  console.log(\"res3\", resData);\n  const token = resData.token;\n  const userid = resData.userId;\n  //localStorage.setItem('token', token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  //localStorage.setItem('expiration',expiration.toISOString);\n\n  if (mode === 'signup') {\n    console.log('signup to login');\n    auth.login(userid, token, expiration);\n  }\n  if (order === 'open') return redirect('/payment');\n  return redirect('/');\n};\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","redirect","AuthContext","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","auth","request","searchParams","URL","url","mode","get","message","status","order","data","formData","authData","email","password","console","log","firstname","lastname","localStorage","getItem","cart_id","response","fetch","method","headers","body","JSON","stringify","ok","resData","token","userid","userId","expiration","Date","setHours","getHours","login","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\r\nimport {json, redirect} from'react-router-dom';\r\nimport {AuthContext} from '../Context/auth-context';\r\n\r\nconst AuthenticationPage=()=>{\r\nreturn <AuthForm/>;\r\n}\r\nexport default AuthenticationPage;\r\n\r\nexport const action=(auth)=> async({request})=>{\r\n\r\n    //const auth=useContext(AuthContext);\r\n    const searchParams=new URL(request.url).searchParams;\r\n    const mode=searchParams.get('mode')|| 'login';\r\n\r\n    if (mode !== 'login' && mode !== 'signup') {\r\n        throw json({ message: 'Unsupported mode.' }, { status: 422 });\r\n     }\r\n     const order=searchParams.get('order');\r\n\r\n     const data = await request.formData();\r\n\r\n     if (data.get('password') !== data.get(\"confirm_password\"))\r\n        throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\r\n\r\n     const authData={\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n     };\r\n\r\n     if(mode==='signup'){\r\n     console.log(\"names\");\r\n        authData.firstname= data.get('first_name')\r\n        authData.lastname= data.get('last_name');\r\n     }\r\n     console.log(\"local cart id\"+localStorage.getItem('cartId'));\r\n\r\n     if(localStorage.getItem('cartId'))\r\n        authData.cart_id= data.get('cartId');\r\nconsole.log(authData);\r\n     const response= await fetch('http://localhost:5000/user/'+ mode, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(authData)\r\n     });\r\nconsole.log(\"res1\",JSON.stringify(authData));\r\n      if (response.status === 422 || response.status === 401) {\r\n         return response;\r\n       }\r\nconsole.log(\"res2\",response);\r\n\r\n       if (!response.ok) {\r\n         throw json({ message: 'Could not authenticate user.' }, { status: 500 });\r\n       }\r\n       const resData= await response.json();\r\nconsole.log(\"res3\",resData);\r\n\r\n       const token=resData.token;\r\n       const userid=resData.userId;\r\n       //localStorage.setItem('token', token);\r\n       const expiration=new Date();\r\n       expiration.setHours(expiration.getHours()+1);\r\n       //localStorage.setItem('expiration',expiration.toISOString);\r\n\r\n       if(mode==='signup'){\r\n       console.log('signup to login');\r\n           auth.login(userid, token, expiration);\r\n       }\r\n        if(order==='open')\r\n           return redirect('/payment');\r\n        return redirect('/');\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}