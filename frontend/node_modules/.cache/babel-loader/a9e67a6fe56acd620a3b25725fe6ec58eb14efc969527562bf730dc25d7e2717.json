{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    addToCartFromList(state, action) {\n      const newItem = action.payload.item;\n      const quantity = action.payload.quantity;\n      console.log(\"newItem:\" + newItem + \",quantity:\" + quantity);\n      state.totalQuantity++;\n      state.changed = true;\n      state.items.push({\n        id: newItem.id,\n        quantity: quantity,\n        rate: newItem.rate,\n        totalPrice: newItem.rate * quantity,\n        name: newItem.title\n      });\n      console.log(\"items: \" + state.items);\n    },\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          quantity: 1,\n          rate: newItem.rate,\n          totalPrice: newItem.rate,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.rate;\n      }\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.rate;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","addToCartFromList","state","action","newItem","payload","item","quantity","console","log","push","id","rate","totalPrice","title","replaceCart","addToCart","existingItem","find","removeFromCart","filter","cartActions","actions"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/Store/cart_slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice=createSlice({\r\n    name:'cart',\r\n    initialState:{ items:[],totalQuantity:0,changed:false },\r\n    reducers:{\r\n\r\n        addToCartFromList(state,action){\r\n            const newItem=action.payload.item;\r\n            const quantity=action.payload.quantity;\r\n            console.log(\"newItem:\"+newItem+\",quantity:\"+quantity);\r\n            state.totalQuantity++;\r\n            state.changed=true;\r\n            state.items.push({\r\n            id:newItem.id,\r\n            quantity:quantity,\r\n            rate:newItem.rate,\r\n            totalPrice:newItem.rate*quantity,\r\n            name:newItem.title,\r\n        })\r\n        console.log(\"items: \"+ state.items);\r\n        },\r\n\r\n        replaceCart(state,action){\r\n            state.totalQuantity=action.payload.totalQuantity;\r\n            state.items=action.payload.items;\r\n        },\r\n\r\n        addToCart(state,action){\r\n            const newItem=action.payload;\r\n            const existingItem=state.items.find((item)=>item.id===newItem.id);\r\n            state.totalQuantity++;\r\n            state.changed=true;\r\n\r\n            if(!existingItem){\r\n               state.items.push({\r\n                id:newItem.id,\r\n                quantity:1,\r\n                rate:newItem.rate,\r\n                totalPrice:newItem.rate,\r\n                name:newItem.title,\r\n            })\r\n            }else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice=existingItem.totalPrice+newItem.rate;\r\n            }\r\n        },\r\n        removeFromCart(state,action){\r\n            const id=action.payload;\r\n            const existingItem=state.items.find((item)=>item.id === id);\r\n            state.totalQuantity--;\r\n            state.changed=true;\r\n            if(existingItem.quantity===1){\r\n                state.items=state.items.filter((item)=>item.id !== id);\r\n            }else{\r\n               existingItem.quantity--;\r\n               existingItem.totalPrice=existingItem.totalPrice-existingItem.rate;\r\n            }\r\n        },\r\n    }\r\n});\r\n\r\n\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}