{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    addToCartFromList(state, action) {\n      state.totalQuantity++;\n    },\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          quantity: 1,\n          rate: newItem.rate,\n          totalPrice: newItem.rate,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.rate;\n      }\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.rate;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","addToCartFromList","state","action","replaceCart","payload","addToCart","newItem","existingItem","find","item","id","push","quantity","rate","totalPrice","title","removeFromCart","filter","cartActions","actions"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/Store/cart_slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice=createSlice({\r\n    name:'cart',\r\n    initialState:{ items:[],totalQuantity:0,changed:false },\r\n    reducers:{\r\n\r\n        addToCartFromList(state,action){\r\n            state.totalQuantity++;\r\n        },\r\n\r\n        replaceCart(state,action){\r\n            state.totalQuantity=action.payload.totalQuantity;\r\n            state.items=action.payload.items;\r\n        },\r\n\r\n        addToCart(state,action){\r\n            const newItem=action.payload;\r\n            const existingItem=state.items.find((item)=>item.id===newItem.id);\r\n            state.totalQuantity++;\r\n            state.changed=true;\r\n\r\n            if(!existingItem){\r\n               state.items.push({\r\n                id:newItem.id,\r\n                quantity:1,\r\n                rate:newItem.rate,\r\n                totalPrice:newItem.rate,\r\n                name:newItem.title,\r\n            })\r\n            }else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice=existingItem.totalPrice+newItem.rate;\r\n            }\r\n        },\r\n        removeFromCart(state,action){\r\n            const id=action.payload;\r\n            const existingItem=state.items.find((item)=>item.id === id);\r\n            state.totalQuantity--;\r\n            state.changed=true;\r\n            if(existingItem.quantity===1){\r\n                state.items=state.items.filter((item)=>item.id !== id);\r\n            }else{\r\n               existingItem.quantity--;\r\n               existingItem.totalPrice=existingItem.totalPrice-existingItem.rate;\r\n            }\r\n        },\r\n    }\r\n});\r\n\r\n\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAACD,WAAW,CAAC;EACxBE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IAAEC,KAAK,EAAC,EAAE;IAACC,aAAa,EAAC,CAAC;IAACC,OAAO,EAAC;EAAM,CAAC;EACvDC,QAAQ,EAAC;IAELC,iBAAiBA,CAACC,KAAK,EAACC,MAAM,EAAC;MAC3BD,KAAK,CAACJ,aAAa,EAAE;IACzB,CAAC;IAEDM,WAAWA,CAACF,KAAK,EAACC,MAAM,EAAC;MACrBD,KAAK,CAACJ,aAAa,GAACK,MAAM,CAACE,OAAO,CAACP,aAAa;MAChDI,KAAK,CAACL,KAAK,GAACM,MAAM,CAACE,OAAO,CAACR,KAAK;IACpC,CAAC;IAEDS,SAASA,CAACJ,KAAK,EAACC,MAAM,EAAC;MACnB,MAAMI,OAAO,GAACJ,MAAM,CAACE,OAAO;MAC5B,MAAMG,YAAY,GAACN,KAAK,CAACL,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAGJ,OAAO,CAACI,EAAE,CAAC;MACjET,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACH,OAAO,GAAC,IAAI;MAElB,IAAG,CAACS,YAAY,EAAC;QACdN,KAAK,CAACL,KAAK,CAACe,IAAI,CAAC;UAChBD,EAAE,EAACJ,OAAO,CAACI,EAAE;UACbE,QAAQ,EAAC,CAAC;UACVC,IAAI,EAACP,OAAO,CAACO,IAAI;UACjBC,UAAU,EAACR,OAAO,CAACO,IAAI;UACvBnB,IAAI,EAACY,OAAO,CAACS;QACjB,CAAC,CAAC;MACF,CAAC,MAAI;QACDR,YAAY,CAACK,QAAQ,EAAE;QACvBL,YAAY,CAACO,UAAU,GAACP,YAAY,CAACO,UAAU,GAACR,OAAO,CAACO,IAAI;MAChE;IACJ,CAAC;IACDG,cAAcA,CAACf,KAAK,EAACC,MAAM,EAAC;MACxB,MAAMQ,EAAE,GAACR,MAAM,CAACE,OAAO;MACvB,MAAMG,YAAY,GAACN,KAAK,CAACL,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC3DT,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACH,OAAO,GAAC,IAAI;MAClB,IAAGS,YAAY,CAACK,QAAQ,KAAG,CAAC,EAAC;QACzBX,KAAK,CAACL,KAAK,GAACK,KAAK,CAACL,KAAK,CAACqB,MAAM,CAAER,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,MAAI;QACFH,YAAY,CAACK,QAAQ,EAAE;QACvBL,YAAY,CAACO,UAAU,GAACP,YAAY,CAACO,UAAU,GAACP,YAAY,CAACM,IAAI;MACpE;IACJ;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAMK,WAAW,GAACzB,SAAS,CAAC0B,OAAO;AAC1C,eAAe1B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}