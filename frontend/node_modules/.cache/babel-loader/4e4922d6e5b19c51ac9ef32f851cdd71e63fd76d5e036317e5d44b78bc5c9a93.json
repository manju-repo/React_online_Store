{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\",\n  _s = $RefreshSig$();\nimport AuthForm from '../components/AuthForm';\nimport { json, redirect } from 'react-router-dom';\nimport { AuthContext } from '../Context/auth-context';\nimport { useContext, useEffect } from 'react';\nimport { useAuth } from '../hooks/auth-hook';\n//import {authenticate} from '../util/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  _s();\n  const {\n    login,\n    logout,\n    token\n  } = useAuth();\n  const mode = 'login';\n  useEffect(() => {\n    const searchParams = new URL(window.location.href).searchParams;\n    mode = searchParams.get('mode') || 'login';\n    console.log(\"mode \", mode);\n    if (mode === 'logout') {\n      logout();\n    } else {\n      if (localStorage.getItem('userData')) {\n        const storedData = JSON.parse(localStorage.getItem('userData'));\n        console.log(storedData, storedData && storedData.token && new Date(storedData.expiration) > new Date());\n        if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) login(storedData.userId, storedData.token, new Date(storedData.expiration));\n      }\n    }\n    redirect('/');\n  }, [mode, token]);\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 8\n  }, this);\n};\n_s(AuthenticationPage, \"KHcNJ1mkMyO+9+jieWXFcwVM4Og=\", false, function () {\n  return [useAuth];\n});\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupported mode.'\n    }, {\n      status: 422\n    });\n  }\n  const order = searchParams.get('order');\n  const data = await request.formData();\n  if (mode === 'signup' && data.get('password') !== data.get(\"confirm_password\")) throw json({\n    message: 'Password and Confirm Password not matching'\n  }, {\n    status: 422\n  });\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  if (mode === 'signup') {\n    authData.firstname = data.get('first_name');\n    authData.lastname = data.get('last_name');\n  }\n  console.log(\"local cart id\" + localStorage.getItem('cartId'));\n  const cart_id = localStorage.getItem('cartId');\n  if (cart_id) authData.cart_id = cart_id;else authData.cart_id = null;\n  console.log(authData);\n  const response = await fetch('http://localhost:5000/user/' + mode, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not authenticate user.'\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  const token = resData.token;\n  const userid = resData.userId;\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n\n  //await authenticate(userid, token, expiration);\n  localStorage.setItem('userData', JSON.stringify({\n    userId: userid,\n    token: token,\n    expiration: expiration.toString()\n    //cartId: cart_id\n  }));\n  if (order === 'open') return redirect('/payment');\n  return redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","redirect","AuthContext","useContext","useEffect","useAuth","jsxDEV","_jsxDEV","AuthenticationPage","_s","login","logout","token","mode","searchParams","URL","window","location","href","get","console","log","localStorage","getItem","storedData","JSON","parse","Date","expiration","userId","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","url","message","status","order","data","formData","authData","email","password","firstname","lastname","cart_id","response","fetch","method","headers","body","stringify","ok","resData","userid","setHours","getHours","setItem","toString","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\r\nimport {json, redirect} from'react-router-dom';\r\nimport {AuthContext} from '../Context/auth-context';\r\nimport {useContext, useEffect} from'react';\r\nimport { useAuth } from '../hooks/auth-hook';\r\n//import {authenticate} from '../util/auth';\r\n\r\nconst AuthenticationPage=()=>{\r\nconst {  login, logout, token } = useAuth();\r\nconst mode='login';\r\n    useEffect(()=>{\r\n        const searchParams = new URL(window.location.href).searchParams;\r\n         mode = searchParams.get('mode') || 'login';\r\n    console.log(\"mode \",mode);\r\n        if(mode==='logout'){\r\n            logout();\r\n        }\r\n        else{\r\n            if(localStorage.getItem('userData')){\r\n                const storedData=JSON.parse(localStorage.getItem('userData'));\r\n                console.log(storedData, (storedData && storedData.token && new Date(storedData.expiration) > new Date()));\r\n                if(storedData && storedData.token && new Date(storedData.expiration) > new Date())\r\n                    login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n            }\r\n        }\r\n            redirect('/');\r\n    },[mode, token]);\r\nreturn <AuthForm/>;\r\n}\r\nexport default AuthenticationPage;\r\n\r\n\r\n\r\nexport async function action({request}){\r\n\r\n    const searchParams=new URL(request.url).searchParams;\r\n    const mode=searchParams.get('mode')|| 'login';\r\n\r\n\r\n\r\n    if (mode !== 'login' && mode !== 'signup') {\r\n        throw json({ message: 'Unsupported mode.' }, { status: 422 });\r\n     }\r\n     const order=searchParams.get('order');\r\n\r\n     const data = await request.formData();\r\n\r\n     if (mode==='signup' && (data.get('password') !== data.get(\"confirm_password\")))\r\n        throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\r\n\r\n     const authData={\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n     };\r\n\r\n     if(mode==='signup'){\r\n        authData.firstname= data.get('first_name')\r\n        authData.lastname= data.get('last_name');\r\n     }\r\n     console.log(\"local cart id\"+localStorage.getItem('cartId'));\r\n     const cart_id=localStorage.getItem('cartId');\r\n     if(cart_id)\r\n        authData.cart_id= cart_id;\r\n    else\r\n        authData.cart_id=null;\r\nconsole.log(authData);\r\n     const response= await fetch('http://localhost:5000/user/'+ mode, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(authData)\r\n     });\r\n      if (response.status === 422 || response.status === 401) {\r\n         return response;\r\n       }\r\n\r\n       if (!response.ok) {\r\n         throw json({ message: 'Could not authenticate user.' }, { status: 500 });\r\n       }\r\n       const resData= await response.json();\r\n\r\n       const token=resData.token;\r\n       const userid=resData.userId;\r\n       const expiration=new Date();\r\n       expiration.setHours(expiration.getHours()+1);\r\n\r\n    //await authenticate(userid, token, expiration);\r\n       localStorage.setItem(\r\n             'userData',\r\n             JSON.stringify({\r\n             userId: userid,\r\n             token: token,\r\n             expiration: expiration.toString(),\r\n             //cartId: cart_id\r\n             })\r\n             );\r\n\r\n        if(order==='open')\r\n           return redirect('/payment');\r\n        return redirect('/');\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}