{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0,\n    changed: false,\n    isInitial: true\n  },\n  reducers: {\n    setChanged(state, action) {\n      state.changed = false;\n    },\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.totalAmount = action.payload.totalAmount;\n      state.items = action.payload.items;\n      state.isInitial = false;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload.item;\n      console.log(newItem);\n      const quantity = Number(newItem.quantity || action.payload.quantity);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        console.log(\"pushing new item\");\n        state.items.push({\n          id: newItem.id,\n          quantity: quantity,\n          rate: newItem.rate,\n          totalPrice: newItem.rate * quantity,\n          type: newItem.type,\n          image: newItem.image,\n          created_by: newItem.created_by,\n          category: newItem.category,\n          alloted_stock: quantity\n        });\n        //state.totalQuantity++;\n      } else {\n        existingItem.quantity = quantity;\n        existingItem.totalPrice = quantity * newItem.rate;\n        existingItem.alloted_stock = quantity - existingItem.alloted_stock;\n      }\n      //state.totalAmount+=Number(quantity)*Number(newItem.rate);\n      //state.totalQuantity=state.items.length;\n      state.totalQuantity = state.items.reduce((total, item) => {\n        if (item.category.toLowerCase() === 'fabrics') return total + 1;else return total + item.quantity;\n      }, 0);\n      state.totalAmount = state.items.reduce((total, item) => {\n        return total + item.totalPrice;\n      }, 0);\n      console.log(state.items, state.totalQuantity, state.totalAmount);\n      state.changed = true;\n    },\n    removeFromCart(state, action) {\n      //const id=action.payload.id;\n      const rem_item = action.payload.item;\n      console.log(rem_item);\n      //=========================================\n      if (rem_item.quantity) {\n        state.items = state.items.map(item => {\n          if (item.id === rem_item.id) {\n            return {\n              ...item,\n              quantity: item.quantity - 1,\n              totalPrice: item.totalPrice - item.rate,\n              alloted_stock: item.quantity - 1 - item.alloted_stock\n            };\n          } else return item;\n        });\n        console.log(state.items);\n      } else state.items = state.items.filter(item => item.id === rem_item.id); //removing item in case stock is zero and user wants to remove it\n\n      //==========================================\n      state.items = state.items.filter(item => item.quantity !== 0);\n      //state.items=state.items.filter((item)=>item.id !== id);\n      //state.totalQuantity--;\n\n      state.totalQuantity = state.items.reduce((total, item) => {\n        if (item.category.toLowerCase() === 'fabrics') return total + 1;else return total + item.quantity;\n      }, 0);\n      //state.totalQuantity=state.items.length;\n      state.totalAmount = state.items.reduce((total, item) => {\n        return total + item.totalPrice;\n      }, 0);\n      state.changed = true;\n      console.log(state.items);\n    },\n    emptyCart(state, action) {\n      state.items = [];\n      state.totalQuantity = 0;\n      state.totalAmount = 0;\n    },\n    /* findCartTotal(state,action){\r\n         state.totalAmount = state.items.reduce((total, item) => {\r\n            return total + item.totalPrice;\r\n         }, 0);\r\n     },*/\n\n    changeCartItem(state, action) {\n      const id = action.payload.id;\n      const qty = action.payload.quantity;\n      if (qty === 0) {\n        state.items = state.items.filter(item => item.id !== id);\n        state.totalQuantity--;\n      } else {\n        const existingItem = state.items.find(item => item.id === id);\n        existingItem.quantity = Number(qty);\n        existingItem.amount = Number(qty) * existingItem.rate;\n      }\n      state.changed = true;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","changed","isInitial","reducers","setChanged","state","action","replaceCart","payload","addToCart","newItem","item","console","log","quantity","Number","existingItem","find","id","push","rate","totalPrice","type","image","created_by","category","alloted_stock","reduce","total","toLowerCase","removeFromCart","rem_item","map","filter","emptyCart","changeCartItem","qty","amount","cartActions","actions"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/Store/cart_slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice=createSlice({\r\n    name:'cart',\r\n    initialState:{ items:[],totalQuantity:0,totalAmount:0,changed:false,isInitial:true },\r\n    reducers:{\r\n\r\n        setChanged(state,action){\r\n            state.changed=false;\r\n        },\r\n\r\n        replaceCart(state,action){\r\n            state.totalQuantity=action.payload.totalQuantity;\r\n            state.totalAmount=action.payload.totalAmount;\r\n            state.items=action.payload.items;\r\n            state.isInitial=false;\r\n        },\r\n\r\n        addToCart(state,action){\r\n            const newItem=action.payload.item;\r\n            console.log(newItem);\r\n            const quantity=Number(newItem.quantity||action.payload.quantity);\r\n            const existingItem=state.items.find((item)=>item.id===newItem.id);\r\n\r\n            if(!existingItem){\r\n            console.log(\"pushing new item\");\r\n               state.items.push({\r\n                id:newItem.id,\r\n                quantity:quantity,\r\n                rate:newItem.rate,\r\n                totalPrice:newItem.rate*quantity,\r\n                type:newItem.type,\r\n                image:newItem.image,\r\n                created_by:newItem.created_by,\r\n                category:newItem.category,\r\n                alloted_stock:quantity\r\n            });\r\n                //state.totalQuantity++;\r\n            }else{\r\n                existingItem.quantity=quantity;\r\n                existingItem.totalPrice=quantity*newItem.rate;\r\n                existingItem.alloted_stock=quantity-existingItem.alloted_stock;\r\n            }\r\n            //state.totalAmount+=Number(quantity)*Number(newItem.rate);\r\n            //state.totalQuantity=state.items.length;\r\n            state.totalQuantity = state.items.reduce((total, item) => {\r\n                        if(item.category.toLowerCase()==='fabrics')\r\n                           return total+1;\r\n                        else\r\n                            return total + item.quantity;\r\n                    }, 0);\r\n\r\n            state.totalAmount = state.items.reduce((total, item) => {\r\n               return total + item.totalPrice;\r\n            }, 0);\r\n            console.log(state.items, state.totalQuantity, state.totalAmount);\r\n            state.changed=true;\r\n        },\r\n\r\n\r\n        removeFromCart(state,action){\r\n            //const id=action.payload.id;\r\n            const rem_item=action.payload.item\r\n            console.log(rem_item);\r\n        //=========================================\r\n        if(rem_item.quantity){\r\n                state.items=\r\n                        state.items.map(item => {\r\n                         if (item.id === rem_item.id) {\r\n                            return {\r\n                              ...item,\r\n                            quantity: item.quantity - 1,\r\n                            totalPrice: item.totalPrice - item.rate,\r\n                            alloted_stock: item.quantity-1 -item.alloted_stock\r\n                            };\r\n                        }\r\n                      else\r\n                        return item;\r\n                  })\r\n                  console.log(state.items);\r\n         }\r\n         else\r\n             state.items=state.items.filter((item)=>item.id === rem_item.id);   //removing item in case stock is zero and user wants to remove it\r\n\r\n        //==========================================\r\n            state.items=state.items.filter((item)=>item.quantity !== 0);\r\n            //state.items=state.items.filter((item)=>item.id !== id);\r\n            //state.totalQuantity--;\r\n\r\n            state.totalQuantity = state.items.reduce((total, item) => {\r\n                            if(item.category.toLowerCase()==='fabrics')\r\n                               return total+1;\r\n                            else\r\n                                return total + item.quantity;\r\n                        }, 0);\r\n            //state.totalQuantity=state.items.length;\r\n            state.totalAmount = state.items.reduce((total, item) => {\r\n               return total + item.totalPrice;\r\n            }, 0);\r\n            state.changed=true;\r\n          console.log(state.items);\r\n\r\n        },\r\n\r\n        emptyCart(state,action){\r\n            state.items=[];\r\n            state.totalQuantity=0;\r\n            state.totalAmount=0;\r\n        },\r\n\r\n       /* findCartTotal(state,action){\r\n            state.totalAmount = state.items.reduce((total, item) => {\r\n               return total + item.totalPrice;\r\n            }, 0);\r\n        },*/\r\n\r\n        changeCartItem(state,action){\r\n            const id=action.payload.id;\r\n            const qty=action.payload.quantity;\r\n            if(qty===0){\r\n                state.items=state.items.filter((item)=>item.id !== id);\r\n                state.totalQuantity--;\r\n            }else{\r\n                const existingItem=state.items.find((item)=>item.id===id);\r\n                existingItem.quantity=Number(qty);\r\n                existingItem.amount=Number(qty)*(existingItem.rate);\r\n            }\r\n            state.changed=true;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}