{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nlet logoutTimer;\nexport const useAuth = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const login = useCallback((uid, token, expirationDate, userType) => {\n    setToken(token);\n    setUserId(uid);\n    setIsLoggedIn(true);\n    setIsAdmin(userType === 'admin');\n    console.log(isLoggedIn, isAdmin);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    console.log(\"storing in local storage\");\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString(),\n      userType: userType\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    console.log(\"hook logout \");\n    setToken(null);\n    setIsLoggedIn(false);\n    setIsAdmin(false);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n    localStorage.removeItem('cartId');\n    localStorage.removeItem('orders');\n    localStorage.removeItem('Wish');\n  }, []);\n  useEffect(() => {\n    //auto logout\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      console.log(\"remaining time \", remainingTime);\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [logout]);\n  useEffect(() => {\n    console.log(\"auto-login\");\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    console.log(storedData, storedData && storedData.token && new Date(storedData.expiration) > new Date());\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) login(storedData.userId, storedData.token, new Date(storedData.expiration), storedData.userType);\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId,\n    isLoggedIn,\n    isAdmin\n  };\n};\n_s(useAuth, \"XGbwWXpwBbyy2o75mPDJAMOvpEw=\");","map":{"version":3,"names":["useState","useEffect","useCallback","logoutTimer","useAuth","_s","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","login","uid","expirationDate","userType","console","log","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/hooks/auth-hook.js"],"sourcesContent":["import {useState, useEffect, useCallback} from 'react';\r\nlet logoutTimer;\r\nexport const useAuth=()=>{\r\n    const [token, setToken]= useState(null);\r\n    const [tokenExpirationDate, setTokenExpirationDate]= useState(null);\r\n    const [userId, setUserId]= useState(null);\r\n    const [isLoggedIn, setIsLoggedIn]= useState(false);\r\n    const [isAdmin, setIsAdmin]= useState(false);\r\n\r\n    const login=useCallback((uid, token, expirationDate,userType)=> {\r\n      setToken(token);\r\n      setUserId(uid);\r\n      setIsLoggedIn(true);\r\n      setIsAdmin(userType==='admin');\r\n      console.log(isLoggedIn, isAdmin);\r\n      const tokenExpirationDate= expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n      setTokenExpirationDate(tokenExpirationDate);\r\n  console.log(\"storing in local storage\");\r\n      localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n      userId: uid,\r\n      token: token,\r\n      expiration: tokenExpirationDate.toISOString(),\r\n      userType: userType\r\n      })\r\n      );\r\n    },[]);\r\n\r\n    const logout=useCallback(()=>{\r\n    console.log(\"hook logout \");\r\n        setToken(null);\r\n        setIsLoggedIn(false);\r\n        setIsAdmin(false);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData');\r\n        localStorage.removeItem('cartId');\r\n        localStorage.removeItem('orders');\r\n        localStorage.removeItem('Wish')\r\n    },[]);\r\n\r\n    useEffect(()=>{                                                                             //auto logout\r\n        if(token && tokenExpirationDate){\r\n            const remainingTime = tokenExpirationDate.getTime()-new Date().getTime();\r\n            console.log(\"remaining time \",remainingTime);\r\n            logoutTimer=setTimeout(logout,remainingTime);\r\n        }else{\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    },[ logout]);\r\n\r\n    useEffect(()=>{\r\n    console.log(\"auto-login\");\r\n    const storedData=JSON.parse(localStorage.getItem('userData'));\r\n    console.log(storedData, (storedData && storedData.token && new Date(storedData.expiration) > new Date()));\r\n        if(storedData && storedData.token && new Date(storedData.expiration) > new Date())\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration),storedData.userType);\r\n    },[login]);\r\n\r\n\r\n\r\n    return {token, login, logout, userId, isLoggedIn, isAdmin};\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}