{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0,\n    changed: false,\n    isInitial: true\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.totalAmount = action.payload.totalAmount;\n      state.items = action.payload.items;\n      state.isInitial = false;\n    },\n    addToCart(state, action) {\n      console.log(\"add to slice\");\n      const newItem = action.payload.item;\n      console.log(newItem);\n      const quantity = Number(newItem.quantity || action.payload.quantity);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        console.log(\"pushing new item\");\n        state.items.push({\n          id: newItem.id,\n          quantity: quantity,\n          rate: newItem.rate,\n          totalPrice: newItem.rate * quantity,\n          type: newItem.type,\n          image: newItem.image\n        });\n        state.totalQuantity++;\n      } else {\n        existingItem.quantity = quantity;\n        existingItem.totalPrice = quantity * newItem.rate;\n      }\n      //state.totalAmount+=Number(quantity)*Number(newItem.rate);\n      console.log(state.items, state.totalQuantity, state.totalAmount);\n      state.changed = true;\n    },\n    removeFromCart(state, action) {\n      const id = action.payload.id;\n      console.log(state.totalQuantity);\n      state.items = state.items.filter(item => item.id !== id);\n      state.totalQuantity--;\n      state.changed = true;\n    },\n    emptyCart(state, action) {\n      state.items = [];\n      state.totalQuantity = 0;\n      state.totalAmount = 0;\n    },\n    findCartTotal(state, action) {\n      state.totalAmount = state.items.reduce((total, item) => {\n        return total + item.totalPrice;\n      }, 0);\n    },\n    changeCartItem(state, action) {\n      const id = action.payload.id;\n      const qty = action.payload.quantity;\n      if (qty === 0) {\n        state.items = state.items.filter(item => item.id !== id);\n        state.totalQuantity--;\n      } else {\n        const existingItem = state.items.find(item => item.id === id);\n        existingItem.quantity = Number(qty);\n        existingItem.amount = Number(qty) * existingItem.rate;\n      }\n      state.changed = true;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","changed","isInitial","reducers","replaceCart","state","action","payload","addToCart","console","log","newItem","item","quantity","Number","existingItem","find","id","push","rate","totalPrice","type","image","removeFromCart","filter","emptyCart","findCartTotal","reduce","total","changeCartItem","qty","amount","cartActions","actions"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/Store/cart_slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice=createSlice({\r\n    name:'cart',\r\n    initialState:{ items:[],totalQuantity:0,totalAmount:0,changed:false,isInitial:true },\r\n    reducers:{\r\n\r\n\r\n\r\n        replaceCart(state,action){\r\n            state.totalQuantity=action.payload.totalQuantity;\r\n            state.totalAmount=action.payload.totalAmount;\r\n            state.items=action.payload.items;\r\n            state.isInitial=false;\r\n        },\r\n\r\n        addToCart(state,action){\r\n        console.log(\"add to slice\");\r\n            const newItem=action.payload.item;\r\n            console.log(newItem);\r\n            const quantity=Number(newItem.quantity||action.payload.quantity);\r\n            const existingItem=state.items.find((item)=>item.id===newItem.id);\r\n\r\n            if(!existingItem){\r\n            console.log(\"pushing new item\");\r\n               state.items.push({\r\n                id:newItem.id,\r\n                quantity:quantity,\r\n                rate:newItem.rate,\r\n                totalPrice:newItem.rate*quantity,\r\n                type:newItem.type,\r\n                image:newItem.image,\r\n            })\r\n                state.totalQuantity++;\r\n            }else{\r\n                existingItem.quantity=quantity;\r\n                existingItem.totalPrice=quantity*newItem.rate;\r\n            }\r\n            //state.totalAmount+=Number(quantity)*Number(newItem.rate);\r\n            console.log(state.items, state.totalQuantity, state.totalAmount);\r\n            state.changed=true;\r\n        },\r\n\r\n\r\n        removeFromCart(state,action){\r\n            const id=action.payload.id;\r\n            console.log(state.totalQuantity);\r\n            state.items=state.items.filter((item)=>item.id !== id);\r\n            state.totalQuantity--;\r\n            state.changed=true;\r\n        },\r\n\r\n        emptyCart(state,action){\r\n            state.items=[];\r\n            state.totalQuantity=0;\r\n            state.totalAmount=0;\r\n        },\r\n\r\n        findCartTotal(state,action){\r\n            state.totalAmount = state.items.reduce((total, item) => {\r\n               return total + item.totalPrice;\r\n            }, 0);\r\n        },\r\n\r\n        changeCartItem(state,action){\r\n            const id=action.payload.id;\r\n            const qty=action.payload.quantity;\r\n            if(qty===0){\r\n                state.items=state.items.filter((item)=>item.id !== id);\r\n                state.totalQuantity--;\r\n            }else{\r\n                const existingItem=state.items.find((item)=>item.id===id);\r\n                existingItem.quantity=Number(qty);\r\n                existingItem.amount=Number(qty)*(existingItem.rate);\r\n            }\r\n            state.changed=true;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}