{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport AuthForm from '../components/AuthForm';\nimport { json, redirect, useParams, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../Context/auth-context';\nimport { useContext, useEffect } from 'react';\nimport Notification from '../components/notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  _s();\n  const authCtx = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState();\n  let mode = 'login';\n  let order = '';\n  const searchParams = new URL(window.location.href).searchParams;\n  mode = searchParams.get('mode');\n  order = searchParams.get('order');\n  if (!(mode === 'login' || mode === 'signup' || mode === 'logout')) {\n    setErrors('Invalid login mode');\n    return;\n  }\n  /*if(mode==='logout'){\r\n      authCtx.logout();\r\n  }*/\n  redirect('/');\n  const getData = async formData => {\n    if (mode === 'signup' && formData.password !== formData['confirm_password']) setErrors(['Password and Confirm Password not matching']);\n\n    //throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\n\n    const authData = {\n      email: formData.email,\n      password: formData.password\n    };\n    console.log(authData);\n    if (mode === 'signup') {\n      authData.firstname = formData.first_name;\n      authData.lastname = formData.last_name;\n    }\n    //console.log(\"local cart id\"+localStorage.getItem('cartId'));\n    const cart_id = localStorage.getItem('cartId');\n    if (cart_id) authData.cart_id = cart_id;else authData.cart_id = null;\n    console.log(authData);\n    const response = await fetch('http://localhost:5000/user/' + mode, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(authData)\n    });\n    console.log(response);\n    /* if (response.status === 422 || response.status === 401) {\r\n        return response;\r\n      }*/\n\n    if (!response.ok) {\n      //console.log(response);\n      let errorData = null;\n      try {\n        errorData = await response.json();\n        console.error('Error:', errorData.message);\n      } catch (e) {\n        setErrors(e.message);\n      }\n      setErrors(errorData.message);\n      return;\n      // Handle the error message (e.g., display it to the user)\n      // throw json({message:errorData.message},{status:500});\n    }\n    try {\n      const resData = await response.json();\n      console.log(\"json response \", resData);\n      const token = resData.token;\n      const userid = resData.userId;\n      const usertype = resData.user_type;\n      const expiration = new Date();\n      expiration.setHours(expiration.getHours() + 1);\n      console.log(usertype);\n      authCtx.login(userid, token, expiration, usertype);\n      //authCtx.isAdmin=(usertype==='admin');\n      console.log(\"admin \", usertype);\n      console.log(authCtx.isAdmin);\n      if (order && order === 'open') redirect('/payment');\n      navigate('/');\n      console.log(token, userid, expiration);\n    } catch (e) {\n      setErrors(e.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [errors && /*#__PURE__*/_jsxDEV(Notification, {\n      status: \"error\",\n      message: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(AuthForm, {\n      onSubmit: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_s(AuthenticationPage, \"vBPzHFJNUpnWwnncQT4XzGd6mCo=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["useState","AuthForm","json","redirect","useParams","useNavigate","AuthContext","useContext","useEffect","Notification","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthenticationPage","_s","authCtx","navigate","errors","setErrors","mode","order","searchParams","URL","window","location","href","get","getData","formData","password","authData","email","console","log","firstname","first_name","lastname","last_name","cart_id","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","ok","errorData","error","message","e","resData","token","userid","userId","usertype","user_type","expiration","Date","setHours","getHours","login","isAdmin","children","status","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import {useState} from 'react';\r\nimport AuthForm from '../components/AuthForm';\r\nimport {json, redirect, useParams, useNavigate} from'react-router-dom';\r\nimport {AuthContext} from '../Context/auth-context';\r\nimport {useContext, useEffect} from'react';\r\nimport Notification from '../components/notification';\r\n\r\n\r\nconst AuthenticationPage=()=>{\r\nconst authCtx=useContext(AuthContext);\r\nconst navigate= useNavigate();\r\nconst [errors, setErrors]=useState();\r\nlet mode='login';\r\nlet order='';\r\n        const searchParams = new URL(window.location.href).searchParams;\r\n         mode = searchParams.get('mode') ;\r\n         order = searchParams.get('order') ;\r\n         if (!(mode === 'login' || mode === 'signup' || mode==='logout')) {\r\n             setErrors('Invalid login mode');\r\n             return;\r\n          }\r\n        /*if(mode==='logout'){\r\n            authCtx.logout();\r\n        }*/\r\n        redirect('/');\r\n\r\n\r\n\r\n\r\n    const getData=async(formData)=>{\r\n\r\n     if (mode==='signup' && (formData.password !== formData['confirm_password']))\r\n                 setErrors(['Password and Confirm Password not matching']);\r\n\r\n        //throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\r\n\r\n     const authData={\r\n        email: formData.email,\r\n        password: formData.password,\r\n     };\r\nconsole.log(authData);\r\n     if(mode==='signup'){\r\n        authData.firstname= formData.first_name;\r\n        authData.lastname= formData.last_name;\r\n     }\r\n     //console.log(\"local cart id\"+localStorage.getItem('cartId'));\r\n     const cart_id=localStorage.getItem('cartId');\r\n     if(cart_id)\r\n        authData.cart_id= cart_id;\r\n    else\r\n        authData.cart_id=null;\r\nconsole.log(authData);\r\n     const response= await fetch('http://localhost:5000/user/'+ mode, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(authData)\r\n     });\r\n  console.log(response);\r\n     /* if (response.status === 422 || response.status === 401) {\r\n         return response;\r\n       }*/\r\n\r\n       if (!response.ok) {\r\n       //console.log(response);\r\n       let errorData=null;\r\n       try{\r\n          errorData = await response.json();\r\n         console.error('Error:', errorData.message);\r\n         }catch(e){\r\n           setErrors(e.message);\r\n         }\r\n          setErrors(errorData.message);\r\n          return;\r\n         // Handle the error message (e.g., display it to the user)\r\n        // throw json({message:errorData.message},{status:500});\r\n     }\r\n\r\n     try{\r\n       const resData= await response.json();\r\nconsole.log(\"json response \",resData);\r\n       const token=resData.token;\r\n       const userid=resData.userId;\r\n       const usertype=resData.user_type;\r\n       const expiration=new Date();\r\n       expiration.setHours(expiration.getHours()+1);\r\n       console.log(usertype);\r\n       authCtx.login(userid, token, expiration,usertype);\r\n       //authCtx.isAdmin=(usertype==='admin');\r\n       console.log(\"admin \",usertype);\r\n       console.log(authCtx.isAdmin);\r\n\r\n        if(order && order==='open')\r\n         redirect('/payment');\r\n         navigate('/');\r\n               console.log(token, userid, expiration);\r\n\r\n        }catch(e){\r\n           setErrors(e.message);\r\n\r\n         }\r\n}\r\nreturn (\r\n<>\r\n\r\n   {errors && <Notification status='error' message={errors}/>}\r\n  <AuthForm onSubmit={getData}/>\r\n</>\r\n)\r\n}\r\nexport default AuthenticationPage;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}