{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      console.log(state.changed);\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload.item;\n      console.log(newItem);\n      const quantity = Number(newItem.quantity || action.payload.quantity);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          quantity: quantity,\n          rate: newItem.rate,\n          totalPrice: newItem.rate * quantity,\n          type: newItem.type,\n          image: newItem.image\n        });\n        state.totalQuantity++;\n      } else {\n        existingItem.quantity = quantity;\n        existingItem.totalPrice = quantity * newItem.rate;\n      }\n      console.log(state.items);\n      state.changed = true;\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity) {\n        state.items = state.items.filter(item => item.id !== id);\n        state.totalQuantity--;\n        state.changed = true;\n      }\n    },\n    changeCartItem(state, action) {\n      const id = action.payload.id;\n      const qty = action.payload.quantity;\n      console.log(id, qty);\n      if (qty == 0) {\n        state.items = state.items.filter(item => item.id !== id);\n        state.totalQuantity--;\n      } else {\n        const existingItem = state.items.find(item => item.id === id);\n        existingItem.quantity = Number(qty);\n        existingItem.totalPrice = Number(qty) * existingItem.rate;\n      }\n      state.changed = true;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","console","log","payload","addToCart","newItem","item","quantity","Number","existingItem","find","id","push","rate","totalPrice","type","image","removeFromCart","filter","changeCartItem","qty","cartActions","actions"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/Store/cart_slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice=createSlice({\r\n    name:'cart',\r\n    initialState:{ items:[],totalQuantity:0,changed:false },\r\n    reducers:{\r\n\r\n\r\n\r\n        replaceCart(state,action){\r\n        console.log(state.changed);\r\n            state.totalQuantity=action.payload.totalQuantity;\r\n            state.items=action.payload.items;\r\n        },\r\n\r\n        addToCart(state,action){\r\n            const newItem=action.payload.item;\r\n            console.log(newItem);\r\n            const quantity=Number(newItem.quantity||action.payload.quantity);\r\n            const existingItem=state.items.find((item)=>item.id===newItem.id);\r\n\r\n            if(!existingItem){\r\n               state.items.push({\r\n                id:newItem.id,\r\n                quantity:quantity,\r\n                rate:newItem.rate,\r\n                totalPrice:newItem.rate*quantity,\r\n                type:newItem.type,\r\n                image:newItem.image,\r\n            })\r\n                state.totalQuantity++;\r\n            }else{\r\n                existingItem.quantity=quantity;\r\n                existingItem.totalPrice=quantity*newItem.rate;\r\n            }\r\n            console.log(state.items);\r\n            state.changed=true;\r\n        },\r\n\r\n\r\n        removeFromCart(state,action){\r\n            const id=action.payload;\r\n            const existingItem=state.items.find((item)=>item.id === id);\r\n            if(existingItem.quantity){\r\n                state.items=state.items.filter((item)=>item.id !== id);\r\n                state.totalQuantity--;\r\n                state.changed=true;\r\n            }\r\n        },\r\n\r\n        changeCartItem(state,action){\r\n            const id=action.payload.id;\r\n            const qty=action.payload.quantity;\r\n            console.log(id,qty);\r\n            if(qty==0){\r\n                state.items=state.items.filter((item)=>item.id !== id);\r\n                state.totalQuantity--;\r\n            }else{\r\n                const existingItem=state.items.find((item)=>item.id===id);\r\n                existingItem.quantity=Number(qty);\r\n                existingItem.totalPrice=Number(qty)*(existingItem.rate);\r\n            }\r\n            state.changed=true;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}