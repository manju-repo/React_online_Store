{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nlet logoutTimer;\nexport const useAuth = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [superAdmin, setSuperAdmin] = useState(false);\n  const login = useCallback((uid, token, expirationDate, userType, super_admin) => {\n    console.log(uid, expirationDate, userType, typeof super_admin);\n    setToken(token);\n    setUserId(uid);\n    setIsLoggedIn(true);\n    if (typeof super_admin === 'string') setIsAdmin(userType === 'admin');else setIsAdmin(super_admin);\n    /* const isSuperAdmin = typeof super_admin === 'boolean'\r\n         ? super_admin\r\n         : super_admin === \"true\";*/\n    setSuperAdmin(super_admin === 'true');\n    console.log(isLoggedIn, isAdmin, superAdmin);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    console.log(\"storing in local storage\", superAdmin);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString(),\n      userType: userType,\n      superAdmin: superAdmin.toString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    console.log(\"hook logout \");\n    setToken(null);\n    setIsLoggedIn(false);\n    setIsAdmin(false);\n    setSuperAdmin(false);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n    localStorage.removeItem('cartId');\n    localStorage.removeItem('orders');\n    localStorage.removeItem('Wishlist');\n    localStorage.removeItem('avatar');\n  }, []);\n  useEffect(() => {\n    //auto logout\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      console.log(\"remaining time \", remainingTime);\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, tokenExpirationDate, logout]);\n  useEffect(() => {\n    console.log(\"auto-login\");\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    console.log(\"page refresh\");\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      /*const isSuperAdmin = typeof storedData.superAdmin === 'boolean'\r\n      ? storedData.superAdmin\r\n      : storedData.superAdmin === \"true\";\r\n      console.log(isSuperAdmin);*/\n      login(storedData.userId, storedData.token, new Date(storedData.expiration), storedData.userType, storedData.superAdmin);\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId,\n    isLoggedIn,\n    isAdmin,\n    superAdmin\n  };\n};\n_s(useAuth, \"F8qdlAyespy3Ta5cocuZ+y1RDgM=\");","map":{"version":3,"names":["useState","useEffect","useCallback","logoutTimer","useAuth","_s","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","superAdmin","setSuperAdmin","login","uid","expirationDate","userType","super_admin","console","log","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","toString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"sources":["C:/Users/Arnav/IdeaProjects/Adore/React_online_Store/frontend/src/hooks/auth-hook.js"],"sourcesContent":["import {useState, useEffect, useCallback} from 'react';\r\nlet logoutTimer;\r\nexport const useAuth=()=>{\r\n    const [token, setToken]= useState(null);\r\n    const [tokenExpirationDate, setTokenExpirationDate]= useState(null);\r\n    const [userId, setUserId]= useState(null);\r\n    const [isLoggedIn, setIsLoggedIn]= useState(false);\r\n    const [isAdmin, setIsAdmin]= useState(false);\r\n    const [superAdmin, setSuperAdmin]= useState(false);\r\n\r\n    const login=useCallback((uid, token, expirationDate,userType, super_admin)=> {\r\n    console.log(uid, expirationDate, userType, typeof(super_admin));\r\n      setToken(token);\r\n      setUserId(uid);\r\n      setIsLoggedIn(true);\r\n      if(typeof(super_admin)==='string')\r\n         setIsAdmin(userType==='admin');\r\n     else\r\n        setIsAdmin(super_admin);\r\n     /* const isSuperAdmin = typeof super_admin === 'boolean'\r\n          ? super_admin\r\n          : super_admin === \"true\";*/\r\n      setSuperAdmin(super_admin==='true');\r\n      console.log(isLoggedIn, isAdmin,superAdmin);\r\n      const tokenExpirationDate= expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n      setTokenExpirationDate(tokenExpirationDate);\r\n  console.log(\"storing in local storage\",superAdmin);\r\n      localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n      userId: uid,\r\n      token: token,\r\n      expiration: tokenExpirationDate.toISOString(),\r\n      userType: userType,\r\n      superAdmin: superAdmin.toString(),\r\n      })\r\n      );\r\n    },[]);\r\n\r\n    const logout=useCallback(()=>{\r\n    console.log(\"hook logout \");\r\n        setToken(null);\r\n        setIsLoggedIn(false);\r\n        setIsAdmin(false);\r\n        setSuperAdmin(false);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData');\r\n        localStorage.removeItem('cartId');\r\n        localStorage.removeItem('orders');\r\n        localStorage.removeItem('Wishlist');\r\n        localStorage.removeItem('avatar');\r\n\r\n    },[]);\r\n\r\n    useEffect(()=>{                                                                             //auto logout\r\n        if(token && tokenExpirationDate){\r\n            const remainingTime = tokenExpirationDate.getTime()-new Date().getTime();\r\n            console.log(\"remaining time \",remainingTime);\r\n            logoutTimer=setTimeout(logout,remainingTime);\r\n        }else{\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    },[token, tokenExpirationDate, logout]);\r\n\r\n    useEffect(()=>{\r\n    console.log(\"auto-login\");\r\n    const storedData=JSON.parse(localStorage.getItem('userData'));\r\n    console.log(\"page refresh\");\r\n        if(storedData && storedData.token && new Date(storedData.expiration) > new Date()){\r\n            /*const isSuperAdmin = typeof storedData.superAdmin === 'boolean'\r\n            ? storedData.superAdmin\r\n            : storedData.superAdmin === \"true\";\r\n            console.log(isSuperAdmin);*/\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration),storedData.userType,storedData.superAdmin);\r\n        }\r\n    },[login]);\r\n\r\n\r\n\r\n    return {token, login, logout, userId, isLoggedIn, isAdmin,superAdmin};\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}