{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nlet logoutTimer;\nexport const useAuth = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(null);\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    console.log(\"storing in local storage\");\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    //auto logout\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date.getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) login(storedData.userId, storedData.token, new Date(storedData.expiration));\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId\n  };\n};\n_s(useAuth, \"J16meP+vVLCU1l7p7kLLQZGUjz4=\");","map":{"version":3,"names":["useState","useEffect","useCallback","logoutTimer","useAuth","_s","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","login","uid","expirationDate","Date","getTime","console","log","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/hooks/auth-hook.js"],"sourcesContent":["import {useState, useEffect, useCallback} from 'react';\r\nlet logoutTimer;\r\nexport const useAuth=()=>{\r\n    const [token, setToken]= useState(null);\r\n    const [tokenExpirationDate, setTokenExpirationDate]= useState();\r\n    const [userId, setUserId]= useState(null);\r\n\r\n    const login=useCallback((uid, token, expirationDate)=> {\r\n      setToken(token);\r\n      setUserId(uid);\r\n      const tokenExpirationDate= expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n      setTokenExpirationDate(tokenExpirationDate);\r\n  console.log(\"storing in local storage\");\r\n      localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n      userId: uid,\r\n      token: token,\r\n      expiration: tokenExpirationDate.toISOString()\r\n      })\r\n      );\r\n    },[]);\r\n\r\n    const logout=useCallback(()=>{\r\n        setToken(null);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData');\r\n    },[]);\r\n\r\n    useEffect(()=>{                                                                             //auto logout\r\n        if(token && tokenExpirationDate){\r\n            const remainingTime = tokenExpirationDate.getTime()-new Date.getTime();\r\n            logoutTimer=setTimeout(logout,remainingTime);\r\n        }else{\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    },[token, logout, tokenExpirationDate]);\r\n\r\n    useEffect(()=>{\r\n        const storedData=JSON.parse(localStorage.getItem('userData'));\r\n        if(storedData && storedData.token && new Date(storedData.expiration) > new Date())\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    },[login]);\r\n\r\n    return {token, login, logout, userId};\r\n};"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAO,OAAO;AACtD,IAAIC,WAAW;AACf,OAAO,MAAMC,OAAO,GAACA,CAAA,KAAI;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAEP,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACQ,mBAAmB,EAAEC,sBAAsB,CAAC,GAAET,QAAQ,CAAC,CAAC;EAC/D,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAEX,QAAQ,CAAC,IAAI,CAAC;EAEzC,MAAMY,KAAK,GAACV,WAAW,CAAC,CAACW,GAAG,EAAEP,KAAK,EAAEQ,cAAc,KAAI;IACrDP,QAAQ,CAACD,KAAK,CAAC;IACfK,SAAS,CAACE,GAAG,CAAC;IACd,MAAML,mBAAmB,GAAEM,cAAc,IAAI,IAAIC,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IAC5FP,sBAAsB,CAACD,mBAAmB,CAAC;IAC/CS,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACnCC,YAAY,CAACC,OAAO,CACpB,UAAU,EACVC,IAAI,CAACC,SAAS,CAAC;MACfZ,MAAM,EAAEG,GAAG;MACXP,KAAK,EAAEA,KAAK;MACZiB,UAAU,EAAEf,mBAAmB,CAACgB,WAAW,CAAC;IAC5C,CAAC,CACD,CAAC;EACH,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,MAAM,GAACvB,WAAW,CAAC,MAAI;IACzBK,QAAQ,CAAC,IAAI,CAAC;IACdE,sBAAsB,CAAC,IAAI,CAAC;IAC5BE,SAAS,CAAC,IAAI,CAAC;IACfQ,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;EACvC,CAAC,EAAC,EAAE,CAAC;EAELzB,SAAS,CAAC,MAAI;IAA8E;IACxF,IAAGK,KAAK,IAAIE,mBAAmB,EAAC;MAC5B,MAAMmB,aAAa,GAAGnB,mBAAmB,CAACQ,OAAO,CAAC,CAAC,GAAC,IAAID,IAAI,CAACC,OAAO,CAAC,CAAC;MACtEb,WAAW,GAACyB,UAAU,CAACH,MAAM,EAACE,aAAa,CAAC;IAChD,CAAC,MAAI;MACDE,YAAY,CAAC1B,WAAW,CAAC;IAC7B;EACJ,CAAC,EAAC,CAACG,KAAK,EAAEmB,MAAM,EAAEjB,mBAAmB,CAAC,CAAC;EAEvCP,SAAS,CAAC,MAAI;IACV,MAAM6B,UAAU,GAACT,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACa,OAAO,CAAC,UAAU,CAAC,CAAC;IAC7D,IAAGF,UAAU,IAAIA,UAAU,CAACxB,KAAK,IAAI,IAAIS,IAAI,CAACe,UAAU,CAACP,UAAU,CAAC,GAAG,IAAIR,IAAI,CAAC,CAAC,EAC7EH,KAAK,CAACkB,UAAU,CAACpB,MAAM,EAAEoB,UAAU,CAACxB,KAAK,EAAE,IAAIS,IAAI,CAACe,UAAU,CAACP,UAAU,CAAC,CAAC;EACnF,CAAC,EAAC,CAACX,KAAK,CAAC,CAAC;EAEV,OAAO;IAACN,KAAK;IAAEM,KAAK;IAAEa,MAAM;IAAEf;EAAM,CAAC;AACzC,CAAC;AAACL,EAAA,CA5CWD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}