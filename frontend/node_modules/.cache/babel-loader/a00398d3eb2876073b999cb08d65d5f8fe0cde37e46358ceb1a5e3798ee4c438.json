{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\",\n  _s = $RefreshSig$();\nimport AuthForm from '../components/AuthForm';\nimport { json, redirect } from 'react-router-dom';\nimport { AuthContext } from '../Context/auth-context';\nimport { useContext, useEffect } from 'react';\nimport { useAuth } from '../hooks/auth-hook';\n//import {authenticate} from '../util/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  _s();\n  const {\n    login,\n    logout,\n    token\n  } = useAuth();\n  let mode = 'login';\n  useEffect(() => {\n    const searchParams = new URL(window.location.href).searchParams;\n    mode = searchParams.get('mode') || 'login';\n    console.log(\"mode \", mode);\n    if (mode === 'logout') {\n      logout();\n    } else {\n      console.log(\"login \", mode);\n      if (localStorage.getItem('userData')) {\n        const storedData = JSON.parse(localStorage.getItem('userData'));\n        console.log(storedData, storedData && storedData.token && new Date(storedData.expiration) > new Date());\n        if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) login(storedData.userId, storedData.token, new Date(storedData.expiration));\n      }\n    }\n    redirect('/');\n  }, [localStorage.getItem('userData')]);\n  const getData = formData => {\n    console.log(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    submitData: getData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 8\n  }, this);\n};\n_s(AuthenticationPage, \"KHcNJ1mkMyO+9+jieWXFcwVM4Og=\", false, function () {\n  return [useAuth];\n});\n_c = AuthenticationPage;\nexport default AuthenticationPage;\n\n/*async function getData({request}){\r\n\n   const searchParams=new URL(request.url).searchParams;\r\n   const mode=searchParams.get('mode')|| 'login';\r\n\n\n\n   if (mode !== 'login' && mode !== 'signup') {\r\n       throw json({ message: 'Unsupported mode.' }, { status: 422 });\r\n    }\r\n    const order=searchParams.get('order');\r\n\n    const data = await request.formData();\r\n\n    if (mode==='signup' && (data.get('password') !== data.get(\"confirm_password\")))\r\n       throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\r\n\n    const authData={\r\n       email: data.get('email'),\r\n       password: data.get('password'),\r\n    };\r\n\n    if(mode==='signup'){\r\n       authData.firstname= data.get('first_name')\r\n       authData.lastname= data.get('last_name');\r\n    }\r\n    console.log(\"local cart id\"+localStorage.getItem('cartId'));\r\n    const cart_id=localStorage.getItem('cartId');\r\n    if(cart_id)\r\n       authData.cart_id= cart_id;\r\n   else\r\n       authData.cart_id=null;\r\nconsole.log(authData);\r\n    const response= await fetch('http://localhost:5000/user/'+ mode, {\r\n     method: 'POST',\r\n     headers: {\r\n       'Content-Type': 'application/json',\r\n     },\r\n     body: JSON.stringify(authData)\r\n    });\r\n     if (response.status === 422 || response.status === 401) {\r\n        return response;\r\n      }\r\n\n      if (!response.ok) {\r\n        throw json({ message: 'Could not authenticate user.' }, { status: 500 });\r\n      }\r\n      const resData= await response.json();\r\n\n      const token=resData.token;\r\n      const userid=resData.userId;\r\n      const expiration=new Date();\r\n      expiration.setHours(expiration.getHours()+1);\r\n\n   //await authenticate(userid, token, expiration);\r\n      localStorage.setItem(\r\n            'userData',\r\n            JSON.stringify({\r\n            userId: userid,\r\n            token: token,\r\n            expiration: expiration.toString(),\r\n            //cartId: cart_id\r\n            })\r\n            );\r\n\n       if(order==='open')\r\n          return redirect('/payment');\r\n       return redirect('/');\r\n}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","redirect","AuthContext","useContext","useEffect","useAuth","jsxDEV","_jsxDEV","AuthenticationPage","_s","login","logout","token","mode","searchParams","URL","window","location","href","get","console","log","localStorage","getItem","storedData","JSON","parse","Date","expiration","userId","getData","formData","submitData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\r\nimport {json, redirect} from'react-router-dom';\r\nimport {AuthContext} from '../Context/auth-context';\r\nimport {useContext, useEffect} from'react';\r\nimport { useAuth } from '../hooks/auth-hook';\r\n//import {authenticate} from '../util/auth';\r\n\r\nconst AuthenticationPage=()=>{\r\nconst {  login, logout, token } = useAuth();\r\nlet mode='login';\r\n    useEffect(()=>{\r\n        const searchParams = new URL(window.location.href).searchParams;\r\n         mode = searchParams.get('mode') || 'login';\r\n    console.log(\"mode \",mode);\r\n        if(mode==='logout'){\r\n            logout();\r\n        }\r\n        else{\r\n            console.log(\"login \",mode);\r\n\r\n            if(localStorage.getItem('userData')){\r\n                const storedData=JSON.parse(localStorage.getItem('userData'));\r\n                console.log(storedData, (storedData && storedData.token && new Date(storedData.expiration) > new Date()));\r\n                if(storedData && storedData.token && new Date(storedData.expiration) > new Date())\r\n                    login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n            }\r\n        }\r\n            redirect('/');\r\n    },[localStorage.getItem('userData')]);\r\n\r\n    const getData=(formData)=>{\r\n        console.log(formData);\r\n    }\r\nreturn <AuthForm submitData={getData}/>;\r\n}\r\nexport default AuthenticationPage;\r\n\r\n\r\n\r\n /*async function getData({request}){\r\n\r\n    const searchParams=new URL(request.url).searchParams;\r\n    const mode=searchParams.get('mode')|| 'login';\r\n\r\n\r\n\r\n    if (mode !== 'login' && mode !== 'signup') {\r\n        throw json({ message: 'Unsupported mode.' }, { status: 422 });\r\n     }\r\n     const order=searchParams.get('order');\r\n\r\n     const data = await request.formData();\r\n\r\n     if (mode==='signup' && (data.get('password') !== data.get(\"confirm_password\")))\r\n        throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\r\n\r\n     const authData={\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n     };\r\n\r\n     if(mode==='signup'){\r\n        authData.firstname= data.get('first_name')\r\n        authData.lastname= data.get('last_name');\r\n     }\r\n     console.log(\"local cart id\"+localStorage.getItem('cartId'));\r\n     const cart_id=localStorage.getItem('cartId');\r\n     if(cart_id)\r\n        authData.cart_id= cart_id;\r\n    else\r\n        authData.cart_id=null;\r\nconsole.log(authData);\r\n     const response= await fetch('http://localhost:5000/user/'+ mode, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(authData)\r\n     });\r\n      if (response.status === 422 || response.status === 401) {\r\n         return response;\r\n       }\r\n\r\n       if (!response.ok) {\r\n         throw json({ message: 'Could not authenticate user.' }, { status: 500 });\r\n       }\r\n       const resData= await response.json();\r\n\r\n       const token=resData.token;\r\n       const userid=resData.userId;\r\n       const expiration=new Date();\r\n       expiration.setHours(expiration.getHours()+1);\r\n\r\n    //await authenticate(userid, token, expiration);\r\n       localStorage.setItem(\r\n             'userData',\r\n             JSON.stringify({\r\n             userId: userid,\r\n             token: token,\r\n             expiration: expiration.toString(),\r\n             //cartId: cart_id\r\n             })\r\n             );\r\n\r\n        if(order==='open')\r\n           return redirect('/payment');\r\n        return redirect('/');\r\n}\r\n*/\r\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAAQC,IAAI,EAAEC,QAAQ,QAAM,kBAAkB;AAC9C,SAAQC,WAAW,QAAO,yBAAyB;AACnD,SAAQC,UAAU,EAAEC,SAAS,QAAM,OAAO;AAC1C,SAASC,OAAO,QAAQ,oBAAoB;AAC5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,kBAAkB,GAACA,CAAA,KAAI;EAAAC,EAAA;EAC7B,MAAM;IAAGC,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC3C,IAAIQ,IAAI,GAAC,OAAO;EACZT,SAAS,CAAC,MAAI;IACV,MAAMU,YAAY,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACJ,YAAY;IAC9DD,IAAI,GAAGC,YAAY,CAACK,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;IAC/CC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACR,IAAI,CAAC;IACrB,IAAGA,IAAI,KAAG,QAAQ,EAAC;MACfF,MAAM,CAAC,CAAC;IACZ,CAAC,MACG;MACAS,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACR,IAAI,CAAC;MAE1B,IAAGS,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAC;QAChC,MAAMC,UAAU,GAACC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC7DH,OAAO,CAACC,GAAG,CAACG,UAAU,EAAGA,UAAU,IAAIA,UAAU,CAACZ,KAAK,IAAI,IAAIe,IAAI,CAACH,UAAU,CAACI,UAAU,CAAC,GAAG,IAAID,IAAI,CAAC,CAAE,CAAC;QACzG,IAAGH,UAAU,IAAIA,UAAU,CAACZ,KAAK,IAAI,IAAIe,IAAI,CAACH,UAAU,CAACI,UAAU,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC,EAC7EjB,KAAK,CAACc,UAAU,CAACK,MAAM,EAAEL,UAAU,CAACZ,KAAK,EAAE,IAAIe,IAAI,CAACH,UAAU,CAACI,UAAU,CAAC,CAAC;MACnF;IACJ;IACI3B,QAAQ,CAAC,GAAG,CAAC;EACrB,CAAC,EAAC,CAACqB,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;EAErC,MAAMO,OAAO,GAAEC,QAAQ,IAAG;IACtBX,OAAO,CAACC,GAAG,CAACU,QAAQ,CAAC;EACzB,CAAC;EACL,oBAAOxB,OAAA,CAACR,QAAQ;IAACiC,UAAU,EAAEF;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACvC,CAAC;AAAA3B,EAAA,CA3BKD,kBAAkB;EAAA,QACUH,OAAO;AAAA;AAAAgC,EAAA,GADnC7B,kBAAkB;AA4BxB,eAAeA,kBAAkB;;AAIhC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArEC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}