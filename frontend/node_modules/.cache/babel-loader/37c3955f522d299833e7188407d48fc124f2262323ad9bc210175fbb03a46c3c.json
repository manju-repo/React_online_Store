{"ast":null,"code":"import { cartActions } from './cart_slice';\nimport { uiActions } from './ui_slice';\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:5000/cart');\n      if (!response.ok) {\n        throw new Error('could not fetch Cart');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      console.log(\"in fetch cart--items:\" + cartData[0].items[0].image + \" qty:\" + cartData[0].totalQuantity);\n      dispatch(cartActions.replaceCart({\n        items: cartData[0].items || [],\n        totalQuantity: cartData[0].totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Could not fetch cart data'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  console.log(\"in sendcart\", cart.totalQuantity, cart.items);\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'Pending',\n      title: 'Sending',\n      message: 'Sending cart data'\n    }));\n    const sendData = async () => {\n      console.log(\"cart_id\" + localStorage.getItem('cart_id'));\n      let cart_id = localStorage.getItem('cart_id');\n      if (!!cart_id) {\n        const response = await fetch('http://localhost:5000/cart/' + cart_id, {\n          method: 'PUT',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Sending cart data failed');\n        }\n      } else {\n        const response = await fetch('http://localhost:5000/cart', {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Sending cart data failed');\n        }\n        localStorage.setItem(\"cart_id\", cart.id);\n      }\n      ;\n      cart.changed = false;\n      try {\n        await sendData();\n        dispatch(uiActions.showNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent cart data successfully'\n        }));\n      } catch (error) {\n        dispatch(uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Could not send cart data'\n        }));\n      }\n    };\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","console","log","items","image","totalQuantity","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendData","localStorage","getItem","cart_id","method","headers","body","JSON","stringify","setItem","id","changed"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/Store/cart_actions.js"],"sourcesContent":["import { cartActions } from './cart_slice';\r\nimport {uiActions } from './ui_slice';\r\n\r\nexport const fetchCartData=()=>{\r\n    return async (dispatch)=>{\r\n        const fetchData=async()=>{\r\n            const response=await fetch('http://localhost:5000/cart');\r\n            if(! response.ok){\r\n                throw new Error('could not fetch Cart');\r\n            }\r\n            const data=await response.json();\r\n            return data;\r\n        };\r\n        try{\r\n            const cartData=await fetchData();\r\n        console.log(\"in fetch cart--items:\"+cartData[0].items[0].image+\" qty:\"+cartData[0].totalQuantity);\r\n            dispatch(\r\n                cartActions.replaceCart({\r\n                items:cartData[0].items || [],\r\n                totalQuantity:cartData[0].totalQuantity,\r\n                })\r\n            )\r\n        }catch(error){\r\n        dispatch(\r\n            uiActions.showNotification({\r\n                status: 'error',\r\n                title:  'Error!',\r\n                message: 'Could not fetch cart data',\r\n                })\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const sendCartData=(cart)=>{\r\nconsole.log(\"in sendcart\",cart.totalQuantity,cart.items);\r\n\r\n    return async(dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            status: 'Pending',\r\n            title: 'Sending',\r\n            message:'Sending cart data',\r\n        }));\r\n\r\n\r\n        const sendData=async()=>{\r\nconsole.log(\"cart_id\"+localStorage.getItem('cart_id'));\r\n            let cart_id=localStorage.getItem('cart_id');\r\n            if(!!cart_id){\r\n                const response=await fetch(\r\n                    'http://localhost:5000/cart/'+cart_id,\r\n                    {\r\n                        method: 'PUT',\r\n                        headers:{'content-type':'application/json'},\r\n                        body:JSON.stringify({\r\n                          items:cart.items,\r\n                          totalQuantity:cart.totalQuantity\r\n                        })\r\n                    }\r\n                );\r\n                if (!response.ok){\r\n                    throw new Error('Sending cart data failed');\r\n                }\r\n            }\r\n            else\r\n            {\r\n            const response=await fetch(\r\n                'http://localhost:5000/cart',\r\n                {\r\n                    method: 'POST',\r\n                    headers:{'content-type':'application/json'},\r\n                    body:JSON.stringify({\r\n                      items:cart.items,\r\n                      totalQuantity:cart.totalQuantity\r\n                    })\r\n                }\r\n            );\r\n            if (!response.ok){\r\n                throw new Error('Sending cart data failed');\r\n            }\r\n                localStorage.setItem(\"cart_id\",cart.id);\r\n            };\r\n            cart.changed=false;\r\n\r\n        try{\r\n            await sendData();\r\n            dispatch(\r\n            uiActions.showNotification({\r\n                status:'success',\r\n                title: 'Success!',\r\n                message: 'Sent cart data successfully',\r\n            }                                                                                                                                   )\r\n            );\r\n\r\n        }catch(error){\r\n            dispatch(\r\n             uiActions.showNotification({\r\n                status:'error',\r\n                title: 'Error!',\r\n                message: 'Could not send cart data',\r\n            }\r\n            ));\r\n        }\r\n    }\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}