{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [{\n      id: '0',\n      type: '',\n      image: '',\n      rate: 0,\n      quantity: 0,\n      totalPrice: 0\n    }],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload.item;\n      console.log(newItem);\n      const quantity = Number(newItem.quantity || action.payload.quantity);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          quantity: quantity,\n          rate: newItem.rate,\n          totalPrice: newItem.rate * quantity,\n          type: newItem.type,\n          image: newItem.image\n        });\n        state.totalQuantity++;\n      } else {\n        existingItem.quantity += quantity;\n        existingItem.totalPrice += quantity * newItem.rate;\n      }\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n        state.totalQuantity--;\n      } else {\n        existingItem.quantity -= 0.5;\n        existingItem.totalPrice -= existingItem.rate / 2;\n      }\n      state.changed = true;\n    },\n    changeCartItem(state, action) {\n      const id = action.payload.id;\n      const qty = action.payload.quantity;\n      console.log(id, qty);\n      const existingItem = state.items.find(item => item.id === id);\n      existingItem.quantity = qty;\n      existingItem.totalPrice = qty * existingItem.rate;\n      state.changed = true;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","id","type","image","rate","quantity","totalPrice","totalQuantity","changed","reducers","replaceCart","state","action","payload","addToCart","newItem","item","console","log","Number","existingItem","find","push","removeFromCart","filter","changeCartItem","qty","cartActions","actions"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/Store/cart_slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice=createSlice({\r\n    name:'cart',\r\n    initialState:{ items:[{id:'0',type:'',image:'',rate:0,quantity:0,totalPrice:0}],totalQuantity:0,changed:false },\r\n    reducers:{\r\n\r\n\r\n\r\n        replaceCart(state,action){\r\n            state.totalQuantity=action.payload.totalQuantity;\r\n            state.items=action.payload.items;\r\n        },\r\n\r\n        addToCart(state,action){\r\n            const newItem=action.payload.item;\r\n            console.log(newItem);\r\n            const quantity=Number(newItem.quantity||action.payload.quantity);\r\n            const existingItem=state.items.find((item)=>item.id===newItem.id);\r\n            state.changed=true;\r\n\r\n            if(!existingItem){\r\n               state.items.push({\r\n                id:newItem.id,\r\n                quantity:quantity,\r\n                rate:newItem.rate,\r\n                totalPrice:newItem.rate*quantity,\r\n                type:newItem.type,\r\n                image:newItem.image,\r\n            })\r\n                state.totalQuantity++;\r\n            }else{\r\n                existingItem.quantity+=quantity;\r\n                existingItem.totalPrice+=quantity*newItem.rate;\r\n            }\r\n        },\r\n\r\n\r\n        removeFromCart(state,action){\r\n            const id=action.payload;\r\n            const existingItem=state.items.find((item)=>item.id === id);\r\n            if(existingItem.quantity===1){\r\n                state.items=state.items.filter((item)=>item.id !== id);\r\n                state.totalQuantity--;\r\n            }else{\r\n               existingItem.quantity-=0.5;\r\n               existingItem.totalPrice-=existingItem.rate/2;\r\n            }\r\n            state.changed=true;\r\n        },\r\n\r\n        changeCartItem(state,action){\r\n            const id=action.payload.id;\r\n            const qty=action.payload.quantity;\r\n            console.log(id,qty);\r\n            const existingItem=state.items.find((item)=>item.id===id);\r\n            existingItem.quantity=qty;\r\n            existingItem.totalPrice=qty*existingItem.rate;\r\n            state.changed=true;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}