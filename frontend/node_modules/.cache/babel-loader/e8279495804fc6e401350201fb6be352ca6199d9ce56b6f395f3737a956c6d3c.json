{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\",\n  _s = $RefreshSig$();\nimport AuthForm from '../components/AuthForm';\nimport { json, redirect, useParams } from 'react-router-dom';\nimport { AuthContext } from '../Context/auth-context';\nimport { useContext, useEffect } from 'react';\nimport { useAuth } from '../hooks/auth-hook';\n//import {authenticate} from '../util/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  _s();\n  const authCtx = useContext(AuthContext);\n  //const {  login, logout, token } = authCtx();\n  let {\n    mode,\n    order\n  } = useParams();\n\n  //let mode='login';\n  useEffect(() => {\n    const searchParams = new URL(window.location.href).searchParams;\n    //console.log(searchParams.get('mode'));\n    mode = searchParams.get('mode');\n    if (mode !== 'login' && mode !== 'signup') {\n      throw json({\n        message: 'Unsupported mode.'\n      }, {\n        status: 422\n      });\n    }\n    if (mode === 'logout') {\n      authCtx.logout();\n    }\n    redirect('/');\n  });\n  const getData = async formData => {\n    if (mode === 'signup' && formData.password !== formData['confirm_password']) throw json({\n      message: 'Password and Confirm Password not matching'\n    }, {\n      status: 422\n    });\n    const authData = {\n      email: formData.email,\n      password: formData.password\n    };\n    console.log(authData);\n    if (mode === 'signup') {\n      authData.firstname = formData.first_name;\n      authData.lastname = formData.last_name;\n    }\n    console.log(\"local cart id\" + localStorage.getItem('cartId'));\n    const cart_id = localStorage.getItem('cartId');\n    if (cart_id) authData.cart_id = cart_id;else authData.cart_id = null;\n    console.log(authData);\n    const response = await fetch('http://localhost:5000/user/' + mode, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(authData)\n    });\n    console.log(response);\n    if (response.status === 422 || response.status === 401) {\n      return response;\n    }\n    if (!response.ok) {\n      console.log(response);\n      const errorData = await response.json();\n      console.error('Error:', errorData.message);\n      // Handle the error message (e.g., display it to the user)\n      throw json({\n        message: errorData.message\n      }, {\n        status: 500\n      });\n    }\n    const resData = await response.json();\n    console.log(\"json response \", resData);\n    const token = resData.token;\n    const userid = resData.userId;\n    const expiration = new Date();\n    expiration.setHours(expiration.getHours() + 1);\n    console.log(token, userid, expiration);\n    authCtx.login(userid, token, expiration);\n    if (order === 'open') return redirect('/payment');\n    return redirect('/');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    onSubmit: getData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 8\n  }, this);\n};\n_s(AuthenticationPage, \"0vMKZ3rcmxAvRV9tyUzf5f4TUHg=\", false, function () {\n  return [useParams];\n});\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","redirect","useParams","AuthContext","useContext","useEffect","useAuth","jsxDEV","_jsxDEV","AuthenticationPage","_s","authCtx","mode","order","searchParams","URL","window","location","href","get","message","status","logout","getData","formData","password","authData","email","console","log","firstname","first_name","lastname","last_name","localStorage","getItem","cart_id","response","fetch","method","headers","body","JSON","stringify","ok","errorData","error","resData","token","userid","userId","expiration","Date","setHours","getHours","login","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\r\nimport {json, redirect, useParams} from'react-router-dom';\r\nimport {AuthContext} from '../Context/auth-context';\r\nimport {useContext, useEffect} from'react';\r\nimport { useAuth } from '../hooks/auth-hook';\r\n//import {authenticate} from '../util/auth';\r\n\r\nconst AuthenticationPage=()=>{\r\nconst authCtx=useContext(AuthContext);\r\n    //const {  login, logout, token } = authCtx();\r\n    let {mode,order}=useParams();\r\n\r\n//let mode='login';\r\n    useEffect(()=>{\r\n        const searchParams = new URL(window.location.href).searchParams;\r\n        //console.log(searchParams.get('mode'));\r\n         mode = searchParams.get('mode') ;\r\n         if (mode !== 'login' && mode !== 'signup') {\r\n             throw json({ message: 'Unsupported mode.' }, { status: 422 });\r\n          }\r\n        if(mode==='logout'){\r\n            authCtx.logout();\r\n        }\r\n        redirect('/');\r\n    });\r\n\r\n\r\n\r\n\r\n    const getData=async(formData)=>{\r\n\r\n\r\n\r\n     if (mode==='signup' && (formData.password !== formData['confirm_password']))\r\n        throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\r\n\r\n     const authData={\r\n        email: formData.email,\r\n        password: formData.password,\r\n     };\r\nconsole.log(authData);\r\n     if(mode==='signup'){\r\n        authData.firstname= formData.first_name;\r\n        authData.lastname= formData.last_name;\r\n     }\r\n     console.log(\"local cart id\"+localStorage.getItem('cartId'));\r\n     const cart_id=localStorage.getItem('cartId');\r\n     if(cart_id)\r\n        authData.cart_id= cart_id;\r\n    else\r\n        authData.cart_id=null;\r\nconsole.log(authData);\r\n     const response= await fetch('http://localhost:5000/user/'+ mode, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(authData)\r\n     });\r\n  console.log(response);\r\n      if (response.status === 422 || response.status === 401) {\r\n         return response;\r\n       }\r\n\r\n       if (!response.ok) {\r\n       console.log(response);\r\n\r\n                 const errorData = await response.json();\r\n                 console.error('Error:', errorData.message);\r\n                 // Handle the error message (e.g., display it to the user)\r\n                 throw json({message:errorData.message},\r\n                            {status:500});\r\n\r\n    }\r\n       const resData= await response.json();\r\nconsole.log(\"json response \",resData);\r\n       const token=resData.token;\r\n       const userid=resData.userId;\r\n       const expiration=new Date();\r\n       expiration.setHours(expiration.getHours()+1);\r\nconsole.log(token, userid, expiration);\r\n       authCtx.login(userid, token, expiration);\r\n\r\n        if(order==='open')\r\n           return redirect('/payment');\r\n        return redirect('/');\r\n}\r\nreturn <AuthForm onSubmit={getData}/>;\r\n}\r\nexport default AuthenticationPage;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}