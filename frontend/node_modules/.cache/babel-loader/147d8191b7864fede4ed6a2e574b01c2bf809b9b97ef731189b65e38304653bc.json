{"ast":null,"code":"import { useEffect, useRef, useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classes from './Cart.module.css';\nimport Card from './card';\nimport { useNavigate, redirect } from 'react-router-dom';\nimport Modal from './Modal';\nimport Notification from './notification';\nimport { WishlistContext } from '../Context/wishlist-context';\nconst Wishlist = () => {\n\n  /* const dispatch=useDispatch();\r\n   const wishlist=useContext(WishlistContext);\r\n     const showCart = useSelector((state) => state.ui.cartIsVisible);\r\n   const notification = useSelector((state) => state.ui.notification);\r\n   const modal=useRef();\r\n   const navigate=useNavigate();\r\n   //let isInitial=true;\r\n  \n   useEffect(() => {\r\n          if(!cartTotalItems)\r\n               modal.current.close();\r\n        return() => {\r\n          dispatch(uiActions.clearNotification());\r\n        }\r\n     }, [cart,dispatch]);\r\n  \n    useEffect(()=>{\r\n  \n     cartTotalItems && showCart && modal.current.open();\r\n     return() => {\r\n            dispatch(uiActions.clearNotification());\r\n             dispatch(uiActions.setCartVisibility(false));\r\n          }\r\n    }, [dispatch, showCart]);\r\n  \n  \n  \n   function handleReset(){\r\n         dispatch(uiActions.setCartVisibility(false));\r\n       dispatch(uiActions.clearNotification());\r\n       modal.current.close();\r\n       navigate('/');\r\n    }\r\n     const handleOrder=async()=>{\r\n       dispatch(uiActions.setCartVisibility(false));\r\n       modal.current.close();\r\n  //check stock of each item in cartItems\r\n  \n       try{\r\n           const response = await fetch('http://localhost:5000/orders',{\r\n                           method:'POST',\r\n                           headers:{'content-type':'application/json'},\r\n                           body:JSON.stringify({items:[cartItems],totalQuantity:cartTotalItems,totalAmount:cartAmount})\r\n           });\r\n           const {orderId} = await response.json();\r\n           console.log(orderId);\r\n  \n         createOrder(cartItems,cartTotalItems,cartAmount,orderId);\r\n       console.log(cartItems, item,orderId);\r\n       navigate('/order/'+orderId);\r\n       //navigate('/payment');\r\n       }\r\n       catch(error){\r\n              console.log(error.message);\r\n              dispatch(\r\n                      uiActions.showNotification({\r\n                      status: 'error',\r\n                      title:  'Error!',\r\n                      message: 'Could not place Order. Please try again',\r\n                    })\r\n                  );\r\n       }\r\n   }\r\n  \n      return(<>\r\n       <Modal ref={modal} onReset={handleReset} onOrder={handleOrder} >\r\n       <h2>My Cart</h2>\r\n  \n       <div className={classes.empty}>\r\n           <span></span>\r\n           <span></span>\r\n           <span><h4>Quantity</h4></span>\r\n           <span><h4>Sub-Total</h4></span>\r\n           <span></span>\r\n       </div>\r\n         <div className={classes.cartItemsContainer}>\r\n       <ul>\r\n           {cartItems.map((item)=>(\r\n               item.quantity>0 &&\r\n               <CartItem\r\n                   key={item.id}\r\n                  item={{\r\n                       id:item.id,\r\n                       type:item.type,\r\n                       rate:item.rate,\r\n                       image:item.image,\r\n                       quantity:item.quantity,\r\n                       totalPrice:item.totalPrice,\r\n                       category:item.category\r\n                       }}\r\n               />\r\n           ))}\r\n       </ul>\r\n       </div>\r\n       <div className={classes.summary}>\r\n       <span>Total Items: {cartTotalItems}</span><span>Amount: {cartAmount}</span>\r\n       </div>\r\n       <div className={classes.actions} >\r\n       <button className={classes.button} onClick={handleReset}>Continue Shopping</button>\r\n       <button className={classes.button} onClick={handleOrder}>Order Now</button>\r\n       </div>\r\n       </Modal>\r\n   { !cartTotalItems &&\r\n        (<div className={classes.shop} >\r\n        <button style={{borderRadius:'20px'}} onClick={handleReset}>Start Shopping</button>\r\n        <img style={{height:'100px',width:'100px',borderRadius:'20px'}} src=\"https://i.pinimg.com/236x/f9/31/39/f931398e98f3566c894b675a1b51c602.jpg\"/>\r\n        </div>)\r\n   }\r\n  </>\r\n  );\r\n  */};\n_c = Wishlist;\nexport default Wishlist;\nvar _c;\n$RefreshReg$(_c, \"Wishlist\");","map":{"version":3,"names":["useEffect","useRef","useContext","useSelector","useDispatch","classes","Card","useNavigate","redirect","Modal","Notification","WishlistContext","Wishlist","_c","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/components/wishlist.js"],"sourcesContent":["import {useEffect, useRef, useContext} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport classes from './Cart.module.css';\r\n\r\nimport Card from './card';\r\nimport {useNavigate,redirect} from 'react-router-dom';\r\nimport Modal from './Modal';\r\nimport Notification from './notification';\r\n\r\nimport {WishlistContext} from '../Context/wishlist-context';\r\n\r\nconst Wishlist=()=>{\r\n\r\n   /* const dispatch=useDispatch();\r\n    const wishlist=useContext(WishlistContext);\r\n\r\n    const showCart = useSelector((state) => state.ui.cartIsVisible);\r\n    const notification = useSelector((state) => state.ui.notification);\r\n    const modal=useRef();\r\n    const navigate=useNavigate();\r\n    //let isInitial=true;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n         if(!cartTotalItems)\r\n                modal.current.close();\r\n         return() => {\r\n           dispatch(uiActions.clearNotification());\r\n         }\r\n      }, [cart,dispatch]);\r\n\r\n\r\n     useEffect(()=>{\r\n\r\n\r\n      cartTotalItems && showCart && modal.current.open();\r\n      return() => {\r\n             dispatch(uiActions.clearNotification());\r\n              dispatch(uiActions.setCartVisibility(false));\r\n           }\r\n     }, [dispatch, showCart]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function handleReset(){\r\n\r\n        dispatch(uiActions.setCartVisibility(false));\r\n        dispatch(uiActions.clearNotification());\r\n        modal.current.close();\r\n        navigate('/');\r\n     }\r\n\r\n    const handleOrder=async()=>{\r\n        dispatch(uiActions.setCartVisibility(false));\r\n        modal.current.close();\r\n//check stock of each item in cartItems\r\n\r\n\r\n        try{\r\n            const response = await fetch('http://localhost:5000/orders',{\r\n                            method:'POST',\r\n                            headers:{'content-type':'application/json'},\r\n                            body:JSON.stringify({items:[cartItems],totalQuantity:cartTotalItems,totalAmount:cartAmount})\r\n            });\r\n            const {orderId} = await response.json();\r\n            console.log(orderId);\r\n\r\n\r\n\r\n        createOrder(cartItems,cartTotalItems,cartAmount,orderId);\r\n        console.log(cartItems, item,orderId);\r\n        navigate('/order/'+orderId);\r\n        //navigate('/payment');\r\n        }\r\n        catch(error){\r\n               console.log(error.message);\r\n               dispatch(\r\n                       uiActions.showNotification({\r\n                       status: 'error',\r\n                       title:  'Error!',\r\n                       message: 'Could not place Order. Please try again',\r\n                     })\r\n                   );\r\n        }\r\n    }\r\n\r\n\r\n       return(<>\r\n        <Modal ref={modal} onReset={handleReset} onOrder={handleOrder} >\r\n        <h2>My Cart</h2>\r\n\r\n\r\n        <div className={classes.empty}>\r\n            <span></span>\r\n            <span></span>\r\n            <span><h4>Quantity</h4></span>\r\n            <span><h4>Sub-Total</h4></span>\r\n            <span></span>\r\n        </div>\r\n\r\n        <div className={classes.cartItemsContainer}>\r\n        <ul>\r\n            {cartItems.map((item)=>(\r\n                item.quantity>0 &&\r\n                <CartItem\r\n                    key={item.id}\r\n                   item={{\r\n                        id:item.id,\r\n                        type:item.type,\r\n                        rate:item.rate,\r\n                        image:item.image,\r\n                        quantity:item.quantity,\r\n                        totalPrice:item.totalPrice,\r\n                        category:item.category\r\n                        }}\r\n                />\r\n            ))}\r\n        </ul>\r\n        </div>\r\n        <div className={classes.summary}>\r\n        <span>Total Items: {cartTotalItems}</span><span>Amount: {cartAmount}</span>\r\n        </div>\r\n        <div className={classes.actions} >\r\n        <button className={classes.button} onClick={handleReset}>Continue Shopping</button>\r\n        <button className={classes.button} onClick={handleOrder}>Order Now</button>\r\n        </div>\r\n        </Modal>\r\n    { !cartTotalItems &&\r\n         (<div className={classes.shop} >\r\n         <button style={{borderRadius:'20px'}} onClick={handleReset}>Start Shopping</button>\r\n         <img style={{height:'100px',width:'100px',borderRadius:'20px'}} src=\"https://i.pinimg.com/236x/f9/31/39/f931398e98f3566c894b675a1b51c602.jpg\"/>\r\n         </div>)\r\n    }\r\n</>\r\n);\r\n\r\n */ }\r\n\r\n\r\n    export default Wishlist;"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAO,OAAO;AACnD,SAAQC,WAAW,EAACC,WAAW,QAAO,aAAa;AACnD,OAAOC,OAAO,MAAM,mBAAmB;AAEvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,WAAW,EAACC,QAAQ,QAAO,kBAAkB;AACrD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,SAAQC,eAAe,QAAO,6BAA6B;AAE3D,MAAMC,QAAQ,GAACA,CAAA,KAAI;;EAEhjICD,QAAQ;AAoIV,eAAeA,QAAQ;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}