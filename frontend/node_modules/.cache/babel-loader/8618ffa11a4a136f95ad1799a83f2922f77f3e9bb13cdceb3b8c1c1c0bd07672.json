{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Fabrics.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { uiActions } from '../Store/ui_slice';\nimport FabricsList from '../components/FabricsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FabricsPage() {\n  _s();\n  const [fabrics, setFabrics] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    category,\n    sub_category\n  } = useParams();\n  console.log(category, sub_category);\n  let queryString = \"\";\n  if (sub_category) {\n    queryString = `?sub_category=${sub_category}`;\n  }\n  const fetchFabrics = async dispatch => {\n    try {\n      console.log(\"in fabrics useeffect\");\n      const response = await fetch(`http://localhost:5000/${category}${queryString}`);\n      if (!response.ok) {\n        throw new Error('Fetching Fabrics failed');\n      }\n      const resData = await response.json();\n      console.log(resData);\n      setFabrics(resData);\n    } catch (error) {\n      /*dispatch(\r\n        uiActions.showNotification({\r\n        status: 'error',\r\n        title:  'Error!',\r\n        message: error.message,\r\n      })\r\n      );*/\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchFabrics();\n    return () => {\n      dispatch(uiActions.clearNotification());\n    };\n  }, [dispatch, category, sub_category]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fabrics && /*#__PURE__*/_jsxDEV(FabricsList, {\n      list: fabrics,\n      category: category,\n      updateFabricList: fetchFabrics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n}\n_s(FabricsPage, \"O6FAih9Uo/87qcG5IYVoCEILvsM=\", false, function () {\n  return [useDispatch, useParams];\n});\n_c = FabricsPage;\n;\nexport default FabricsPage;\nvar _c;\n$RefreshReg$(_c, \"FabricsPage\");","map":{"version":3,"names":["useEffect","useState","useParams","useDispatch","uiActions","FabricsList","jsxDEV","_jsxDEV","Fragment","_Fragment","FabricsPage","_s","fabrics","setFabrics","dispatch","category","sub_category","console","log","queryString","fetchFabrics","response","fetch","ok","Error","resData","json","error","message","clearNotification","children","list","updateFabricList","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/pages/Fabrics.js"],"sourcesContent":["import { useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useDispatch} from'react-redux';\r\nimport {uiActions } from '../Store/ui_slice';\r\nimport FabricsList from '../components/FabricsList';\r\n\r\nfunction FabricsPage() {\r\n  const [fabrics, setFabrics] = useState([]);\r\n  const dispatch= useDispatch();\r\n  const {category,sub_category} = useParams();\r\n  console.log(category, sub_category);\r\n  let queryString=\"\";\r\n  if(sub_category){\r\n    queryString=`?sub_category=${sub_category}`;\r\n  }\r\n    const fetchFabrics=async(dispatch)=>{\r\n        try{\r\n        console.log(\"in fabrics useeffect\");\r\n\r\n              const response = await fetch(`http://localhost:5000/${category}${queryString}`);\r\n              if (!response.ok) {\r\n                throw new Error('Fetching Fabrics failed')\r\n              }\r\n              const resData = await response.json();\r\n              console.log(resData);\r\n              setFabrics(resData);\r\n          }catch(error){\r\n              /*dispatch(\r\n                uiActions.showNotification({\r\n                status: 'error',\r\n                title:  'Error!',\r\n                message: error.message,\r\n              })\r\n            );*/\r\n            console.log(error.message);\r\n           }\r\n        }\r\n\r\n  useEffect(() => {\r\n        fetchFabrics();\r\n        return()=>{\r\n            dispatch(uiActions.clearNotification());\r\n        }\r\n    },[dispatch, category, sub_category]);\r\n    return (\r\n    <>{fabrics && <FabricsList list={fabrics} category={category} updateFabricList={fetchFabrics}/>}</>);\r\n  };\r\n\r\n    export default FabricsPage;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC1C,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAAQC,WAAW,QAAM,aAAa;AACtC,SAAQC,SAAS,QAAQ,mBAAmB;AAC5C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMa,QAAQ,GAAEX,WAAW,CAAC,CAAC;EAC7B,MAAM;IAACY,QAAQ;IAACC;EAAY,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC3Ce,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAEC,YAAY,CAAC;EACnC,IAAIG,WAAW,GAAC,EAAE;EAClB,IAAGH,YAAY,EAAC;IACdG,WAAW,GAAE,iBAAgBH,YAAa,EAAC;EAC7C;EACE,MAAMI,YAAY,GAAC,MAAMN,QAAQ,IAAG;IAChC,IAAG;MACHG,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MAE7B,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,yBAAwBP,QAAS,GAAEI,WAAY,EAAC,CAAC;MAC/E,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MACA,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACrCT,OAAO,CAACC,GAAG,CAACO,OAAO,CAAC;MACpBZ,UAAU,CAACY,OAAO,CAAC;IACvB,CAAC,QAAME,KAAK,EAAC;MACT;AACd;AACA;AACA;AACA;AACA;AACA;MACYV,OAAO,CAACC,GAAG,CAACS,KAAK,CAACC,OAAO,CAAC;IAC3B;EACH,CAAC;EAEP5B,SAAS,CAAC,MAAM;IACVoB,YAAY,CAAC,CAAC;IACd,OAAM,MAAI;MACNN,QAAQ,CAACV,SAAS,CAACyB,iBAAiB,CAAC,CAAC,CAAC;IAC3C,CAAC;EACL,CAAC,EAAC,CAACf,QAAQ,EAAEC,QAAQ,EAAEC,YAAY,CAAC,CAAC;EACrC,oBACAT,OAAA,CAAAE,SAAA;IAAAqB,QAAA,EAAGlB,OAAO,iBAAIL,OAAA,CAACF,WAAW;MAAC0B,IAAI,EAAEnB,OAAQ;MAACG,QAAQ,EAAEA,QAAS;MAACiB,gBAAgB,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAAG,CAAC;AACrG;AAACzB,EAAA,CAxCMD,WAAW;EAAA,QAEFP,WAAW,EACKD,SAAS;AAAA;AAAAmC,EAAA,GAHlC3B,WAAW;AAwCjB;AAEC,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}