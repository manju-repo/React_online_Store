{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\",\n  _s = $RefreshSig$();\nimport AuthForm from '../components/AuthForm';\nimport { json, redirect, useParams } from 'react-router-dom';\nimport { AuthContext } from '../Context/auth-context';\nimport { useContext, useEffect } from 'react';\nimport { useAuth } from '../hooks/auth-hook';\n//import {authenticate} from '../util/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  _s();\n  const {\n    login,\n    logout,\n    token\n  } = useAuth();\n  let mode = 'login';\n  useEffect(() => {\n    const searchParams = new URL(window.location.href).searchParams;\n    console.log(searchParams.get('mode'));\n    mode = searchParams.get('mode') || 'login';\n    if (mode === 'logout') {\n      logout();\n    }\n    redirect('/');\n  }, [localStorage.getItem('userData')]);\n  const getData = async formData => {\n    console.log(formData);\n    /*async function getData({request}){\r\n    \n       const searchParams=new URL(request.url).searchParams;\r\n       const mode=searchParams.get('mode')|| 'login';*/\n\n    if (mode !== 'login' && mode !== 'signup') {\n      throw json({\n        message: 'Unsupported mode.'\n      }, {\n        status: 422\n      });\n    }\n    const order = useParams.get('order');\n    if (mode === 'signup' && formData.password !== formData['confirm_password']) throw json({\n      message: 'Password and Confirm Password not matching'\n    }, {\n      status: 422\n    });\n    const authData = {\n      email: formData.email,\n      password: formData.password\n    };\n    if (mode === 'signup') {\n      authData.firstname = formData.first_name;\n      authData.lastname = formData.last_name;\n    }\n    console.log(\"local cart id\" + localStorage.getItem('cartId'));\n    const cart_id = localStorage.getItem('cartId');\n    if (cart_id) authData.cart_id = cart_id;else authData.cart_id = null;\n    console.log(authData);\n    const response = await fetch('http://localhost:5000/user/' + mode, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(authData)\n    });\n    if (response.status === 422 || response.status === 401) {\n      return response;\n    }\n    if (!response.ok) {\n      throw json({\n        message: 'Could not authenticate user.'\n      }, {\n        status: 500\n      });\n    }\n    const resData = await response.json();\n    const token = resData.token;\n    const userid = resData.userId;\n    const expiration = new Date();\n    expiration.setHours(expiration.getHours() + 1);\n\n    //await authenticate(userid, token, expiration);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: userid,\n      token: token,\n      expiration: expiration.toString()\n      //cartId: cart_id\n    }));\n    if (order === 'open') return redirect('/payment');\n    return redirect('/');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    onSubmit: getData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 8\n  }, this);\n};\n_s(AuthenticationPage, \"KHcNJ1mkMyO+9+jieWXFcwVM4Og=\", false, function () {\n  return [useAuth];\n});\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","redirect","useParams","AuthContext","useContext","useEffect","useAuth","jsxDEV","_jsxDEV","AuthenticationPage","_s","login","logout","token","mode","searchParams","URL","window","location","href","console","log","get","localStorage","getItem","getData","formData","message","status","order","password","authData","email","firstname","first_name","lastname","last_name","cart_id","response","fetch","method","headers","body","JSON","stringify","ok","resData","userid","userId","expiration","Date","setHours","getHours","setItem","toString","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\r\nimport {json, redirect, useParams} from'react-router-dom';\r\nimport {AuthContext} from '../Context/auth-context';\r\nimport {useContext, useEffect} from'react';\r\nimport { useAuth } from '../hooks/auth-hook';\r\n//import {authenticate} from '../util/auth';\r\n\r\nconst AuthenticationPage=()=>{\r\nconst {  login, logout, token } = useAuth();\r\nlet mode='login';\r\n    useEffect(()=>{\r\n        const searchParams = new URL(window.location.href).searchParams;\r\n        console.log(searchParams.get('mode'));\r\n         mode = searchParams.get('mode') || 'login';\r\n        if(mode==='logout'){\r\n            logout();\r\n        }\r\n        redirect('/');\r\n    },[localStorage.getItem('userData')]);\r\n\r\n\r\n\r\n\r\n    const getData=async(formData)=>{\r\n        console.log(formData);\r\n /*async function getData({request}){\r\n\r\n    const searchParams=new URL(request.url).searchParams;\r\n    const mode=searchParams.get('mode')|| 'login';*/\r\n\r\n    if (mode !== 'login' && mode !== 'signup') {\r\n        throw json({ message: 'Unsupported mode.' }, { status: 422 });\r\n     }\r\n     const order=useParams.get('order');\r\n\r\n\r\n     if (mode==='signup' && (formData.password !== formData['confirm_password']))\r\n        throw json({ message: 'Password and Confirm Password not matching' }, { status: 422 });\r\n\r\n     const authData={\r\n        email: formData.email,\r\n        password: formData.password,\r\n     };\r\n\r\n     if(mode==='signup'){\r\n        authData.firstname= formData.first_name;\r\n        authData.lastname= formData.last_name;\r\n     }\r\n     console.log(\"local cart id\"+localStorage.getItem('cartId'));\r\n     const cart_id=localStorage.getItem('cartId');\r\n     if(cart_id)\r\n        authData.cart_id= cart_id;\r\n    else\r\n        authData.cart_id=null;\r\nconsole.log(authData);\r\n     const response= await fetch('http://localhost:5000/user/'+ mode, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(authData)\r\n     });\r\n      if (response.status === 422 || response.status === 401) {\r\n         return response;\r\n       }\r\n\r\n       if (!response.ok) {\r\n         throw json({ message: 'Could not authenticate user.' }, { status: 500 });\r\n       }\r\n       const resData= await response.json();\r\n\r\n       const token=resData.token;\r\n       const userid=resData.userId;\r\n       const expiration=new Date();\r\n       expiration.setHours(expiration.getHours()+1);\r\n\r\n    //await authenticate(userid, token, expiration);\r\n       localStorage.setItem(\r\n             'userData',\r\n             JSON.stringify({\r\n             userId: userid,\r\n             token: token,\r\n             expiration: expiration.toString(),\r\n             //cartId: cart_id\r\n             })\r\n             );\r\n\r\n        if(order==='open')\r\n           return redirect('/payment');\r\n        return redirect('/');\r\n}\r\nreturn <AuthForm onSubmit={getData}/>;\r\n}\r\nexport default AuthenticationPage;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}