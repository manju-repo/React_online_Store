{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useContext } from 'react';\nlet logoutTimer;\nexport const useAuth = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [superAdmin, setSuperAdmin] = useState(false);\n  const [isSubscribed, setIsSubscribed] = useState(null);\n  const setSubscription = useCallback(subscription => {\n    console.log('setting notification pref ', subscription);\n    setIsSubscribed(subscription);\n  });\n  const login = useCallback((uid, token, expirationDate, userType, super_admin, isSubscribed) => {\n    console.log(uid, expirationDate, userType, isSubscribed);\n\n    /*if(super_admin===null)\r\n          super_admin=JSON.parse(localStorage.getItem('superAdmin'))||false;\r\n      if(isSubscribed===null)\r\n        isSubscribed=JSON.parse(localStorage.getItem('isSubscribed'));\r\n    console.log(super_admin, isSubscribed);*/\n    setToken(token);\n    setUserId(uid);\n    setIsLoggedIn(true);\n    setIsAdmin(userType === 'admin');\n    setIsSubscribed(isSubscribed);\n    if (typeof super_admin === 'string') {\n      const isSuperAdmin = super_admin === \"true\";\n      setSuperAdmin(isSuperAdmin);\n    } else {\n      console.log(super_admin);\n      setSuperAdmin(super_admin);\n    }\n    console.log(isLoggedIn, isAdmin, superAdmin, isSubscribed);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    console.log(\"storing in local storage\", superAdmin);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString(),\n      userType: userType,\n      superAdmin: superAdmin,\n      isSubscribed: isSubscribed\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    console.log(\"hook logout \");\n    setToken(null);\n    setIsLoggedIn(false);\n    setIsSubscribed(false);\n    setIsAdmin(false);\n    setSuperAdmin(false);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n    localStorage.removeItem('cartId');\n    localStorage.removeItem('orders');\n    localStorage.removeItem('Wishlist');\n    localStorage.removeItem('Notifications');\n    localStorage.removeItem('avatar');\n    localStorage.removeItem('products');\n  }, []);\n  useEffect(() => {\n    //auto logout\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      //console.log(\"remaining time \",remainingTime);\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, tokenExpirationDate, logout]);\n  useEffect(() => {\n    console.log(\"auto-login\");\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    console.log(\"page refresh\");\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      /*const isSuperAdmin = typeof storedData.superAdmin === 'boolean'\r\n      ? storedData.superAdmin\r\n      : storedData.superAdmin === \"true\";\r\n      console.log(isSuperAdmin);*/\n      login(storedData.userId, storedData.token, new Date(storedData.expiration), storedData.userType, storedData.superAdmin, storedData.isSubscribed);\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId,\n    isLoggedIn,\n    isAdmin,\n    superAdmin,\n    isSubscribed,\n    setSubscription\n  };\n};\n_s(useAuth, \"uPw0kkTtuB05dHuHtBUft/vMj3c=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useContext","logoutTimer","useAuth","_s","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","superAdmin","setSuperAdmin","isSubscribed","setIsSubscribed","setSubscription","subscription","console","log","login","uid","expirationDate","userType","super_admin","isSuperAdmin","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"sources":["C:/Users/Arnav/IdeaProjects/Adore/React_online_Store/frontend/src/hooks/auth-hook.js"],"sourcesContent":["\r\nimport {useState, useEffect, useCallback, useContext} from 'react';\r\n\r\nlet logoutTimer;\r\nexport const useAuth=()=>{\r\n    const [token, setToken]= useState(null);\r\n    const [tokenExpirationDate, setTokenExpirationDate]= useState(null);\r\n    const [userId, setUserId]= useState(null);\r\n    const [isLoggedIn, setIsLoggedIn]= useState(false);\r\n    const [isAdmin, setIsAdmin]= useState(false);\r\n    const [superAdmin, setSuperAdmin]= useState(false);\r\n    const [isSubscribed,setIsSubscribed]= useState(null);\r\n\r\n    const setSubscription=useCallback((subscription)=>{\r\n        console.log('setting notification pref ',subscription);\r\n        setIsSubscribed(subscription);\r\n    });\r\n\r\n    const login=useCallback((uid, token, expirationDate,userType,super_admin, isSubscribed)=> {\r\n    console.log(uid, expirationDate, userType, isSubscribed);\r\n\r\n    /*if(super_admin===null)\r\n          super_admin=JSON.parse(localStorage.getItem('superAdmin'))||false;\r\n      if(isSubscribed===null)\r\n        isSubscribed=JSON.parse(localStorage.getItem('isSubscribed'));\r\n    console.log(super_admin, isSubscribed);*/\r\n      setToken(token);\r\n      setUserId(uid);\r\n      setIsLoggedIn(true);\r\n      setIsAdmin(userType==='admin');\r\n      setIsSubscribed(isSubscribed);\r\n\r\n\r\n      if(typeof(super_admin)==='string'){\r\n        const isSuperAdmin=(super_admin===\"true\");\r\n        setSuperAdmin(isSuperAdmin);\r\n      }\r\n      else{\r\n        console.log(super_admin);\r\n        setSuperAdmin(super_admin);\r\n      }\r\n\r\n      console.log(isLoggedIn, isAdmin,superAdmin, isSubscribed);\r\n      const tokenExpirationDate= expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n      setTokenExpirationDate(tokenExpirationDate);\r\n  console.log(\"storing in local storage\",superAdmin);\r\n      localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n      userId: uid,\r\n      token: token,\r\n      expiration: tokenExpirationDate.toISOString(),\r\n      userType: userType,\r\n      superAdmin: superAdmin,\r\n      isSubscribed: isSubscribed\r\n      }));\r\n    },[]);\r\n\r\n    const logout=useCallback(()=>{\r\n    console.log(\"hook logout \");\r\n        setToken(null);\r\n        setIsLoggedIn(false);\r\n        setIsSubscribed(false);\r\n        setIsAdmin(false);\r\n        setSuperAdmin(false);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n\r\n        localStorage.removeItem('userData');\r\n        localStorage.removeItem('cartId');\r\n        localStorage.removeItem('orders');\r\n        localStorage.removeItem('Wishlist');\r\n        localStorage.removeItem('Notifications');\r\n        localStorage.removeItem('avatar');\r\n        localStorage.removeItem('products');\r\n\r\n    },[]);\r\n\r\n    useEffect(()=>{                                                                             //auto logout\r\n        if(token && tokenExpirationDate){\r\n            const remainingTime = tokenExpirationDate.getTime()-new Date().getTime();\r\n            //console.log(\"remaining time \",remainingTime);\r\n            logoutTimer=setTimeout(logout,remainingTime);\r\n        }else{\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    },[token, tokenExpirationDate, logout]);\r\n\r\n    useEffect(()=>{\r\n    console.log(\"auto-login\");\r\n    const storedData=JSON.parse(localStorage.getItem('userData'));\r\n    console.log(\"page refresh\");\r\n        if(storedData && storedData.token && new Date(storedData.expiration) > new Date()){\r\n            /*const isSuperAdmin = typeof storedData.superAdmin === 'boolean'\r\n            ? storedData.superAdmin\r\n            : storedData.superAdmin === \"true\";\r\n            console.log(isSuperAdmin);*/\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration),storedData.userType, storedData.superAdmin, storedData.isSubscribed);\r\n        }\r\n    },[login]);\r\n\r\n\r\n\r\n    return {token, login, logout, userId, isLoggedIn, isAdmin,superAdmin, isSubscribed, setSubscription};\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}