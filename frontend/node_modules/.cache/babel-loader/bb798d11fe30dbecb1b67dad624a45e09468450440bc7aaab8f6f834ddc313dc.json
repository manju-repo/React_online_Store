{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\FabricDetail.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams, redirect } from 'react-router-dom';\nimport classes from './FabricItem.module.css';\nimport FabricItemOrder from './FabricItemOrder';\nimport FabricItem from './FabricItem';\nimport FabricsList from './FabricsList';\nimport { uiActions } from '../Store/ui_slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FabricDetailPage() {\n  _s();\n  const [fabric, setFabric] = useState([]);\n  const [fabrics, setFabrics] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    fabricId,\n    category\n  } = useParams();\n  useEffect(() => {\n    console.log(fabricId, category);\n    const loadFabric = async dispatch => {\n      if (fabrics) {\n        setFabric(fabrics.filter(fabric => fabrics._id === fabricId));\n        console.log(fabric);\n      }\n      /*try{\r\n          const response=await fetch('http://localhost:5000/fabrics/'+fabricId);\r\n          if(! response.ok){\r\n              throw Error('Could not load selected fabric');\r\n          }\r\n          const resData=await response.json();\r\n          console.log(resData);\r\n          setFabric(resData);\r\n      }\r\n      catch(error){\r\n          console.log(error);\r\n           dispatch(\r\n              uiActions.showNotification({\r\n              status: 'error',\r\n              title:  'Error!',\r\n              message: 'Could not load selected fabric',\r\n            })\r\n          );\r\n            console.log(error);\r\n      }*/\n    };\n    const loadFabrics = async dispatch => {\n      try {\n        //console.log(fabric.category);\n        const response = await fetch('http://localhost:5000/' + category);\n        if (!response.ok) throw Error('Could not load items');\n        const resData = await response.json();\n        setFabrics(resData);\n        console.log(fabrics);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    //loadFabric();\n    loadFabrics();\n    loadFabric();\n    return () => {\n      dispatch(uiActions.clearNotification());\n    };\n  }, [fabrics, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [fabric && /*#__PURE__*/_jsxDEV(FabricItem, {\n      item: fabric\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), fabrics && /*#__PURE__*/_jsxDEV(FabricsList, {\n      list: fabrics,\n      category: fabric.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n}\n_s(FabricDetailPage, \"K60ygoR63uXl1RGOnCFpuL19/yM=\", false, function () {\n  return [useDispatch, useParams];\n});\n_c = FabricDetailPage;\nexport default FabricDetailPage;\nvar _c;\n$RefreshReg$(_c, \"FabricDetailPage\");","map":{"version":3,"names":["useState","useEffect","useDispatch","useParams","redirect","classes","FabricItemOrder","FabricItem","FabricsList","uiActions","jsxDEV","_jsxDEV","Fragment","_Fragment","FabricDetailPage","_s","fabric","setFabric","fabrics","setFabrics","dispatch","fabricId","category","console","log","loadFabric","filter","_id","loadFabrics","response","fetch","ok","Error","resData","json","error","clearNotification","children","item","fileName","_jsxFileName","lineNumber","columnNumber","list","_c","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/components/FabricDetail.js"],"sourcesContent":["import { useState, useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useParams, redirect} from 'react-router-dom';\r\nimport classes from './FabricItem.module.css';\r\nimport FabricItemOrder from './FabricItemOrder';\r\nimport FabricItem from './FabricItem';\r\nimport FabricsList from './FabricsList';\r\nimport {uiActions} from '../Store/ui_slice';\r\n\r\nfunction FabricDetailPage(){\r\nconst [fabric,setFabric]=useState([]);\r\nconst [fabrics,setFabrics]=useState([]);\r\nconst dispatch=useDispatch();\r\nconst {fabricId,category}=useParams();\r\n useEffect(()=>{\r\n console.log(fabricId,category);\r\n\r\n        const loadFabric=async(dispatch)=>{\r\n        if(fabrics){\r\n            setFabric(fabrics.filter(fabric=>fabrics._id===fabricId));\r\n            console.log(fabric);\r\n        }\r\n        /*try{\r\n            const response=await fetch('http://localhost:5000/fabrics/'+fabricId);\r\n            if(! response.ok){\r\n                throw Error('Could not load selected fabric');\r\n            }\r\n            const resData=await response.json();\r\n            console.log(resData);\r\n            setFabric(resData);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n             dispatch(\r\n                uiActions.showNotification({\r\n                status: 'error',\r\n                title:  'Error!',\r\n                message: 'Could not load selected fabric',\r\n              })\r\n            );\r\n              console.log(error);\r\n        }*/\r\n    }\r\n    const loadFabrics=async(dispatch)=>{\r\n        try{\r\n        //console.log(fabric.category);\r\n            const response=await fetch('http://localhost:5000/'+category);\r\n            if(! response.ok)\r\n                throw Error('Could not load items');\r\n\r\n            const resData=await response.json();\r\n            setFabrics(resData);\r\n            console.log(fabrics);\r\n\r\n        }catch(error){\r\n          console.log(error);\r\n        }\r\n    }\r\n    //loadFabric();\r\n    loadFabrics();\r\n    loadFabric();\r\n     return() => {\r\n       dispatch(uiActions.clearNotification());\r\n     }\r\n },[fabrics,dispatch]);\r\n\r\n return(<>\r\n {fabric && < FabricItem item={fabric}/>}\r\n {fabrics && < FabricsList list={fabrics} category={fabric.category}/>}\r\n\r\n </>);\r\n}\r\n\r\nexport default FabricDetailPage;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,SAAQC,WAAW,QAAO,aAAa;AACvC,SAAQC,SAAS,EAAEC,QAAQ,QAAO,kBAAkB;AACpD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAAQC,SAAS,QAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,gBAAgBA,CAAA,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAACjB,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACkB,OAAO,EAACC,UAAU,CAAC,GAACnB,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAMoB,QAAQ,GAAClB,WAAW,CAAC,CAAC;EAC5B,MAAM;IAACmB,QAAQ;IAACC;EAAQ,CAAC,GAACnB,SAAS,CAAC,CAAC;EACpCF,SAAS,CAAC,MAAI;IACdsB,OAAO,CAACC,GAAG,CAACH,QAAQ,EAACC,QAAQ,CAAC;IAEvB,MAAMG,UAAU,GAAC,MAAML,QAAQ,IAAG;MAClC,IAAGF,OAAO,EAAC;QACPD,SAAS,CAACC,OAAO,CAACQ,MAAM,CAACV,MAAM,IAAEE,OAAO,CAACS,GAAG,KAAGN,QAAQ,CAAC,CAAC;QACzDE,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;MACvB;MACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,CAAC;IACD,MAAMY,WAAW,GAAC,MAAMR,QAAQ,IAAG;MAC/B,IAAG;QACH;QACI,MAAMS,QAAQ,GAAC,MAAMC,KAAK,CAAC,wBAAwB,GAACR,QAAQ,CAAC;QAC7D,IAAG,CAAEO,QAAQ,CAACE,EAAE,EACZ,MAAMC,KAAK,CAAC,sBAAsB,CAAC;QAEvC,MAAMC,OAAO,GAAC,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACnCf,UAAU,CAACc,OAAO,CAAC;QACnBV,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;MAExB,CAAC,QAAMiB,KAAK,EAAC;QACXZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;MACpB;IACJ,CAAC;IACD;IACAP,WAAW,CAAC,CAAC;IACbH,UAAU,CAAC,CAAC;IACX,OAAM,MAAM;MACVL,QAAQ,CAACX,SAAS,CAAC2B,iBAAiB,CAAC,CAAC,CAAC;IACzC,CAAC;EACL,CAAC,EAAC,CAAClB,OAAO,EAACE,QAAQ,CAAC,CAAC;EAErB,oBAAOT,OAAA,CAAAE,SAAA;IAAAwB,QAAA,GACNrB,MAAM,iBAAIL,OAAA,CAAEJ,UAAU;MAAC+B,IAAI,EAAEtB;IAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACtCxB,OAAO,iBAAIP,OAAA,CAAEH,WAAW;MAACmC,IAAI,EAAEzB,OAAQ;MAACI,QAAQ,EAAEN,MAAM,CAACM;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAEnE,CAAC;AACJ;AAAC3B,EAAA,CA9DQD,gBAAgB;EAAA,QAGVZ,WAAW,EACAC,SAAS;AAAA;AAAAyC,EAAA,GAJ1B9B,gBAAgB;AAgEzB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}