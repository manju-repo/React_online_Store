{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialCartState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          totalQuantity: 1\n        });\n      }\n    },\n    removeFromCart(state, action) {}\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","changed","cartSlice","name","reducers","replaceCart","state","action","payload","addToCart","newItem","existingItem","find","item","id","push","removeFromCart","cartActions","actions"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/Store/cart_slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst initialCartState={ items:[],totalQuantity:0,changed:false };\r\n\r\nconst cartSlice=createSlice({\r\n    name:'cart',\r\n    initialCartState,\r\n    reducers:{\r\n        replaceCart(state,action){\r\n            state.totalQuantity=action.payload.totalQuantity;\r\n            state.items=action.payload.items;\r\n        },\r\n        addToCart(state,action){\r\n            const newItem=action.payload;\r\n            const existingItem=state.items.find((item)=>item.id===newItem.id);\r\n            state.totalQuantity++;\r\n            state.changed=true;\r\n            if(!existingItem){\r\n            state.items.push({\r\n                id:newItem.id,\r\n                totalQuantity:1,\r\n                \r\n            })\r\n            }\r\n        },\r\n        removeFromCart(state,action){\r\n        },\r\n    }\r\n});\r\n\r\n\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,gBAAgB,GAAC;EAAEC,KAAK,EAAC,EAAE;EAACC,aAAa,EAAC,CAAC;EAACC,OAAO,EAAC;AAAM,CAAC;AAEjE,MAAMC,SAAS,GAACL,WAAW,CAAC;EACxBM,IAAI,EAAC,MAAM;EACXL,gBAAgB;EAChBM,QAAQ,EAAC;IACLC,WAAWA,CAACC,KAAK,EAACC,MAAM,EAAC;MACrBD,KAAK,CAACN,aAAa,GAACO,MAAM,CAACC,OAAO,CAACR,aAAa;MAChDM,KAAK,CAACP,KAAK,GAACQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACpC,CAAC;IACDU,SAASA,CAACH,KAAK,EAACC,MAAM,EAAC;MACnB,MAAMG,OAAO,GAACH,MAAM,CAACC,OAAO;MAC5B,MAAMG,YAAY,GAACL,KAAK,CAACP,KAAK,CAACa,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAGJ,OAAO,CAACI,EAAE,CAAC;MACjER,KAAK,CAACN,aAAa,EAAE;MACrBM,KAAK,CAACL,OAAO,GAAC,IAAI;MAClB,IAAG,CAACU,YAAY,EAAC;QACjBL,KAAK,CAACP,KAAK,CAACgB,IAAI,CAAC;UACbD,EAAE,EAACJ,OAAO,CAACI,EAAE;UACbd,aAAa,EAAC;QAElB,CAAC,CAAC;MACF;IACJ,CAAC;IACDgB,cAAcA,CAACV,KAAK,EAACC,MAAM,EAAC,CAC5B;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAMU,WAAW,GAACf,SAAS,CAACgB,OAAO;AAC1C,eAAehB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}