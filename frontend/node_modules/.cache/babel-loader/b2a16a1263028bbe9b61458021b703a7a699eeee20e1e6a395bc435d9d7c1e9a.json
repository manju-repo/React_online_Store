{"ast":null,"code":"var _jsxFileName = \"C:\\\\manjusha\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport { AuthForm } from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 8\n  }, this);\n};\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupported mode.'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  authData.firstName = data.get('first_ame');\n  const response = await fetch('http://localhost:5000/' + mode, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not authenticate user.'\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  const token = resData.token;\n  localStorage.setItem('token', token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem('expiration', expiration.toISOString);\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","json","message","status","data","formData","authData","email","password","firstName","response","fetch","method","headers","body","JSON","stringify","ok","resData","token","localStorage","setItem","expiration","Date","setHours","getHours","toISOString","$RefreshReg$"],"sources":["C:/manjusha/React/12-adv-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import {AuthForm} from '../components/AuthForm';\r\n\r\n\r\nconst AuthenticationPage=()=>{\r\nreturn <AuthForm/>;\r\n}\r\nexport default AuthenticationPage;\r\n\r\nexport async function action({request}){\r\n    const searchParams=new URL(request.url).searchParams;\r\n    const mode=searchParams.get('mode')|| 'login';\r\n    if (mode !== 'login' && mode !== 'signup') {\r\n        throw json({ message: 'Unsupported mode.' }, { status: 422 });\r\n     }\r\n     const data = await request.formData();\r\n     const authData={\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n     };\r\n     authData.firstName= data.get('first_ame');\r\n\r\n     const response= await fetch('http://localhost:5000/'+ mode, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(authData)\r\n     });\r\n\r\n      if (response.status === 422 || response.status === 401) {\r\n         return response;\r\n       }\r\n\r\n       if (!response.ok) {\r\n         throw json({ message: 'Could not authenticate user.' }, { status: 500 });\r\n       }\r\n       const resData= await response.json();\r\n       const token=resData.token;\r\n\r\n       localStorage.setItem('token', token);\r\n       const expiration=new Date();\r\n       expiration.setHours(expiration.getHours()+1);\r\n       localStorage.setItem('expiration',expiration.toISOString);\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,kBAAkB,GAACA,CAAA,KAAI;EAC7B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAClB,CAAC;AAAAC,EAAA,GAFKL,kBAAkB;AAGxB,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EACnC,MAAMC,YAAY,GAAC,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACpD,MAAMG,IAAI,GAACH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAG,OAAO;EAC7C,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACvC,MAAME,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAoB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAChE;EACA,MAAMC,IAAI,GAAG,MAAMT,OAAO,CAACU,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAC;IACZC,KAAK,EAAEH,IAAI,CAACJ,GAAG,CAAC,OAAO,CAAC;IACxBQ,QAAQ,EAAEJ,IAAI,CAACJ,GAAG,CAAC,UAAU;EAChC,CAAC;EACDM,QAAQ,CAACG,SAAS,GAAEL,IAAI,CAACJ,GAAG,CAAC,WAAW,CAAC;EAEzC,MAAMU,QAAQ,GAAE,MAAMC,KAAK,CAAC,wBAAwB,GAAEZ,IAAI,EAAE;IAC3Da,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,QAAQ;EAC9B,CAAC,CAAC;EAED,IAAII,QAAQ,CAACP,MAAM,KAAK,GAAG,IAAIO,QAAQ,CAACP,MAAM,KAAK,GAAG,EAAE;IACrD,OAAOO,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMhB,IAAI,CAAC;MAAEC,OAAO,EAAE;IAA+B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC1E;EACA,MAAMe,OAAO,GAAE,MAAMR,QAAQ,CAACT,IAAI,CAAC,CAAC;EACpC,MAAMkB,KAAK,GAACD,OAAO,CAACC,KAAK;EAEzBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpC,MAAMG,UAAU,GAAC,IAAIC,IAAI,CAAC,CAAC;EAC3BD,UAAU,CAACE,QAAQ,CAACF,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC;EAC5CL,YAAY,CAACC,OAAO,CAAC,YAAY,EAACC,UAAU,CAACI,WAAW,CAAC;AAEhE;AAAC,IAAAjC,EAAA;AAAAkC,YAAA,CAAAlC,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}